<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="..\..\..\..\Pessoas sg\PecRetrato.frx" BaseReportAbsolutePath="..\..\..\Pessoas sg\PecRetrato.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="09/04/2025 09:02:42" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
       
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);
      string periodo = (String)Report.GetParameterValue(&quot;periodo&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtOrgao.Top = (!string.IsNullOrWhiteSpace(periodo)) ? (float) 56.7 : (float) 37.8;
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtOrgao.Top = (!string.IsNullOrWhiteSpace(periodo)) ? (float) 75.6 : (float) 56.7;
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtOrgao.Top = (!string.IsNullOrWhiteSpace(periodo)) ? (float) 75.6 : (float) 56.7;
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
        
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }  
    
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }  
      
    private void parent_FooterAssinante_BeforePrint(object sender, EventArgs e)
    {
      TxtAssinante1.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel1&quot;));
      TxtAssinante2.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel2&quot;));
      TxtAssinante3.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel3&quot;));
      TxtAssinante4.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel4&quot;));
    }
//===========================================================================================================================================//    

    private void bndReceita_BeforePrint(object sender, EventArgs e)
    {
      if (Convert.ToInt32(Report.GetVariableValue(&quot;SqlReceita.nivel&quot;)) == 1)
      {
        SqlReceitaVL_ARRECADADO.Font = new Font(SqlReceitaVL_ARRECADADO.Font, FontStyle.Bold);
        SqlReceitaCD_PLANO_CONTA_REL.Left = 8;
      }
      else
      {
        SqlReceitaVL_ARRECADADO.Font = new Font(SqlReceitaVL_ARRECADADO.Font, FontStyle.Regular);
        SqlReceitaCD_PLANO_CONTA_REL.Left = 20;
      }
    }
//===========================================================================================================================================//    

    private void bndDeducao_BeforePrint(object sender, EventArgs e)
    {
      if (Convert.ToInt32(Report.GetVariableValue(&quot;SqlDeducao.nivel&quot;)) == 1)
      {
        SqlDeducaoVL_ARRECADADO.Font = new Font(SqlDeducaoVL_ARRECADADO.Font, FontStyle.Bold);
        SqlDeducaoDESCRICAO.Left = 8;
      }
      else
      {
        SqlDeducaoVL_ARRECADADO.Font = new Font(SqlDeducaoVL_ARRECADADO.Font, FontStyle.Regular);
        SqlDeducaoDESCRICAO.Left = 20;
      }
    }
//===========================================================================================================================================//    
  
  }
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAf45SGh+1JQ06HfUCwVjdXLyOtFr5FbmNWNqr1W8I2tPRGoPzSsFGNAQf85ceZvCGogRGJncwLI0VhpBoFVj/qSQKkbhjw8vK4wcDZgU0qxbNd6J4USC8D/STKiChH27g=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" DataType="System.String"/>
        <Column Name="site" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="SqlAssinante" DataType="System.Int32" PropName="Table" Enabled="true" SelectCommand="SELECT TRIM(C1.NOME_RAZAO) AS NOME_RESPONSAVEL1&#13;&#10;     , C.CARGO AS CARGO_RESPONSAVEL1&#13;&#10;     , CAST(C.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL1&#13;&#10;     , CAST(C3.MATRICULA AS VARCHAR(20)) AS MATRICULA1&#13;&#10;&#13;&#10;     , TRIM(D1.NOME_RAZAO) AS NOME_RESPONSAVEL2&#13;&#10;     , D.CARGO AS CARGO_RESPONSAVEL2&#13;&#10;     , CAST(D.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL2&#13;&#10;     , CAST(D3.MATRICULA AS VARCHAR(20)) AS MATRICULA2&#13;&#10;&#13;&#10;     , TRIM(E1.NOME_RAZAO) AS NOME_RESPONSAVEL3&#13;&#10;     , E.CARGO AS CARGO_RESPONSAVEL3&#13;&#10;     , CAST(E.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL3&#13;&#10;     , CAST(E3.MATRICULA AS VARCHAR(20)) AS MATRICULA3&#13;&#10;&#13;&#10;     , TRIM(F1.NOME_RAZAO) AS NOME_RESPONSAVEL4&#13;&#10;     , F.CARGO AS CARGO_RESPONSAVEL4&#13;&#10;     , CAST(F.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL4&#13;&#10;     , CAST(F3.MATRICULA AS VARCHAR(20)) AS MATRICULA4&#13;&#10;&#13;&#10;     , CAST(MAKE_DATE(CAST(:ANO AS INTEGER), CAST(:MES AS INTEGER), CAST(:DIA AS INTEGER)) AS TIMESTAMP) AS DT_RELATORIO&#13;&#10;&#13;&#10;  FROM SIS_RELATORIO R&#13;&#10;       LEFT JOIN PEC_RELATORIO           A  ON A.ID_RELATORIO           = R.ID_RELATORIO&#13;&#10;       LEFT JOIN PEC_RELATORIO_ASSINANTE B  ON B.ID_RELATORIO_GRUPO     = A.ID_RELATORIO_GRUPO&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL C  ON C.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_01&#13;&#10;       LEFT JOIN SIS_PESSOA              C1 ON C1.ID_PESSOA             = C.ID_PESSOA&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL D  ON D.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_02&#13;&#10;       LEFT JOIN SIS_PESSOA              D1 ON D1.ID_PESSOA             = D.ID_PESSOA&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL E  ON E.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_03&#13;&#10;       LEFT JOIN SIS_PESSOA              E1 ON E1.ID_PESSOA             = E.ID_PESSOA&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL F  ON F.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_04&#13;&#10;       LEFT JOIN SIS_PESSOA              F1 ON F1.ID_PESSOA             = F.ID_PESSOA&#13;&#10;&#13;&#10;&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(C1.DOCUMENTO) C3 ON 1=1&#13;&#10;                                                         AND C3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND C3.DT_DEMISSAO IS NULL&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(D1.DOCUMENTO) D3 ON 1=1&#13;&#10;                                                         AND D3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND D3.DT_DEMISSAO IS NULL&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(E1.DOCUMENTO) E3 ON 1=1&#13;&#10;                                                         AND E3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND E3.DT_DEMISSAO IS NULL&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(F1.DOCUMENTO) F3 ON 1=1&#13;&#10;                                                         AND F3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND F3.DT_DEMISSAO IS NULL&#13;&#10;&#13;&#10; WHERE R.ID_MODULO    = :ID_MODULO&#13;&#10;   AND R.CD_RELATORIO = :CD_RELATORIO&#13;&#10;   AND R.GERADO       = 0&#13;&#10;   AND B.DT_INICIO   &lt;= MAKE_DATE(CAST(:ANO AS INTEGER), 1, 1) &#13;&#10;                        + CAST((CAST((CAST(:MES AS INTEGER) -1) AS varchar) || ' MONTH') AS interval) &#13;&#10;                        + CAST((CAST((CAST(:DIA AS INTEGER) -1) AS varchar) || ' DAY')   AS interval)&#13;&#10;   AND A.ID_ENTIDADE  = :ID_ENTIDADE&#13;&#10; ORDER BY&#13;&#10;       B.DT_INICIO DESC&#13;&#10; LIMIT 1">
        <Column Name="nome_responsavel1" DataType="System.String"/>
        <Column Name="cargo_responsavel1" DataType="System.String"/>
        <Column Name="documento_responsavel1" DataType="System.String"/>
        <Column Name="matricula1" DataType="System.String"/>
        <Column Name="nome_responsavel2" DataType="System.String"/>
        <Column Name="cargo_responsavel2" DataType="System.String"/>
        <Column Name="documento_responsavel2" DataType="System.String"/>
        <Column Name="matricula2" DataType="System.String"/>
        <Column Name="nome_responsavel3" DataType="System.String"/>
        <Column Name="cargo_responsavel3" DataType="System.String"/>
        <Column Name="documento_responsavel3" DataType="System.String"/>
        <Column Name="matricula3" DataType="System.String"/>
        <Column Name="nome_responsavel4" DataType="System.String"/>
        <Column Name="cargo_responsavel4" DataType="System.String"/>
        <Column Name="documento_responsavel4" DataType="System.String"/>
        <Column Name="matricula4" DataType="System.String"/>
        <Column Name="dt_relatorio" DataType="System.DateTime"/>
        <CommandParameter Name="ANO" DataType="22" Expression="ExtractYear([dataAssinante])"/>
        <CommandParameter Name="MES" DataType="22" Expression="ExtractMonth([dataAssinante])"/>
        <CommandParameter Name="DIA" DataType="22" Expression="ExtractDay([dataAssinante])"/>
        <CommandParameter Name="ID_MODULO" DataType="9" Expression="[idModulo]"/>
        <CommandParameter Name="CD_RELATORIO" DataType="9" Expression="[codigoRelatorio]"/>
        <CommandParameter Name="ID_ENTIDADE" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlReceita" DataType="System.Int32" Enabled="true" SelectCommand="SELECT CASE WHEN B.ID_SEQUENCIA &lt; 3 THEN UDF_DIGITS(A.CD_PLANO_CONTA)&#13;&#10;            WHEN B.ID_SEQUENCIA = 3 THEN UDF_DIGITS(A.CD_PLANO_CONTA) || '0.0'&#13;&#10;            WHEN B.ID_SEQUENCIA = 4 THEN UDF_DIGITS(A.CD_PLANO_CONTA) || COALESCE(A.CD_TP_DEDUCAO, '0.0')&#13;&#10;       END  AS CHAVE&#13;&#10;&#13;&#10;     , B.ID_SEQUENCIA AS NIVEL&#13;&#10;&#13;&#10;     , CASE WHEN B.ID_SEQUENCIA = 1 THEN A.CD_PLANO_CONTA_REL || ' - ' || A.DS_PLANO_CONTA&#13;&#10;            WHEN B.ID_SEQUENCIA = 2 THEN '     ' || A.CD_PLANO_CONTA_REL || ' - ' || A.DS_PLANO_CONTA&#13;&#10;            WHEN B.ID_SEQUENCIA = 3 THEN '          0.0 - Receita Bruta'&#13;&#10;            WHEN B.ID_SEQUENCIA = 4 THEN '          ' || A.CD_TP_DEDUCAO || ' - ' ||gtlt;= 4&#13;&#10; WHERE (A.NIVEL = 1 AND B.ID_SEQUENCIA = 1                                  )&#13;&#10;    OR (A.NIVEL = 2 AND B.ID_SEQUENCIA = 2                                  )&#13;&#10;    OR (A.NIVEL = 2 AND B.ID_SEQUENCIA = 3 AND A.TEM_DEDUTORA  = 1          )&#13;&#10;    OR (A.NIVEL = 2 AND B.ID_SEQUENCIA = 4 AND A.CD_TP_DEDUCAO IS NOT NULL  )&#13;&#10; GROUP BY&#13;&#10;       1,2,3&#13;&#10; ORDER BY &#13;&#10;       1">
        <Column Name="chave" DataType="System.String"/>
        <Column Name="nivel" DataType="System.Int32"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="vl_arrecadado" DataType="System.Double"/>
        <CommandParameter Name="ID_ENTIDADE" DataType="9" Expression="[idEntidade]"/>
        <CommandParameter Name="CP_ANO" DataType="9" Expression="[cpAno]"/>
        <CommandParameter Name="CP_MES" DataType="9" Expression="[cpMes]"/>
        <CommandParameter Name="ID_ESTADO" DataType="9" Expression="[idEstado]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlDeducao" DataType="System.Int32" Enabled="true" SelectCommand="SELECT CASE WHEN B.ID_SEQUENCIA &lt; 3 THEN UDF_DIGITS(A.CD_PLANO_CONTA)&#13;&#10;            WHEN B.ID_SEQUENCIA = 3 THEN UDF_DIGITS(A.CD_PLANO_CONTA) || '0.0'&#13;&#10;            WHEN B.ID_SEQUENCIA = 4 THEN UDF_DIGITS(A.CD_PLANO_CONTA) || COALESCE(A.CD_TP_DEDUCAO, '0.0')&#13;&#10;       END  AS CHAVE&#13;&#10;&#13;&#10;     , B.ID_SEQUENCIA AS NIVEL&#13;&#10;&#13;&#10;     , CASE WHEN B.ID_SEQUENCIA = 1 THEN A.CD_PLANO_CONTA_REL || ' - ' || A.DS_PLANO_CONTA&#13;&#10;            WHEN B.ID_SEQUENCIA = 2 THEN '     ' || A.CD_PLANO_CONTA_REL || ' - ' || A.DS_PLANO_CONTA&#13;&#10;            WHEN B.ID_SEQUENCIA = 3 THEN '          0.0 - Receita Bruta'&#13;&#10;            WHEN B.ID_SEQUENCIA = 4 THEN '          ' || A.CD_TP_DEDUCAO || ' - ' ||gtlt;= 4&#13;&#10; WHERE (A.NIVEL = 1 AND B.ID_SEQUENCIA = 1                                  )&#13;&#10;    OR (A.NIVEL &gt; 1 AND B.ID_SEQUENCIA = 2                                  )&#13;&#10;    OR (A.NIVEL &gt; 1 AND B.ID_SEQUENCIA = 3 AND A.TEM_DEDUTORA  = 1          )&#13;&#10;    OR (A.NIVEL &gt; 1 AND B.ID_SEQUENCIA = 4 AND A.CD_TP_DEDUCAO IS NOT NULL  )&#13;&#10; GROUP BY&#13;&#10;       1,2,3&#13;&#10; ORDER BY &#13;&#10;       1">
        <Column Name="chave" DataType="System.String"/>
        <Column Name="nivel" DataType="System.Int32"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="vl_arrecadado" DataType="System.Double"/>
        <CommandParameter Name="ID_ENTIDADE" DataType="9" Expression="[idEntidade]"/>
        <CommandParameter Name="CP_ANO" DataType="9" Expression="[cpAno]"/>
        <CommandParameter Name="CP_MES" DataType="9" Expression="[cpMes]"/>
        <CommandParameter Name="ID_ESTADO" DataType="9" Expression="[idEstado]"/>
      </TableDataSource>
      <TableDataSource Name="Table2" Alias="SqlRetencaoPasep" DataType="System.Int32" Enabled="true" SelectCommand="SELECT B1.CD_PLANO_CONTA_REL&#13;&#10;     , B1.DS_PLANO_CONTA&#13;&#10;     , B1.NIVEL                            &#13;&#10;     , ROUND(SUM(A1.VL_ARRECADADO), 2)    AS VL_ARRECADADO&#13;&#10;     , ROUND(SUM(A1.VL_ARRECADADO)/100,2) AS VL_RETIDO                           &#13;&#10;  FROM (&#13;&#10;        SELECT B2.ID_ESTADO&#13;&#10;             , B2.CP_ANO&#13;&#10;             , B2.ID_PLANO_CONTA_CP&#13;&#10;             , B2.ID_PLANO_CONTA_PAI&#13;&#10;             , B2.NIVEL&#13;&#10;             , A2.ID_TP_DEDUCAO&#13;&#10;             , A2.NIVEL_EXIBICAO&#13;&#10;             , SUM(A2.VL_ARRECADADO ) AS VL_ARRECADADO&#13;&#10;          FROM ( &#13;&#10;                SELECT B3.ID_ESTADO&#13;&#10;                     , B3.CP_ANO&#13;&#10;                     , B3.ID_PLANO_CONTA_CP&#13;&#10;                     , B3.ID_PLANO_CONTA_PAI&#13;&#10;                     , B3.NIVEL&#13;&#10;                     , A3.ID_TP_DEDUCAO&#13;&#10;                     , A3.NIVEL_EXIBICAO&#13;&#10;                     , SUM(A3.VL_ARRECADADO ) AS VL_ARRECADADO&#13;&#10;                  FROM ( &#13;&#10;                        SELECT B4.ID_ESTADO&#13;&#10;                             , B4.CP_ANO&#13;&#10;                             , B4.ID_PLANO_CONTA_CP&#13;&#10;                             , B4.ID_PLANO_CONTA_PAI&#13;&#10;                             , B4.NIVEL&#13;&#10;                             , A4.ID_TP_DEDUCAO&#13;&#10;                             , A4.NIVEL_EXIBICAO&#13;&#10;                             , SUM(A4.VL_ARRECADADO ) AS VL_ARRECADADO&#13;&#10;                          FROM ( &#13;&#10;                                SELECT B5.ID_ESTADO&#13;&#10;                                     , B5.CP_ANO&#13;&#10;                                     , B5.ID_PLANO_CONTA_CP&#13;&#10;                                     , B5.ID_PLANO_CONTA_PAI&#13;&#10;                                     , B5.NIVEL&#13;&#10;                                     , A5.ID_TP_DEDUCAO&#13;&#10;                                     , a
        <Column Name="cd_plano_conta_rel" DataType="System.String"/>
        <Column Name="ds_plano_conta" DataType="System.String"/>
        <Column Name="nivel" DataType="System.Int32"/>
        <Column Name="vl_arrecadado" DataType="System.Double"/>
        <Column Name="vl_retido" DataType="System.Double"/>
        <CommandParameter Name="CP_ANO" DataType="9" Expression="[cpAno]"/>
        <CommandParameter Name="CP_MES" DataType="9" Expression="[cpMes]"/>
        <CommandParameter Name="ID_ENTIDADE" DataType="9" Expression="[idEntidade]"/>
        <CommandParameter Name="ID_ESTADO" DataType="9" Expression="[idEstado]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Quadro de Apuração Mensal do PASEP&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="2"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="40"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="31"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="2468"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
    <Parameter Name="formato" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="codigoRelatorio" DataType="System.Int64" Expression="268"/>
    <Parameter Name="competencia" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="orgao" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="dataAssinante" DataType="System.String" Expression="&quot;31/08/2025&quot;"/>
    <Parameter Name="cpAno" DataType="System.Int64" Expression="2025"/>
    <Parameter Name="cpMes" DataType="System.Int64" Expression="8"/>
    <Parameter Name="idEstado" DataType="System.Int64" Expression="26"/>
    <Total Name="total_receita" Expression="IIf([SqlReceita.nivel] == 1, [SqlReceita.vl_arrecadado],0)" Evaluator="bndReceita"/>
    <Total Name="total_deducao" Expression="IIf([SqlDeducao.nivel] == 1, [SqlDeducao.vl_arrecadado], 0)" Evaluator="bndDeducao"/>
    <Total Name="retencao_base" Expression="[SqlRetencaoPasep.vl_arrecadado]" Evaluator="Data3"/>
    <Total Name="retencao_retido" Expression="[SqlRetencaoPasep.vl_retido]" Evaluator="Data3"/>
    <Total Name="total_resumo_a" Expression="[SqlReceita.vl_arrecadado]" Evaluator="bndReceita" EvaluateCondition="[SqlReceita.nivel] == 1"/>
    <Total Name="total_a" Expression="[SqlDeducao.vl_arrecadado]" Evaluator="bndDeducao" EvaluateCondition="[SqlDeducao.nivel] == 1"/>
    <Total Name="total_resumo_b" Expression="[SqlReceita.vl_arrecadado]" Evaluator="bndReceita" EvaluateCondition="[SqlReceita.nivel] == 1"/>
    <Total Name="total_b" Expression="[SqlDeducao.vl_arrecadado]" Evaluator="bndDeducao" EvaluateCondition="[SqlDeducao.nivel] == 1"/>
    <Total Name="total_c" Expression="[SqlRetencaoPasep.vl_retido]" Evaluator="Data3"/>
    <Total Name="total_pasep" Expression="[SqlRetencaoPasep.vl_retido]" Evaluator="Data3"/>
  </Dictionary>
  <inherited Name="MainPage">
    <inherited Name="BndCabecalho">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="TxtOrgao"/>
      <inherited Name="BndFiltro">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <inherited Name="HeaderAssinante">
      <GroupHeaderBand Name="grpPasep" ZOrder="-1" Top="212.3" Width="718.2" Condition="1==1">
        <inherited Name="bndAssinante" Top="232.3" Height="9.45">
          <GroupHeaderBand Name="grpReceita" ZOrder="0" Top="261.75" Width="718.2" Height="18.14" Condition="1==1">
            <TextObject Name="Text13" Width="618.03" Height="18.14" Border.Lines="Right" Fill.Color="41, 82, 118" Text="I - RECEITAS (Inc. III, do art. 2º, da Lei nº 9.715/98)" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <TextObject Name="Text14" Left="618.03" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="VALOR EM R$" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <DataBand Name="bndReceita" Top="299.89" Width="718.2" Height="15.88" BeforePrintEvent="bndReceita_BeforePrint" DataSource="Table">
              <TextObject Name="SqlReceitaCD_PLANO_CONTA_REL" Width="618.03" Height="15.88" Text="[SqlReceita.descricao]" Font="Tahoma, 7pt">
                <Highlight>
                  <Condition Expression="[SqlReceita.nivel] == 1" Font="Tahoma, 7.2000003pt, style=Bold" ApplyTextFill="false" ApplyFont="true"/>
                </Highlight>
              </TextObject>
              <TextObject Name="SqlReceitaVL_ARRECADADO" Left="618.03" Width="100.17" Height="15.88" Text="[SqlReceita.vl_arrecadado]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 7pt">
                <Highlight>
                  <Condition Expression="[SqlReceita.vl_arrecadado] &lt; 0" Font="Arial, 10pt"/>
                  <Condition Expression="[SqlReceita.nivel] == 1" Font="Tahoma, 7.2000003pt, style=Bold" ApplyTextFill="false" ApplyFont="true"/>
                </Highlight>
              </TextObject>
            </DataBand>
            <GroupFooterBand Name="grfReceita" Top="335.77" Width="718.2" Height="37.8">
              <TextObject Name="Text17" Width="618.03" Height="18.14" Border.Lines="Right" Fill.Color="41, 82, 118" Text="TOTAL DAS RECEITAS (Inc. III, do art. 2º, da Lei nº 9.715/98)" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
              <TextObject Name="Text18" Left="618.03" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="[total_receita]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            </GroupFooterBand>
          </GroupHeaderBand>
          <GroupHeaderBand Name="grpDeducao" ZOrder="1" Top="393.57" Width="718.2" Height="18.9" Condition="1==1">
            <TextObject Name="Text19" Width="618.03" Height="18.14" Border.Lines="Right" Fill.Color="41, 82, 118" Text="II - RECEITAS DEDUZIDAS PARA APURAÇÃO DO PASEP" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <TextObject Name="Text20" Left="618.03" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="VALOR EM R$" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <DataBand Name="bndDeducao" Top="432.47" Width="718.2" Height="15.88" BeforePrintEvent="bndDeducao_BeforePrint" DataSource="Table1">
              <TextObject Name="SqlDeducaoDESCRICAO" Width="618.03" Height="15.88" Text="[SqlDeducao.descricao] - [SqlDeducao.nivel]" Font="Tahoma, 7pt">
                <Highlight>
                  <Condition Expression="[SqlDeducao.nivel] == 1" Font="Tahoma, 7.2000003pt, style=Bold" ApplyTextFill="false" ApplyFont="true"/>
                </Highlight>
              </TextObject>
              <TextObject Name="SqlDeducaoVL_ARRECADADO" Left="618.03" Width="100.17" Height="15.88" Text="[SqlDeducao.vl_arrecadado]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 7pt" TextFill.Color="Red">
                <Highlight>
                  <Condition Expression="Value &gt;= 0" TextFill.Color="Black" Font="Arial, 10pt"/>
                  <Condition Expression="[SqlDeducao.nivel] == 1" Font="Tahoma, 8.25pt, style=Bold" ApplyTextFill="false" ApplyFont="true"/>
                </Highlight>
              </TextObject>
            </DataBand>
            <GroupFooterBand Name="GroupFooter3" Top="468.35" Width="718.2" Height="37.8">
              <TextObject Name="Text23" Width="618.03" Height="18.14" Border.Lines="Right" Fill.Color="41, 82, 118" Text="TOTAL DAS RECEITAS DEDUZIDAS PARA APURAÇÃO DO PASEP" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
              <TextObject Name="Text24" Left="618.03" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="[total_deducao]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            </GroupFooterBand>
          </GroupHeaderBand>
          <GroupHeaderBand Name="grpRetencao" ZOrder="2" Top="526.15" Width="718.2" Height="18.9" Condition="1==1">
            <TextObject Name="Text25" Width="518.24" Height="18.14" Border.Lines="Right" Fill.Color="41, 82, 118" Text="III - RETENÇÕES DO PASEP NA FONTE" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <TextObject Name="Text26" Left="518.24" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="BASE EM R$" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <TextObject Name="Text27" Left="618.03" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="RETIDO EM R$" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            <DataBand Name="Data3" Top="565.05" Width="718.2" Height="15.88" DataSource="Table2">
              <TextObject Name="SqlRetencaoPasepCD_PLANO_CONTA_REL" Width="518.24" Height="15.88" Text="[SqlRetencaoPasep.cd_plano_conta_rel] - [SqlRetencaoPasep.ds_plano_conta]" VertAlign="Center" Font="Tahoma, 7pt">
                <Highlight>
                  <Condition Expression="[SqlRetencaoPasep.nivel] == 1" Font="Tahoma, 7.2000003pt, style=Bold" ApplyTextFill="false" ApplyFont="true"/>
                </Highlight>
              </TextObject>
              <TextObject Name="SqlRetencaoPasepVL_ARRECADADO" Left="518.24" Width="100.17" Height="15.88" Text="[SqlRetencaoPasep.vl_arrecadado]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="105, 157, 98"/>
              <TextObject Name="SqlRetencaoPasepVL_RETIDO" Left="618.03" Width="100.17" Height="15.88" Text="[SqlRetencaoPasep.vl_retido]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="Red"/>
            </DataBand>
            <GroupFooterBand Name="GroupFooter4" Top="600.93" Width="718.2" Height="18.9">
              <TextObject Name="Text31" Width="518.24" Height="18.14" Border.Lines="Right" Border.Color="White" Fill.Color="41, 82, 118" Text="TOTAL DAS RETENÇÕES DO PASEP NA FONTE" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
              <TextObject Name="Text32" Left="518.24" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="[retencao_base]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
              <TextObject Name="Text33" Left="618.03" Width="100.17" Height="18.14" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="[retencao_retido]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
            </GroupFooterBand>
          </GroupHeaderBand>
        </inherited>
        <GroupFooterBand Name="GroupFooter1" Top="639.83" Width="718.2" Height="122.85">
          <TextObject Name="Text34" Top="57.08" Width="618.03" Height="15.88" Border.Lines="Right, Top" Border.Color="White" Fill.Color="ButtonFace" Text="a) Total da Receita Líquida para Apuração do PASEP (I - II)" Font="Tahoma, 7pt"/>
          <TextObject Name="Text35" Left="618.03" Top="57.08" Width="100.17" Height="15.88" Border.Lines="Left, Top" Border.Color="White" Fill.Color="ButtonFace" Text="[[total_a] + [total_resumo_a]]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt"/>
          <TextObject Name="Text36" Top="40.07" Width="618.03" Height="15.88" Border.Lines="Right" Fill.Color="41, 82, 118" Text="RESUMO DA APURAÇÃO" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text37" Left="618.03" Top="40.07" Width="100.17" Height="15.88" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="VALOR EM R$" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text38" Top="72.95" Width="618.03" Height="15.88" Border.Lines="Right, Top" Border.Color="White" Fill.Color="ButtonFace" Text="b) PASEP apurado 1% sobre o total da Receita Líquida  ( a * 1 %)" Font="Tahoma, 7pt"/>
          <TextObject Name="Text39" Left="618.03" Top="72.95" Width="100.17" Height="15.88" Border.Lines="Left, Top" Border.Color="White" Fill.Color="ButtonFace" Text="[[total_b] + [total_resumo_b] / 100 ]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 7pt"/>
          <TextObject Name="Text40" Top="88.83" Width="618.03" Height="15.88" Border.Lines="Right, Top, Bottom" Border.Color="White" Fill.Color="ButtonFace" Text="c) PASEP retido na fonte" Font="Tahoma, 7pt"/>
          <TextObject Name="Text41" Left="618.03" Top="88.83" Width="100.17" Height="15.88" Border.Lines="Left, Top, Bottom" Border.Color="White" Fill.Color="ButtonFace" Text="[total_c]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 7pt"/>
          <TextObject Name="Text42" Top="105.84" Width="618.03" Height="15.88" Border.Lines="Right" Fill.Color="41, 82, 118" Text="PASEP A RECOLHER NO MÊS" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text43" Left="618.03" Top="105.84" Width="100.17" Height="15.88" Border.Lines="Left" Border.Color="White" Fill.Color="41, 82, 118" Text="[[total_a] + [total_b] + [total_resumo_b] /100 - [total_pasep]]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
        </GroupFooterBand>
      </GroupHeaderBand>
      <inherited Name="FooterAssinante" Top="782.68">
        <inherited Name="TxtAssinante1"/>
        <inherited Name="TxtAssinante2"/>
        <inherited Name="TxtAssinante3"/>
        <inherited Name="TxtAssinante4"/>
        <inherited Name="Text5"/>
        <inherited Name="Text6"/>
        <inherited Name="Text7"/>
        <inherited Name="Text8"/>
        <inherited Name="Text9"/>
        <inherited Name="Text10"/>
        <inherited Name="Text11"/>
        <inherited Name="Text12"/>
      </inherited>
    </inherited>
    <inherited Name="BndRodape" Top="890.76">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
</inherited>
