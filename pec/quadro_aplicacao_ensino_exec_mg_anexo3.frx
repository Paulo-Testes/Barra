<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="..\..\..\..\..\..\gsr-reports\base\PecRetrato.frx" BaseReportAbsolutePath="C:\gsr-reports\base\PecRetrato.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="09/03/2025 11:50:07" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
       
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);
      string periodo = (String)Report.GetParameterValue(&quot;periodo&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtOrgao.Top = (!string.IsNullOrWhiteSpace(periodo)) ? (float) 56.7 : (float) 37.8;
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtOrgao.Top = (!string.IsNullOrWhiteSpace(periodo)) ? (float) 75.6 : (float) 56.7;
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtOrgao.Top = (!string.IsNullOrWhiteSpace(periodo)) ? (float) 75.6 : (float) 56.7;
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
        
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }  
    
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }    
         
//==============================================================================================================================
    
    private void Text28_BeforePrint(object sender, EventArgs e)
    { 
      int negro = ((Int16)Report.GetColumnValue(&quot;SqlDespesa.negrito&quot;));
      TextObject Text = Text28;
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
      
      TextObject text = sender as TextObject;

      if (((Int16)Report.GetColumnValue(&quot;Sqldespesa.nivel&quot;)) == 2)
      {
        Text.Text = &quot;    &quot; + ((string)Report.GetColumnValue(&quot;Sqldespesa.descricao&quot;));
      } 
    }
    
//==============================================================================================================================
    
    private void Text29_BeforePrint(object sender, EventArgs e)
    {
      TextObject Text = Text29;
      double valor = ((Double)Report.GetColumnValue(&quot;Sqldespesa.vl_acumulado&quot;));
      if (valor == 0)
        Text.TextColor = Color.Transparent;
      else if (valor &lt; 0)
        Text.TextColor = Color.Red;
      else
        Text.TextColor = Color.Black;
      
      int negro = ((Int16)Report.GetColumnValue(&quot;SqlDespesa.negrito&quot;));
        if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
    }
    
//==============================================================================================================================
    
    private void Text30_BeforePrint(object sender, EventArgs e)
    {
      int negro = ((Int16)Report.GetColumnValue(&quot;Sqlaplicacaoensino.negrito&quot;));
      TextObject Text = Text30;
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
      
      TextObject text = sender as TextObject;

      if (((Int16)Report.GetColumnValue(&quot;Sqlaplicacaoensino.nivel&quot;)) == 2)
      {
        Text.Text = &quot;    &quot; + ((string)Report.GetColumnValue(&quot;Sqlaplicacaoensino.descricao&quot;));
      }
    }
    
//==============================================================================================================================
    
    private void Text31_BeforePrint(object sender, EventArgs e)
    {
      TextObject Text = Text31;
      double valor = ((Double)Report.GetColumnValue(&quot;SqlaplicacaoEnsino.vl_acumulado&quot;));
      if (valor == 0)
        Text.TextColor = Color.Transparent;
      else if (valor &lt; 0)
        Text.TextColor = Color.Red;
      else
        Text.TextColor = Color.Black;
      int negro = ((Int16)Report.GetColumnValue(&quot;Sqlaplicacaoensino.negrito&quot;));
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }  
    }
       
//==============================================================================================================================
    
    private void Text32_BeforePrint(object sender, EventArgs e)
     {
      int negro = ((Int16)Report.GetColumnValue(&quot;Sqldisponibilidade.negrito&quot;));
      TextObject Text = Text32;
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
      
      TextObject text = sender as TextObject;

      if (((Int16)Report.GetColumnValue(&quot;Sqldisponibilidade.nivel&quot;)) == 2)
      {
        Text.Text = &quot;    &quot; + ((string)Report.GetColumnValue(&quot;Sqldisponibilidade.descricao&quot;));
      }
    }   
      
//==============================================================================================================================
    
    private void Text33_BeforePrint(object sender, EventArgs e)
    {
      TextObject Text = Text33;
      double valor = ((Double)Report.GetColumnValue(&quot;SqlDisponibilidade.vl_acumulado&quot;));
      if (valor == 0)
        Text.TextColor = Color.Transparent;
      else if (valor &lt; 0)
        Text.TextColor = Color.Red;
      else
        Text.TextColor = Color.Black;
      int negro = ((Int16)Report.GetColumnValue(&quot;SqlDisponibilidade.negrito&quot;));
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
    }
    
//==============================================================================================================================
    
    private void Text34_BeforePrint(object sender, EventArgs e)
      {
      int negro = ((Int16)Report.GetColumnValue(&quot;SqlResultadoFundeb.negrito&quot;));
      TextObject Text = Text34;
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
      
      TextObject text = sender as TextObject;

      if (((Int16)Report.GetColumnValue(&quot;SqlResultadoFundeb.nivel&quot;)) == 2)
      {
        Text.Text = &quot;    &quot; + ((string)Report.GetColumnValue(&quot;SqlResultadoFundeb.descricao&quot;));
      }
      }   
      
//==============================================================================================================================
    
    private void Text35_BeforePrint(object sender, EventArgs e)
    {
      TextObject Text = Text35;
      double valor = ((Double)Report.GetColumnValue(&quot;SqlResultadoFundeb.vl_acumulado&quot;));
      if (valor == 0)
        Text.TextColor = Color.Transparent;
      else if (valor &lt; 0)
        Text.TextColor = Color.Red;
      else
        Text.TextColor = Color.Black;
      int negro = ((Int16)Report.GetColumnValue(&quot;SqlResultadoFundeb.negrito&quot;));
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
    }     
    
//==============================================================================================================================
    
    private void Text36_BeforePrint(object sender, EventArgs e)
    {
      int negro = ((Int32)Report.GetColumnValue(&quot;Sqlpisosalarial.negrito&quot;));
      TextObject Text = Text36;
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
      
      TextObject text = sender as TextObject;

      if (((Int32)Report.GetColumnValue(&quot;Sqlpisosalarial.nivel&quot;)) == 2)
      {
        Text.Text = &quot;    &quot; + ((string)Report.GetColumnValue(&quot;Sqlpisosalarial.descricao&quot;));
      }
    }
    
//==============================================================================================================================
    
    private void Text37_BeforePrint(object sender, EventArgs e)
    {
      TextObject Text = Text37;
      int negro = ((Int32)Report.GetColumnValue(&quot;Sqlpisosalarial.negrito&quot;));
      if (negro == 1)
      {
        Text.Font = new Font (Text.Font,FontStyle.Bold);
      }
    } 
         

    
    
    
    
    
    
    
    

    


  
    private void parent_FooterAssinante_BeforePrint(object sender, EventArgs e)
    {
      TxtAssinante1.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel1&quot;));
      TxtAssinante2.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel2&quot;));
      TxtAssinante3.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel3&quot;));
      TxtAssinante4.Visible = !string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlAssinante.nome_responsavel4&quot;));
    }
}

    

   
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAD52+0S9jQVqtbGjnQ1fJfcaegeqkp60BrLd+YLnR4XqyfZaBNherXEOpLePTulRqrY+ChMEL6VHdEuu5eaQq8E+ZDa9Ad9YImM+XDJvP1O0cumtMViI/nlmpqeaPUQsg=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="site" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="SqlAssinante" DataType="System.Int32" PropName="Table" Enabled="true" SelectCommand="SELECT TRIM(C1.NOME_RAZAO) AS NOME_RESPONSAVEL1&#13;&#10;     , C.CARGO AS CARGO_RESPONSAVEL1&#13;&#10;     , CAST(C.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL1&#13;&#10;     , CAST(C3.MATRICULA AS VARCHAR(20)) AS MATRICULA1&#13;&#10;&#13;&#10;     , TRIM(D1.NOME_RAZAO) AS NOME_RESPONSAVEL2&#13;&#10;     , D.CARGO AS CARGO_RESPONSAVEL2&#13;&#10;     , CAST(D.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL2&#13;&#10;     , CAST(D3.MATRICULA AS VARCHAR(20)) AS MATRICULA2&#13;&#10;&#13;&#10;     , TRIM(E1.NOME_RAZAO) AS NOME_RESPONSAVEL3&#13;&#10;     , E.CARGO AS CARGO_RESPONSAVEL3&#13;&#10;     , CAST(E.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL3&#13;&#10;     , CAST(E3.MATRICULA AS VARCHAR(20)) AS MATRICULA3&#13;&#10;&#13;&#10;     , TRIM(F1.NOME_RAZAO) AS NOME_RESPONSAVEL4&#13;&#10;     , F.CARGO AS CARGO_RESPONSAVEL4&#13;&#10;     , CAST(F.DOCUMENTO_IMPRESSAO AS VARCHAR(80)) AS DOCUMENTO_RESPONSAVEL4&#13;&#10;     , CAST(F3.MATRICULA AS VARCHAR(20)) AS MATRICULA4&#13;&#10;&#13;&#10;     , CAST(MAKE_DATE(CAST(:ANO AS INTEGER), CAST(:MES AS INTEGER), CAST(:DIA AS INTEGER)) AS TIMESTAMP) AS DT_RELATORIO&#13;&#10;&#13;&#10;  FROM SIS_RELATORIO R&#13;&#10;       LEFT JOIN PEC_RELATORIO           A  ON A.ID_RELATORIO           = R.ID_RELATORIO&#13;&#10;       LEFT JOIN PEC_RELATORIO_ASSINANTE B  ON B.ID_RELATORIO_GRUPO     = A.ID_RELATORIO_GRUPO&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL C  ON C.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_01&#13;&#10;       LEFT JOIN SIS_PESSOA              C1 ON C1.ID_PESSOA             = C.ID_PESSOA&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL D  ON D.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_02&#13;&#10;       LEFT JOIN SIS_PESSOA              D1 ON D1.ID_PESSOA             = D.ID_PESSOA&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL E  ON E.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_03&#13;&#10;       LEFT JOIN SIS_PESSOA              E1 ON E1.ID_PESSOA             = E.ID_PESSOA&#13;&#10;&#13;&#10;       LEFT JOIN PEC_UNIDADE_RESPONSAVEL F  ON F.ID_UNIDADE_RESPONSAVEL = B.ID_RESPONSAVEL_04&#13;&#10;       LEFT JOIN SIS_PESSOA              F1 ON F1.ID_PESSOA             = F.ID_PESSOA&#13;&#10;&#13;&#10;&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(C1.DOCUMENTO) C3 ON 1=1&#13;&#10;                                                         AND C3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND C3.DT_DEMISSAO IS NULL&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(D1.DOCUMENTO) D3 ON 1=1&#13;&#10;                                                         AND D3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND D3.DT_DEMISSAO IS NULL&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(E1.DOCUMENTO) E3 ON 1=1&#13;&#10;                                                         AND E3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND E3.DT_DEMISSAO IS NULL&#13;&#10;       LEFT JOIN API_FUNCIONARIO_POR_CPF(F1.DOCUMENTO) F3 ON 1=1&#13;&#10;                                                         AND F3.EM_FOLHA    = 'S'&#13;&#10;                                                         AND F3.DT_DEMISSAO IS NULL&#13;&#10;&#13;&#10; WHERE R.ID_MODULO    = :ID_MODULO&#13;&#10;   AND R.CD_RELATORIO = :CD_RELATORIO&#13;&#10;   AND R.GERADO       = 0&#13;&#10;   AND B.DT_INICIO   &lt;= MAKE_DATE(CAST(:ANO AS INTEGER), CAST(:MES AS INTEGER), CAST(:DIA AS INTEGER))&#13;&#10;   AND A.ID_ENTIDADE  = :ID_ENTIDADE&#13;&#10; ORDER BY&#13;&#10;       B.DT_INICIO DESC&#13;&#10; LIMIT 1">
        <Column Name="nome_responsavel1" DataType="System.String"/>
        <Column Name="cargo_responsavel1" DataType="System.String"/>
        <Column Name="documento_responsavel1" DataType="System.String"/>
        <Column Name="matricula1" DataType="System.String"/>
        <Column Name="nome_responsavel2" DataType="System.String"/>
        <Column Name="cargo_responsavel2" DataType="System.String"/>
        <Column Name="documento_responsavel2" DataType="System.String"/>
        <Column Name="matricula2" DataType="System.String"/>
        <Column Name="nome_responsavel3" DataType="System.String"/>
        <Column Name="cargo_responsavel3" DataType="System.String"/>
        <Column Name="documento_responsavel3" DataType="System.String"/>
        <Column Name="matricula3" DataType="System.String"/>
        <Column Name="nome_responsavel4" DataType="System.String"/>
        <Column Name="cargo_responsavel4" DataType="System.String"/>
        <Column Name="documento_responsavel4" DataType="System.String"/>
        <Column Name="matricula4" DataType="System.String"/>
        <Column Name="dt_relatorio" DataType="System.DateTime"/>
        <CommandParameter Name="ANO" DataType="22" Expression="ExtractYear([dataAssinante])"/>
        <CommandParameter Name="MES" DataType="22" Expression="ExtractMonth([dataAssinante])"/>
        <CommandParameter Name="DIA" DataType="22" Expression="ExtractDay([dataAssinante])"/>
        <CommandParameter Name="ID_MODULO" DataType="9" Expression="[idModulo]"/>
        <CommandParameter Name="CD_RELATORIO" DataType="9" Expression="[codigoRelatorio]"/>
        <CommandParameter Name="ID_ENTIDADE" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlDespesa" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CODIGO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.NIVEL&#13;&#10;     , A.DESCRICAO&#13;&#10;     , CASE WHEN 01 = :CP_MES_FIN THEN A.VL_01_PAG &#13;&#10;            WHEN 02 = :CP_MES_FIN THEN A.VL_02_PAG &#13;&#10;            WHEN 03 = :CP_MES_FIN THEN A.VL_03_PAG &#13;&#10;            WHEN 04 = :CP_MES_FIN THEN A.VL_04_PAG &#13;&#10;            WHEN 05 = :CP_MES_FIN THEN A.VL_05_PAG &#13;&#10;            WHEN 06 = :CP_MES_FIN THEN A.VL_06_PAG &#13;&#10;            WHEN 07 = :CP_MES_FIN THEN A.VL_07_PAG &#13;&#10;            WHEN 08 = :CP_MES_FIN THEN A.VL_08_PAG &#13;&#10;            WHEN 09 = :CP_MES_FIN THEN A.VL_09_PAG &#13;&#10;            WHEN 10 = :CP_MES_FIN THEN A.VL_10_PAG &#13;&#10;            WHEN 11 = :CP_MES_FIN THEN A.VL_11_PAG &#13;&#10;            WHEN 12 = :CP_MES_FIN THEN A.VL_12_PAG &#13;&#10;            ELSE 0 &#13;&#10;       END                                                          AS VL_ACUMULADO&#13;&#10;     , A.COR&#13;&#10;     , A.NEGRITO&#13;&#10;  FROM PEC_REL_EDUCACAO_DES A&#13;&#10; WHERE A.CP_ANO = :CP_ANO&#13;&#10;   AND A.ANEXO  = 'EXEC-MG'&#13;&#10;   AND A.QUADRO = 2&#13;&#10;   AND A.GRUPO  = 1&#13;&#10;   AND ((A.NIVEL &lt;&gt; 4 AND 0 = :EXIBIR_FICHAS) OR (1 = :EXIBIR_FICHAS))&#13;&#10; ORDER BY&#13;&#10;       A.QUADRO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.CODIGO">
        <Column Name="codigo" DataType="System.String"/>
        <Column Name="grupo" DataType="System.Int16"/>
        <Column Name="nivel" DataType="System.Int16"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="vl_acumulado" DataType="System.Double"/>
        <Column Name="cor" DataType="System.String"/>
        <Column Name="negrito" DataType="System.Int16"/>
        <CommandParameter Name="exibir_fichas" DataType="18" Expression="[exibirFichas]"/>
        <CommandParameter Name="cp_ano" DataType="9" Expression="[cpano]"/>
        <CommandParameter Name="CP_MES_FIN" DataType="9" Expression="[cpmesfin]"/>
      </TableDataSource>
      <TableDataSource Name="Table2" Alias="SqlAplicacaoEnsino" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CODIGO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.NIVEL&#13;&#10;     , A.DESCRICAO&#13;&#10;     , CASE WHEN 01 = :CP_MES_FIN THEN A.VL_01_PAG &#13;&#10;            WHEN 02 = :CP_MES_FIN THEN A.VL_02_PAG &#13;&#10;            WHEN 03 = :CP_MES_FIN THEN A.VL_03_PAG &#13;&#10;            WHEN 04 = :CP_MES_FIN THEN A.VL_04_PAG &#13;&#10;            WHEN 05 = :CP_MES_FIN THEN A.VL_05_PAG &#13;&#10;            WHEN 06 = :CP_MES_FIN THEN A.VL_06_PAG &#13;&#10;            WHEN 07 = :CP_MES_FIN THEN A.VL_07_PAG &#13;&#10;            WHEN 08 = :CP_MES_FIN THEN A.VL_08_PAG &#13;&#10;            WHEN 09 = :CP_MES_FIN THEN A.VL_09_PAG &#13;&#10;            WHEN 10 = :CP_MES_FIN THEN A.VL_10_PAG &#13;&#10;            WHEN 11 = :CP_MES_FIN THEN A.VL_11_PAG &#13;&#10;            WHEN 12 = :CP_MES_FIN THEN A.VL_12_PAG &#13;&#10;            ELSE 0                         &#13;&#10;       END                                                          AS VL_ACUMULADO&#13;&#10;     , A.COR&#13;&#10;     , A.NEGRITO&#13;&#10;     , CASE WHEN 12 &gt; :CP_MES_FIN &#13;&#10;             AND A.CODIGO NOT IN ('0205','0206','0207','0212') &#13;&#10;            THEN 1 ELSE 0 END                                       AS SOMENTE_12                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         &#13;&#10;  FROM PEC_REL_EDUCACAO_DES A&#13;&#10; WHERE A.CP_ANO = :CP_ANO&#13;&#10;   AND A.ANEXO  = 'EXEC-MG'&#13;&#10;   AND A.QUADRO = 2&#13;&#10;   AND A.GRUPO  = 2                                                       &#13;&#10; ORDER BY&#13;&#10;       A.QUADRO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.CODIGO">
        <Column Name="codigo" DataType="System.String"/>
        <Column Name="grupo" DataType="System.Int16"/>
        <Column Name="nivel" DataType="System.Int16"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="vl_acumulado" DataType="System.Double"/>
        <Column Name="cor" DataType="System.String"/>
        <Column Name="negrito" DataType="System.Int16"/>
        <Column Name="somente_12" DataType="System.Int32"/>
        <CommandParameter Name="CP_MES_FIN" DataType="9" Expression="[cpmesfin]"/>
        <CommandParameter Name="cp_ano" DataType="9" Expression="[cpano]"/>
      </TableDataSource>
      <TableDataSource Name="Table3" Alias="SqlDisponibilidade" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CODIGO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.NIVEL&#13;&#10;     , A.DESCRICAO&#13;&#10;     , A.VL_12_PAG AS VL_ACUMULADO&#13;&#10;     , A.COR&#13;&#10;     , A.NEGRITO&#13;&#10;  FROM PEC_REL_EDUCACAO_DES A&#13;&#10; WHERE A.CP_ANO = :CP_ANO&#13;&#10;   AND A.ANEXO  = 'EXEC-MG'&#13;&#10;   AND A.QUADRO = 2&#13;&#10;   AND A.GRUPO  = 3&#13;&#10;   AND 12       = :CP_MES_FIN                                                                                &#13;&#10; ORDER BY&#13;&#10;       A.QUADRO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.CODIGO">
        <Column Name="codigo" DataType="System.String"/>
        <Column Name="grupo" DataType="System.Int16"/>
        <Column Name="nivel" DataType="System.Int16"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="vl_acumulado" DataType="System.Double"/>
        <Column Name="cor" DataType="System.String"/>
        <Column Name="negrito" DataType="System.Int16"/>
        <CommandParameter Name="cp_ano" DataType="9" Expression="[cpano]"/>
        <CommandParameter Name="cp_mes_fin" DataType="9" Expression="[cpmesfin]"/>
      </TableDataSource>
      <TableDataSource Name="Table4" Alias="SqlResultadoFundeb" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CODIGO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.NIVEL&#13;&#10;     , A.DESCRICAO&#13;&#10;     , CASE WHEN 01 = :CP_MES_FIN THEN A.VL_01_PAG &#13;&#10;            WHEN 02 = :CP_MES_FIN THEN A.VL_02_PAG &#13;&#10;            WHEN 03 = :CP_MES_FIN THEN A.VL_03_PAG &#13;&#10;            WHEN 04 = :CP_MES_FIN THEN A.VL_04_PAG &#13;&#10;            WHEN 05 = :CP_MES_FIN THEN A.VL_05_PAG &#13;&#10;            WHEN 06 = :CP_MES_FIN THEN A.VL_06_PAG &#13;&#10;            WHEN 07 = :CP_MES_FIN THEN A.VL_07_PAG &#13;&#10;            WHEN 08 = :CP_MES_FIN THEN A.VL_08_PAG &#13;&#10;            WHEN 09 = :CP_MES_FIN THEN A.VL_09_PAG &#13;&#10;            WHEN 10 = :CP_MES_FIN THEN A.VL_10_PAG &#13;&#10;            WHEN 11 = :CP_MES_FIN THEN A.VL_11_PAG &#13;&#10;            WHEN 12 = :CP_MES_FIN THEN A.VL_12_PAG &#13;&#10;            ELSE 0                         &#13;&#10;       END                                                          AS VL_ACUMULADO&#13;&#10;     , A.COR&#13;&#10;     , A.NEGRITO&#13;&#10;  FROM PEC_REL_EDUCACAO_DES A&#13;&#10; WHERE A.CP_ANO = :CP_ANO&#13;&#10;   AND A.ANEXO  = 'EXEC-MG'&#13;&#10;   AND A.QUADRO = 2&#13;&#10;   AND A.GRUPO  = 4                                                             &#13;&#10; ORDER BY&#13;&#10;       A.QUADRO&#13;&#10;     , A.GRUPO&#13;&#10;     , A.CODIGO">
        <Column Name="codigo" DataType="System.String"/>
        <Column Name="grupo" DataType="System.Int16"/>
        <Column Name="nivel" DataType="System.Int16"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="vl_acumulado" DataType="System.Double"/>
        <Column Name="cor" DataType="System.String"/>
        <Column Name="negrito" DataType="System.Int16"/>
        <CommandParameter Name="cp_mes_fin" DataType="9" Expression="[cpmesfin]"/>
        <CommandParameter Name="cp_ano" DataType="9" Expression="[cpano]"/>
      </TableDataSource>
      <TableDataSource Name="Table5" Alias="SqlPisoSalarial" DataType="System.Int32" Enabled="true" SelectCommand="select case when grupo = 1 and sequencia in (1,2)   then '01'&#13;&#10;            when grupo = 2 and sequencia = 1        then '0101'&#13;&#10;            when grupo = 2 and sequencia = 2        then '0102'&#13;&#10;            when grupo = 1 and sequencia in (3,4)   then '02'&#13;&#10;            when grupo = 2 and sequencia = 3        then '0203'&#13;&#10;            when grupo = 2 and sequencia = 4        then '0204'&#13;&#10;            when grupo = 1 and sequencia in (5,6)   then '03'&#13;&#10;            when grupo = 2 and sequencia = 5        then '0305'&#13;&#10;            when grupo = 2 and sequencia = 6        then '0306' &#13;&#10;       end as codigo&#13;&#10;     , case when grupo = 1 and sequencia in (1,2)   then 'Creche'&#13;&#10;            when grupo = 2 and sequencia = 1        then 'Informe o valor do piso salarial correspondente à jornada de 40 horas semanais'&#13;&#10;            when grupo = 2 and sequencia = 2        then 'Informe o número da Lei Municipal que instituiu o valor do piso salarial'&#13;&#10;            when grupo = 1 and sequencia in (3,4)   then 'Pré Escola'&#13;&#10;            when grupo = 2 and sequencia = 3        then 'Informe o valor do piso salarial correspondente à jornada de 40 horas semanais'&#13;&#10;            when grupo = 2 and sequencia = 4        then 'Informe o número da Lei Municipal que instituiu o valor do piso salarial'&#13;&#10;            when grupo = 1 and sequencia in (5,6)   then 'Anos iniciais do ensino fundamental'&#13;&#10;            when grupo = 2 and sequencia = 5        then 'Informe o valor do piso salarial correspondente à jornada de 40 horas semanais'&#13;&#10;            when grupo = 2 and sequencia = 6        then 'Informe o número da Lei Municipal que instituiu o valor do piso salarial' &#13;&#10;       end as descricao&#13;&#10;     , grupo as nivel&#13;&#10;     , case when grupo = 2 then 0 else 1    end as negrito       &#13;&#10;     , case when grupo = 2 then a2.tipo     end as tipo&#13;&#10;     , case when grupo = 2 then a2.conteudo end as conteudo&#13;&#10;  from generate_series(1, 6) as sequencia&#13;&#10;       left join (  &#13;&#10;                    select case when b1.variavel = 'S_PISOCRECHE'   then 1&#13;&#10;                                when b1.variavel = 'S_LEICRECHE'    then 2&#13;&#10;                                when b1.variavel = 'S_PISOPRE'      then 3&#13;&#10;                                when b1.variavel = 'S_LEIPRE'       then 4&#13;&#10;                                when b1.variavel = 'S_PISOFUNDA'    then 5&#13;&#10;                                when b1.variavel = 'S_LEIFUNDA'     then 6 end as ordem&#13;&#10;                         , b1.tipo&#13;&#10;                         , b1.conteudo&#13;&#10;                      from (&#13;&#10;                            select a.variavel&#13;&#10;                                 , max(a.competencia) as competencia&#13;&#10;                              from aac_variaveis a&#13;&#10;                             where a.modulo = 'GRHW'&#13;&#10;                               and a.competencia &lt;= cast(:cp_ano as varchar(4)) || lpad(cast(:cp_mes_fin as varchar(2)), 2, '0') &#13;&#10;                               and a.variavel in ('S_LEIFUNDA', 'S_LEIPRE', 'S_LEICRECHE', 'S_PISOCRECHE', 'S_PISOPRE', 'S_PISOFUNDA') &#13;&#10;                             group by 1 &#13;&#10;                           ) a1  &#13;&#10;                           left join aac_variaveis b1 on b1.modulo      = 'GRHW'&#13;&#10;                                                     and b1.variavel    = a1.variavel&#13;&#10;                                                     and b1.competencia = a1.competencia &#13;&#10;                 ) a2 on a2.ordem = sequencia  &#13;&#10;                 left join generate_series(1,2) as grupo on true   &#13;&#10;  group by 1,2,3,4,5,6 &#13;&#10;  order by 1                                             &#13;&#10;                                 &#13;&#10;">
        <Column Name="codigo" DataType="System.String"/>
        <Column Name="descricao" DataType="System.String"/>
        <Column Name="nivel" DataType="System.Int32"/>
        <Column Name="negrito" DataType="System.Int32"/>
        <Column Name="tipo" DataType="System.String"/>
        <Column Name="conteudo" DataType="System.String"/>
        <CommandParameter Name="cp_ano" DataType="9" Expression="[cpano]"/>
        <CommandParameter Name="cp_mes_fin" DataType="9" Expression="[cpmesfin]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="dataAssinante" DataType="System.String" Expression="&quot;01/01/1900&quot;"/>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Anexo III - Demonstrativo dos Gastos com a Manutenção e Desenvolvimento do Ensino&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
    <Parameter Name="formato" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="orgao" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="codigoRelatorio" DataType="System.Int64" Expression="-123"/>
    <Parameter Name="competencia" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="cpAno" DataType="System.Int64" Expression="2024"/>
    <Parameter Name="cpMesFin" DataType="System.Int64" Expression="05"/>
    <Parameter Name="exibirFichas" DataType="System.Int64" Expression="0"/>
  </Dictionary>
  <inherited Name="MainPage">
    <inherited Name="BndCabecalho">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="TxtOrgao"/>
      <inherited Name="BndFiltro">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <inherited Name="HeaderAssinante">
      <inherited Name="bndAssinante">
        <GroupHeaderBand Name="cabDespesa" ZOrder="0" Top="232.3" Width="718.2" Height="31.02" Condition="0">
          <TextObject Name="Text13" Width="718.2" Height="15.12" Text="I - DESPESAS" Font="Arial, 8pt, style=Bold"/>
          <TextObject Name="Text14" Top="15.9" Width="618.03" Height="15.12" Border.Lines="Left, Top" Fill.Color="42, 82, 118" Text="Subfunção/Programa" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text15" Left="618.03" Top="15.88" Width="100.17" Height="15.12" Border.Lines="Left, Right, Top" Border.LeftLine.Color="White" Fill.Color="42, 82, 118" Text="Valor Pago" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <DataBand Name="bndDespesa" Top="283.32" Width="718.2" Height="12.1" DataSource="Table1">
            <TextObject Name="Text28" Width="618.03" Height="12.1" Border.Lines="Left" BeforePrintEvent="Text28_BeforePrint" Text="[SqlDespesa.DESCRICAO]&#13;&#10;" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlDESPESA.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlDESPESA.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text29" Left="618.03" Width="100.17" Height="12.1" Border.Lines="Left, Right" BeforePrintEvent="Text29_BeforePrint" Text="[SqlDespesa.vl_acumulado]&#13;&#10;" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlDESPESA.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlDESPESA.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <Sort>
              <Sort Expression="[SqlDespesa.descricao]"/>
            </Sort>
          </DataBand>
          <GroupFooterBand Name="ftrDespesa" Top="315.42" Width="718.2" Height="9.45" Border.Lines="Top"/>
        </GroupHeaderBand>
        <GroupHeaderBand Name="grpAplicacaoEnsino" ZOrder="1" Top="344.87" Width="718.2" Height="31.02" Condition="0">
          <TextObject Name="Text16" Width="718.2" Height="15.12" Text="II - TOTAL DA APLICAÇÃO NO ENSINO" Font="Arial, 8pt, style=Bold"/>
          <TextObject Name="Text17" Top="15.9" Width="618.03" Height="15.12" Border.Lines="Left, Top" Fill.Color="42, 82, 118" Text="Descrição" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text18" Left="618.03" Top="15.88" Width="100.17" Height="15.12" Border.Lines="Left, Right, Top" Border.LeftLine.Color="White" Fill.Color="42, 82, 118" Text="Valor" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <DataBand Name="bndAplicacaoEnsino" Top="395.89" Width="718.2" Height="12.1" DataSource="Table2">
            <TextObject Name="Text31" Left="618.03" Width="100.17" Height="12.1" Border.Lines="Left, Right" BeforePrintEvent="Text31_BeforePrint" Text="[SqlaplicacaoEnsino.vl_acumulado]&#13;&#10;" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlAplicacaoEnsino.somente_12] == 1" Fill.Color="Silver" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[Sqlaplicacaoensino.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[Sqlaplicacaoensino.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text30" Width="618.03" Height="12.1" Border.Lines="Left" BeforePrintEvent="Text30_BeforePrint" Text="[SqlaplicacaoEnsino.DESCRICAO]&#13;&#10;" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[Sqlaplicacaoensino.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[Sqlaplicacaoensino.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <Sort>
              <Sort Expression="[SqlAplicacaoEnsino.descricao]"/>
            </Sort>
          </DataBand>
          <GroupFooterBand Name="ftrAplicacaoEnsino" Top="427.99" Width="718.2" Height="9.45" Border.Lines="Top"/>
        </GroupHeaderBand>
        <GroupHeaderBand Name="cabDisponibilidade" ZOrder="2" Top="457.44" Width="718.2" Height="31.37" Condition="0">
          <TextObject Name="Text19" Width="718.2" Height="15.12" Text="III - DISPONIBILIDADE FINANCEIRA PARA COBERTURA DOS RESTOS A PAGAR DA EDUCAÇÃO CONSIDERADOS NA APLICAÇÃO CONSTITUCIONAL" Font="Arial, 8pt, style=Bold"/>
          <TextObject Name="Text20" Top="15.9" Width="618.03" Height="15.12" Border.Lines="Left, Top" Fill.Color="42, 82, 118" Text="Descrição" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text21" Left="618.03" Top="16.25" Width="100.17" Height="15.12" Border.Lines="Left, Right, Top" Border.LeftLine.Color="White" Fill.Color="42, 82, 118" Text="Valor" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <DataBand Name="bndDisponibilidade" Top="508.81" Width="718.2" Height="12.1" DataSource="Table3">
            <TextObject Name="Text32" Width="618.03" Height="12.1" Border.Lines="Left" BeforePrintEvent="Text32_BeforePrint" Text="[SqlDisponibilidade.DESCRICAO]&#13;&#10;" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlDISPONIBILIDADE.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlDISPONIBILIDADE.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text33" Left="618.03" Width="100.17" Height="12.1" Border.Lines="Left, Right" BeforePrintEvent="Text33_BeforePrint" Text="[SqlDisponibilidade.vl_acumulado]&#13;&#10;" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlDISPONIBILIDADE.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlDISPONIBILIDADE.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <Sort>
              <Sort Expression="[SqlDisponibilidade.descricao]"/>
            </Sort>
          </DataBand>
          <GroupFooterBand Name="ftrDisponibilidade" Top="540.91" Width="718.2" Height="9.45" Border.Lines="Top"/>
        </GroupHeaderBand>
        <GroupHeaderBand Name="cabResultadoFundeb" ZOrder="3" Top="570.36" Width="718.2" Height="31.47" Condition="0">
          <TextObject Name="Text22" Width="718.2" Height="15.12" Text="IV - RESULTADO LÍQUIDO DAS TRANSFERÊNCIAS DO FUNDEB" Font="Arial, 8pt, style=Bold"/>
          <TextObject Name="Text23" Top="16.35" Width="618.03" Height="15.12" Border.Lines="Left, Top" Fill.Color="42, 82, 118" Text="Descrição" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text24" Left="618.03" Top="16.33" Width="100.17" Height="15.12" Border.Lines="Left, Right, Top" Border.LeftLine.Color="White" Fill.Color="42, 82, 118" Text="Valor" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <DataBand Name="bndResultadoFundeb" Top="621.83" Width="718.2" Height="12.1" DataSource="Table4">
            <TextObject Name="Text34" Width="618.03" Height="12.1" Border.Lines="Left" BeforePrintEvent="Text34_BeforePrint" Text="[SqlResultadoFundeb.DESCRICAO]&#13;&#10;" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlRESULTADOFUNDEB.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlRESULTADOFUNDEB.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text35" Left="618.03" Width="100.17" Height="12.1" Border.Lines="Left, Right" BeforePrintEvent="Text35_BeforePrint" Text="[SqlResultadoFundeb.vl_acumulado]&#13;&#10;" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlRESULTADOFUNDEB.cor] == &quot;$00DCDCDC&quot;" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlRESULTADOFUNDEB.cor] == &quot;$00C8C8C8&quot;" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
          </DataBand>
          <GroupFooterBand Name="ftrResultadoFundeb" Top="653.93" Width="718.2" Height="9.45" Border.Lines="Top"/>
        </GroupHeaderBand>
        <GroupHeaderBand Name="cabPisoSalarial" ZOrder="4" Top="683.38" Width="718.2" Height="31.47" Condition="0">
          <TextObject Name="Text25" Width="718.2" Height="15.12" Text="V - CUMPRIMENTO DO PISO SALARIAL NACIONAL DA EDUCAÇÃO" Font="Arial, 8pt, style=Bold"/>
          <TextObject Name="Text26" Top="16.35" Width="618.03" Height="15.12" Border.Lines="Left, Top" Fill.Color="42, 82, 118" Text="Descrição" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text27" Left="618.03" Top="16.33" Width="100.17" Height="15.12" Border.Lines="Left, Right, Top" Border.LeftLine.Color="White" Fill.Color="42, 82, 118" Text="Valor" Font="Arial, 8pt, style=Bold" TextFill.Color="White"/>
          <DataBand Name="bndPisoSalarial" Top="734.85" Width="718.2" Height="12.1" DataSource="Table5">
            <TextObject Name="Text36" Width="618.03" Height="12.1" Border.Lines="Left" BeforePrintEvent="Text36_BeforePrint" Text="[SqlPisoSalarial.DESCRICAO]&#13;&#10;" Font="Arial, 6pt">
              <Highlight>
                <Condition Expression="[SqlDespesa.nivel] == 1" Fill.Color="LightGray" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlDespesa.nivel] == 2" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                <Condition Expression="[SqlDespesa.nivel] == 3" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text37" Left="618.03" Width="100.17" Height="12.1" Border.Lines="Left, Right" BeforePrintEvent="Text37_BeforePrint" Text="[SqlPisoSalarial.conteudo]" HorzAlign="Right" Font="Arial, 6pt"/>
          </DataBand>
          <GroupFooterBand Name="ftrPisoSalarial" Top="766.95" Width="718.2" Height="9.45" Border.Lines="Top"/>
        </GroupHeaderBand>
      </inherited>
      <inherited Name="FooterAssinante" Top="796.4" BeforePrintEvent="parent_FooterAssinante_BeforePrint">
        <inherited Name="TxtAssinante1"/>
        <inherited Name="TxtAssinante2"/>
        <inherited Name="TxtAssinante3"/>
        <inherited Name="TxtAssinante4"/>
        <inherited Name="Text5"/>
        <inherited Name="Text6"/>
        <inherited Name="Text7"/>
        <inherited Name="Text8"/>
        <inherited Name="Text9"/>
        <inherited Name="Text10"/>
        <inherited Name="Text11"/>
        <inherited Name="Text12"/>
      </inherited>
    </inherited>
    <inherited Name="BndRodape" Top="904.48">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
</inherited>
