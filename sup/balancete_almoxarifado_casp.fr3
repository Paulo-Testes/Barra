<?xml version="1.0" encoding="utf-8" standalone="no"?>
<inherited ParentReport="SupRetrato" PreviewOptions.AllowEdit="False" PreviewOptions.Buttons="1535" PrintOptions.Printer="PadrÃ£o" ReportOptions.CreateDate="44173,3547512616" ReportOptions.Name="Balancete do almoxarifado - CASP" ReportOptions.LastChange="45806,6605792593" ScriptText.Text="const&#13;&#10;  JOIN_API_CONTA_CONTABIL = 'LEFT JOIN API_CONTA_CONTABIL BBB ON 1 = :AGRUPAR AND BBB.CP_ANO = :CP_ANO AND SUBSTRING(BBB.CD_CONTA_CONTABIL FROM 1 FOR 15) = AAA.CD_CONTA_CONTABIL_ESTOQUE';&#13;&#10;  DS_CONTA_CONTABIL_API   = ', BBB.DS_CONTA_CONTABIL AS DS_CONTA_CONTABIL_ESTOQUE';&#13;&#10;  DS_CONTA_CONTABIL       = ', CAST(NULL AS VARCHAR(250)) AS DS_CONTA_CONTABIL_ESTOQUE';&#13;&#10;&#13;&#10;  JOIN_API_CONTA_CONTABIL_DET = 'LEFT JOIN API_CONTA_CONTABIL B2 ON B2.CP_ANO = :CP_ANO AND SUBSTRING(B2.CD_CONTA_CONTABIL FROM 1 FOR 15) = A2.CD_CONTA_CONTABIL_CONSUMO';&#13;&#10;  DS_CONTA_CONTABIL_DET_API   = ', B2.DS_CONTA_CONTABIL AS DS_CONTA_CONTABIL_CONSUMO';&#13;&#10;  DS_CONTA_CONTABIL_DET       = ', CAST(NULL AS VARCHAR(250)) AS DS_CONTA_CONTABIL_CONSUMO';&#13;&#10;&#13;&#10;procedure GrhTitulo1OnBeforePrint(Sender: TfrxComponent);&#13;&#10;begin&#13;&#10;  if &#60;SqlPrincipal.&#34;AGRUPAR&#34;&#62; = 0 then&#13;&#10;  begin&#13;&#10;    if &#60;SqlPrincipal.&#34;TP_00&#34;&#62; = '01' then&#13;&#10;    begin&#13;&#10;      GrhTitulo1.Fill:= ReportSummary1.Fill;;&#13;&#10;      MemDsTitulo1.Color:= clNone;&#13;&#10;      MemValorTitulo1.Visible := True;&#13;&#10;    end&#13;&#10;    else&#13;&#10;    begin&#13;&#10;      GrhTitulo1.Fill:= GroupFooter1.Fill;&#13;&#10;      MemDsTitulo1.Color:= $00F0F0F0;&#13;&#10;      MemValorTitulo1.Visible := False;&#13;&#10;    end;&#13;&#10;  end&#13;&#10;  else&#13;&#10;  begin&#13;&#10;    MemDsTitulo1.Color:= $00F0F0F0;&#13;&#10;    if &#60;SqlPrincipal.&#34;TP_00&#34;&#62; = '01' then&#13;&#10;    begin&#13;&#10;      MemValorTitulo1.Visible := True;&#13;&#10;      MemValorTitulo1.Color := $00F0F0F0;&#13;&#10;    end&#13;&#10;    else&#13;&#10;    begin&#13;&#10;      MemDsTitulo1.Color:= $00F0F0F0;&#13;&#10;      MemValorTitulo1.Visible := False;&#13;&#10;    end;&#13;&#10;  end;&#13;&#10;end;&#13;&#10;&#13;&#10;procedure GroupFooter1OnBeforePrint(Sender: TfrxComponent);&#13;&#10;begin&#13;&#10;   GroupFooter1.Visible := &#60;SqlPrincipal.&#34;TP_00&#34;&#62; &#60;&#62; '01';&#13;&#10;end;&#13;&#10;&#13;&#10;procedure MasterData1OnBeforePrint(Sender: TfrxComponent);&#13;&#10;begin&#13;&#10;  MemValorTitulo2.Visible := &#60;SqlPrincipal.&#34;TP_00&#34;&#62; &#60;&#62; '01';&#13;&#10;  if &#60;SqlPrincipal.&#34;TP_01&#34;&#62; = 'CONSUMO' then&#13;&#10;    MemDsTitulo2.Font.Style:= MemDsTitulo1.Font.Style&#13;&#10;  else&#13;&#10;    MemDsTitulo2.Font.Style:= MemValorTitulo2.Font.Style;&#13;&#10;end;&#13;&#10;&#13;&#10;procedure ReportSummary1OnBeforePrint(Sender: TfrxComponent);&#13;&#10;begin&#13;&#10;  ReportSummary1.Visible := (&#60;SqlPrincipal.&#34;AGRUPAR&#34;&#62; = 0);&#13;&#10;end;&#13;&#10;&#13;&#10;procedure GrhContaEstoqueOnBeforePrint(Sender: TfrxComponent);&#13;&#10;begin&#13;&#10;  GrhContaEstoque.Visible := (&#60;SqlPrincipal.&#34;AGRUPAR&#34;&#62; = 1);&#13;&#10;end;&#13;&#10;&#13;&#10;procedure GrfContaEstoqueOnBeforePrint(Sender: TfrxComponent);&#13;&#10;begin&#13;&#10;  GrfContaEstoque.Visible := (&#60;SqlPrincipal.&#34;AGRUPAR&#34;&#62; = 1);&#13;&#10;end;&#13;&#10;&#13;&#10;begin&#13;&#10;  if &#60;ExibirDsContaContabil&#62; = 1 then&#13;&#10;  begin&#13;&#10;    SqlPrincipal.SQL.Text := StringReplace(SqlPrincipal.SQL.Text, '/*JOIN_API_CONTA_CONTABIL*/', JOIN_API_CONTA_CONTABIL);&#13;&#10;    SqlPrincipal.SQL.Text := StringReplace(SqlPrincipal.SQL.Text, '/*DS_CONTA_CONTABIL*/', DS_CONTA_CONTABIL_API);&#13;&#10;&#13;&#10;    SqlDetalheConsumo.SQL.Text := StringReplace(SqlDetalheConsumo.SQL.Text, '/*JOIN_API_CONTA_CONTABIL*/', JOIN_API_CONTA_CONTABIL_DET);&#13;&#10;    SqlDetalheConsumo.SQL.Text := StringReplace(SqlDetalheConsumo.SQL.Text, '/*DS_CONTA_CONTABIL*/', DS_CONTA_CONTABIL_DET_API);&#13;&#10;  end&#13;&#10;  else&#13;&#10;  begin&#13;&#10;    SqlPrincipal.SQL.Text := StringReplace(SqlPrincipal.SQL.Text, '/*JOIN_API_CONTA_CONTABIL*/', '');&#13;&#10;    SqlPrincipal.SQL.Text := StringReplace(SqlPrincipal.SQL.Text, '/*DS_CONTA_CONTABIL*/', DS_CONTA_CONTABIL);&#13;&#10;&#13;&#10;    SqlDetalheConsumo.SQL.Text := StringReplace(SqlDetalheConsumo.SQL.Text, '/*JOIN_API_CONTA_CONTABIL*/', '');&#13;&#10;    SqlDetalheConsumo.SQL.Text := StringReplace(SqlDetalheConsumo.SQL.Text, '/*DS_CONTA_CONTABIL*/', DS_CONTA_CONTABIL_DET);&#13;&#10;  end;&#13;&#10;end." StoreInDFM="False">
  <Datasets>
    <item DataSet="SqlCliente" DataSetName="SqlCliente"/>
    <item DataSet="SqlUsuario" DataSetName="SqlUsuario"/>
    <item DataSet="SqlModulo" DataSetName="SqlModulo"/>
    <item DataSet="SqlEntidade" DataSetName="SqlEntidade"/>
    <item DataSet="SqlPrincipal" DataSetName="SqlPrincipal"/>
    <item DataSet="SqlDetalheConsumo" DataSetName="SqlDetalheConsumo"/>
  </Datasets>
  <Variables>
    <item InheritedName=" Internas"/>
    <item InheritedName="IdModulo"/>
    <item InheritedName="Personalizado"/>
    <item InheritedName="Formato"/>
    <item InheritedName="CodigoRelatorio"/>
    <item InheritedName=" Disponiveis"/>
    <item InheritedName="IdEntidade"/>
    <item InheritedName="IdRelatorioFiltro" Value="1"/>
    <item InheritedName="Competencia" Value="-123"/>
    <item InheritedName=" Utilizadas"/>
    <item InheritedName="IdUsuario" Value="-123"/>
    <item Name="CpAno" Value="2024"/>
    <item Name="CpMesIni" Value="1"/>
    <item Name="CpMesFin" Value="1"/>
    <item Name="TpMaterial" Value="-1"/>
    <item Name="IdAlmoxarifado" Value="-1"/>
    <item Name="Agrupar" Value="0"/>
    <item Name="ExibirDsContaContabil" Value="0"/>
  </Variables>
  <inherited Name="Data">
    <inherited Name="SqlCliente" SQL.Text="select a.ds_licenciado as nome&#13;&#10;     , a.sigla         as nome_reduzido&#13;&#10;     , cast(substring(format('%s %s, %s %s',&#13;&#10;                      l.ds_tp_logradouro,&#13;&#10;                      se.ds_logradouro,&#13;&#10;                      se.nr_endereco,&#13;&#10;                      se.complemento), 1, 60) as varchar(60))  as endereco&#13;&#10;     , cast(substring(se.bairro, 1, 40) as varchar(40))        as bairro&#13;&#10;     , cast(a.id_municipio as varchar(7))                      as codigo_municipio&#13;&#10;     , cast(trim(b.ds_municipio) as varchar(60))               as nome_municipio&#13;&#10;     , cast(b.uf as varchar(2))                                as uf&#13;&#10;     , cast(se.cep as varchar(15))                             as cep&#13;&#10;     , cast(substring(f1.fone1, 1, 20) as varchar(20))         as telefone&#13;&#10;     , cast(substring(f2.fone2, 1, 20) as varchar(20))         as fax&#13;&#10;     , cast(substring(em.email, 1, 60) as varchar(60))         as email&#13;&#10;     , cast(substring(st.site, 1, 60)  as varchar(60))         as site&#13;&#10;     , cast(substring(p.documento, 1, 15) as varchar(15))      as cnpj&#13;&#10;     , cast(trim(e.slogan)                                     as varchar(60)) as slogan&#13;&#10;     , a.imagem as logotipo&#13;&#10;  from sis_licenciado a&#13;&#10;       left join sis_municipio        b on b.id_municipio       = a.id_municipio&#13;&#10;       left join sis_entidade         e on e.id_entidade        = :ID_ENTIDADE&#13;&#10;       left join sis_pessoa           p on p.id_pessoa          = e.id_pessoa_juridica&#13;&#10;       left join sis_pessoa_endereco se on se.id_pessoa         = p.id_pessoa&#13;&#10;                                       and se.principal         = 1&#13;&#10;       left join sis_tp_logradouro    l on l.id_tp_logradouro   = se.id_tp_logradouro&#13;&#10;       left join lateral&#13;&#10;       (&#13;&#10;         select cast(substring(spc.contato, 1, 20) as varchar(20)) as fone1&#13;&#10;           from sis_pessoa_contato spc&#13;&#10;          where spc.id_pessoa = p.id_pessoa&#13;&#10;            and spc.id_tp_contato = 2&#13;&#10;         order by spc.principal desc,&#13;&#10;                  spc.id_tp_contato_marcador,&#13;&#10;                  spc.id_pessoa_contato&#13;&#10;         limit 1&#13;&#10;       ) f1 on true&#13;&#10;       left join lateral&#13;&#10;       (&#13;&#10;         select cast(substring(spc.contato, 1, 20) as varchar(20)) as fone2&#13;&#10;           from sis_pessoa_contato spc&#13;&#10;          where spc.id_pessoa = p.id_pessoa&#13;&#10;            and spc.id_tp_contato = 2&#13;&#10;         order by spc.principal desc,&#13;&#10;                  spc.id_tp_contato_marcador,&#13;&#10;                  spc.id_pessoa_contato offset 1&#13;&#10;         limit 1&#13;&#10;       ) f2 on true&#13;&#10;       left join lateral&#13;&#10;       (&#13;&#10;         select cast(substring(spc.contato, 1, 60) as varchar(60)) as email&#13;&#10;           from sis_pessoa_contato spc&#13;&#10;          where spc.id_pessoa = p.id_pessoa&#13;&#10;            and spc.id_tp_contato = 1&#13;&#10;         order by spc.principal desc,&#13;&#10;                  spc.id_pessoa_contato&#13;&#10;         limit 1&#13;&#10;       ) em on true&#13;&#10;       left join lateral&#13;&#10;       (&#13;&#10;         select cast(substring(spc.contato, 1, 60) as varchar(60)) as site&#13;&#10;           from sis_pessoa_contato spc&#13;&#10;          where spc.id_pessoa = p.id_pessoa&#13;&#10;            and spc.id_tp_contato = 4&#13;&#10;         order by spc.principal desc,&#13;&#10;                  spc.id_pessoa_contato&#13;&#10;         limit 1&#13;&#10;       ) st on true&#13;&#10; where a.id_licenciado = 1&#13;&#10; limit 1      " PropData="05704C65667402300470546F7002200A506172616D65746572730101064A204E616D653D2249445F454E544944414445222044617461547970653D226674496E7465676572222045787072657373696F6E3D22262336303B4964456E746964616465262336323B220000"/>
    <inherited Name="SqlUsuario"/>
    <inherited Name="SqlModulo"/>
    <inherited Name="SqlEntidade"/>
    <TfrxADOQuery Name="SqlPrincipal" UserName="SqlPrincipal" CloseDataSource="True" FieldAliases.Text="CD_CONTA_CONTABIL_ESTOQUE=CD_CONTA_CONTABIL_ESTOQUE&#13;&#10;DS_CONTA_CONTABIL_ESTOQUE=DS_CONTA_CONTABIL_ESTOQUE&#13;&#10;CP_ANO=CP_ANO&#13;&#10;CP_MES_INI=CP_MES_INI&#13;&#10;CP_MES_FIN=CP_MES_FIN&#13;&#10;TP_00=TP_00&#13;&#10;DS_00=DS_00&#13;&#10;TP_01=TP_01&#13;&#10;ECONSUMO=ECONSUMO&#13;&#10;DS_01=DS_01&#13;&#10;TP_MATE=TP_MATE&#13;&#10;DS_ALX=DS_ALX&#13;&#10;ID_ALMOX=ID_ALMOX&#13;&#10;AGRUPAR=AGRUPAR&#13;&#10;VL_TOTAL=VL_TOTAL" BCDToCurrency="False" IgnoreDupParams="True" SQL.Text="select  aaa.cd_conta_contabil_estoque&#13;&#10;      /*DS_CONTA_CONTABIL*/                      &#13;&#10;      , aaa.cp_ano&#13;&#10;      , aaa.cp_mes_ini&#13;&#10;      , aaa.cp_mes_fin&#13;&#10;      , aaa.tp_00&#13;&#10;      , aaa.ds_00&#13;&#10;      , aaa.tp_01&#13;&#10;      , case when aaa.tp_01 = 'CONSUMO' then 1 else 0 end as econsumo&#13;&#10;      , aaa.ds_01&#13;&#10;      , aaa.tp_mate&#13;&#10;      , aaa.ds_alx&#13;&#10;      , aaa.id_almox&#13;&#10;      , aaa.agrupar&#13;&#10;      , aaa.vl_total&#13;&#10;&#13;&#10;   from (select aa.cd_conta_contabil_estoque&#13;&#10;              , aa.cp_ano&#13;&#10;              , aa.cp_mes_ini&#13;&#10;              , aa.cp_mes_fin&#13;&#10;              , aa.tp_00&#13;&#10;              , aa.ds_00&#13;&#10;              , aa.tp_01&#13;&#10;              , aa.ds_01&#13;&#10;              , cast(:tp_mate as int) tp_mate&#13;&#10;              , cast(case when :id_almox &#60;= 0 then 'TODOS' else bb.ds_almoxarifado end as varchar (254)) ds_alx&#13;&#10;              , cast(:id_almox as int) id_almox&#13;&#10;              , cast(:agrupar as int) agrupar&#13;&#10;              , round(sum(aa.vl_total), 2) vl_total&#13;&#10;&#13;&#10;           from (select cast(case when cast(:agrupar as integer) = 1 then b.cd_conta_contabil_estoque else '' end as varchar(30)) cd_conta_contabil_estoque&#13;&#10;                      , cast(:cp_ano as int) cp_ano&#13;&#10;                      , cast(:cp_mes_ini as int) cp_mes_ini&#13;&#10;                      , cast(:cp_mes_fin as int) cp_mes_fin&#13;&#10;                      , cast('01' as varchar(10)) tp_00&#13;&#10;                      , cast('SALDO ANTERIOR' as varchar(250)) ds_00&#13;&#10;                      , CAST(null AS varchar(5)) tp_01&#13;&#10;                      , CAST(null AS varchar(250)) ds_01&#13;&#10;                      , a.id_almoxarifado&#13;&#10;                      , round(sum(b.vl_total), 2) vl_total&#13;&#10;                   from sup_lancamento a&#13;&#10;                        left join sup_lancamento_it         b on b.id_lancamento              = a.id_lancamento&#13;&#10;                        left join sup_lancamento_saida      c on c.id_lancamento              = a.id_lancamento&#13;&#10;                        left join sup_lancamento_entrada    d on d.id_lancamento              = c.id_lancamento_entrada&#13;&#10;                        left join sup_lancamento_it         e on e.id_lancamento              = d.id_lancamento&#13;&#10;                                                             and e.id_material                = b.id_material&#13;&#10;                                                             and coalesce(e.id_ratif_item, 0) = coalesce(b.id_ratif_item, 0)&#13;&#10;                        left join sup_material              f on f.id_material                = b.id_material&#13;&#10;                  where a.id_entidade = :id_entidade&#13;&#10;                    and ( a.cp_ano &#60; :cp_ano or (a.cp_ano = :cp_ano and a.cp_mes &#60; :cp_mes_ini) )&#13;&#10;                    and ( f.tp_material = :tp_mate or :tp_mate &#60;= 0 )&#13;&#10;                    and ( a.id_almoxarifado = :id_almox or :id_almox &#60;= 0 )&#13;&#10;                  group by 1, 2, 3, 4, 5, 6, 7, 8, 9&#13;&#10;&#13;&#10;                  union&#13;&#10;&#13;&#10;                 select cast(case when cast(:agrupar as integer) = 1 then b.cd_conta_contabil_estoque else '' end as varchar(30)) cd_conta_contabil_estoque&#13;&#10;                      , cast(:cp_ano as int) cp_ano&#13;&#10;                      , cast(:cp_mes_ini as int) cp_mes_ini&#13;&#10;                      , cast(:cp_mes_fin as int) cp_mes_fin&#13;&#10;                      , cast(case when ( a.tp_lancamento = 0 and c.tp_entrada in (0, 1)                     )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada in (0, 1)) then '02'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada = 3                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 3      ) then '03'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)  )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and&#13;&#10;                                         e.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)                          ) then '04'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada = 2                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 2      )&#13;&#10;                                    or ( a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 2        )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 2                           ) then '05'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada = 7                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 9                           ) then '06'&#13;&#10;                                  when ( a.tp_lancamento = 1 and d.tp_saida not in (2, 5, 9))&#13;&#10;                                    or ( a.tp_lancamento = 0 and c.tp_entrada = 5 and&#13;&#10;                                         f.tp_saida not in (2, 5, 9)                                        )&#13;&#10;                                    or ( a.tp_lancamento = 0 and c.tp_entrada = 4                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and&#13;&#10;                                         e.tp_entrada = 4                                                   ) then '99'&#13;&#10;                             end as varchar(10) ) tp_00&#13;&#10;                      , cast(case when ( a.tp_lancamento = 0 and c.tp_entrada in (0, 1)                     )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada in (0,1) ) then 'AQUISIÃÃES'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada = 3                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 3      ) then 'DOAÃÃES'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)  )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and&#13;&#10;                                         e.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)                          ) then 'OUTRAS ENTRADAS'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada = 2                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 2      )&#13;&#10;                                    or ( a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 2        )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 2                           ) then 'AJUSTE POR INVENTÃRIO'&#13;&#10;                                  when ( a.tp_lancamento = 0 and c.tp_entrada = 7                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 9                           ) then 'TRANSFERÃNCIAS ENTRE CONTA CONTÃBIL DE ESTOQUE'&#13;&#10;                                  when ( a.tp_lancamento = 1 and d.tp_saida not in (2, 5, 9))&#13;&#10;                                    or ( a.tp_lancamento = 0 and c.tp_entrada = 5 and&#13;&#10;                                         f.tp_saida not in (2, 5, 9)                                        )&#13;&#10;                                    or ( a.tp_lancamento = 0 and c.tp_entrada = 4                           )&#13;&#10;                                    or ( a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 4      )   then 'CONSUMO'&#13;&#10;                             end as varchar(250)) ds_00&#13;&#10;                      , cast(case when a.tp_lancamento = 0 and c.tp_entrada = 0                                 then '02.02'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 1                                 then '02.02'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada in (0, 1)      then '02.09'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 3                                 then '03.01'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 3            then '03.02'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)        then '04.01'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and&#13;&#10;                                       e.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)                                then '04.02'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 2                                 then '05.01'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 2              then '05.02'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 2                                 then '05.03'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 2            then '05.04'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 7                                 then '06.01'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 9                                 then '06.02'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 7                                 then '99.01'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 0                                 then '99.02'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 1                                 then '99.03'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 8                                 then '99.04'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 3                                 then '99.05'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida not in (0, 1, 2, 3, 4, 5, 7, 8, 9)    then '99.06'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 5 and&#13;&#10;                                       f.tp_saida not in (2, 4, 5, 9)                                           then '99.09'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 4                                 then '99.20'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 4              then '99.21'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 4                                 then '99.30'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 4            then '99.31'&#13;&#10;                             end as varchar(10)) tp_01&#13;&#10;                      , cast(case when a.tp_lancamento = 0 and c.tp_entrada = 0                                 then '(+) Entradas com AF'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 1                                 then '(+) Entradas sem AF'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada in (0, 1)      then '(-) Estornos de entradas com ou sem AF'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 3                                 then '(+) Entradas por DoaÃ§Ã£o'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 3            then '(-) Estornos de entradas por DoaÃ§Ã£o'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)        then '(+) Entradas'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and&#13;&#10;                                       e.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)                                then '(-) Estornos de Entradas'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 2                                 then '(+) Entradas por inventÃ¡rio'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 2              then '(+) Estornos de saÃ­das por inventÃ¡rio'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 2                                 then '(-) SaÃ­das por inventÃ¡rio'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 2            then '(-) Estornos de entradas por inventÃ¡rio'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 7                                 then '(+) Entradas por transferÃªncias'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 9                                 then '(-) SaÃ­das por transferÃªncias'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 7                                 then '(-) RequisiÃ§Ã£o'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 0                                 then '(-) RequisiÃ§Ã£o On-Line'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 1                                 then '(-) Sem RequisiÃ§Ã£o'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 8                                 then '(-) Consumo Imediato'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 3                                 then '(-) Perda'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida not in (0, 1, 2, 3, 4, 5, 7, 8, 9)    then '(-) Outras saÃ­das'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 5 and&#13;&#10;                                       f.tp_saida not in (2, 4, 5, 9)                                           then '(+) Estornos de Consumo'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 4                                 then '(-) SaÃ­das por transferÃªncia entre almoxarifados/unidades administrativas'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 4              then '(+) Estornos de saÃ­das por transferÃªncia entre almoxarifados/unidades administrativas'&#13;&#10;                                  when a.tp_lancamento = 0 and c.tp_entrada = 4                                 then '(+) Entradas por transferÃªncia entre almoxarifados/unidades administrativas'&#13;&#10;                                  when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 4            then '(-) Estornos de entradas por transferÃªncia entre almoxarifados/unidades administrativas'&#13;&#10;                                    else null&#13;&#10;                               end as varchar(250)) ds_01&#13;&#10;                        , a.id_almoxarifado&#13;&#10;                        , round(sum(case when a.tp_lancamento = 0 and c.tp_entrada = 0                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 1                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada in (0, 1) then round(h.vl_total / h.qtd * b.qtd, 2)&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 3                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 3       then round(h.vl_total / h.qtd * b.qtd, 2)&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)   then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 5&#13;&#10;                                          and e.tp_entrada not in (0, 1, 2, 3, 4, 5, 7)                           then round(h.vl_total / h.qtd * b.qtd, 2)&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 2                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida   = 2       then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 2                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 5 and e.tp_entrada = 2       then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 7                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 0                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 1                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 8                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 3                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida not in (0,1,2,3,4, 5,7,8,9)      then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida in(2,4,5,9) then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida   = 4                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 5 and f.tp_saida = 4         then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 0 and c.tp_entrada = 4                            then b.vl_total&#13;&#10;                                         when a.tp_lancamento = 1 and d.tp_saida = 5 and e.tp_entrada = 4         then b.vl_total&#13;&#10;                                         else b.vl_total&#13;&#10;                                    end), 2) vl_total&#13;&#10;                     from sup_lancamento a&#13;&#10;                          left join sup_lancamento_it       b on b.id_lancamento    = a.id_lancamento&#13;&#10;                          left join sup_lancamento_entrada  c on c.id_lancamento    = a.id_lancamento&#13;&#10;                          left join sup_lancamento_saida    d on d.id_lancamento    = a.id_lancamento&#13;&#10;                          left join sup_lancamento_entrada  e on e.id_lancamento    = d.id_lancamento_entrada&#13;&#10;                          left join sup_lancamento_saida    f on f.id_lancamento    = c.id_lancamento_saida&#13;&#10;                          left join sup_material            g on g.id_material      = b.id_material&#13;&#10;                          left join sup_lancamento_it       h on h.id_lancamento    = e.id_lancamento&#13;&#10;                                                                 and a.tp_lancamento  = 1&#13;&#10;                                                                 and d.tp_saida       = 5&#13;&#10;                                                                 and e.tp_entrada not in (2,4,7)&#13;&#10;                                                                 and h.id_material = b.id_material&#13;&#10;                                                                 and (h.id_ratif_item = b.id_ratif_item or h.id_ratif_item is null)&#13;&#10;                    where a.id_entidade = :id_entidade&#13;&#10;                      and a.cp_ano = :cp_ano&#13;&#10;                      and a.cp_mes between :cp_mes_ini and :cp_mes_fin&#13;&#10;                      and (g.tp_material = :tp_mate or :tp_mate &#60;= 0)&#13;&#10;                      and (a.id_almoxarifado = :id_almox or :id_almox &#60;= 0)&#13;&#10;                    group by&#13;&#10;                      1, 2, 3, 4, 5, 6, 7, 8, 9&#13;&#10;&#13;&#10;                  union&#13;&#10;&#13;&#10;                 select cast((case when :agrupar = 1 then b.cd_conta_contabil_estoque else '' end) as varchar(30)) cd_conta_contabil_estoque&#13;&#10;                      , cast(:cp_ano as integer)        as cp_ano&#13;&#10;                      , cast(:cp_mes_ini as integer)    as cp_mes_ini&#13;&#10;                      , cast(:cp_mes_fin as integer)    as cp_mes_fin&#13;&#10;                      , '99'                            as tp_00&#13;&#10;                      , 'CONSUMO'                       as ds_00&#13;&#10;                      , case when round(g.vl_total / g.qtd * b.qtd, 2) &#62; b.vl_total then '99.90'&#13;&#10;                             when round(g.vl_total / g.qtd * b.qtd, 2) &#60; b.vl_total then '99.91'&#13;&#10;                        end tp_01&#13;&#10;                      , case when round(g.vl_total / g.qtd * b.qtd, 2) &#62; b.vl_total then '(-) Ajuste no consumo por estorno a menor do que o valor original da aquisiÃ§Ã£o, doaÃ§Ã£o e outras entradas'&#13;&#10;                             when round(g.vl_total / g.qtd * b.qtd, 2) &#60; b.vl_total then '(+) Ajuste no consumo por estorno a maior do que o valor original da aquisiÃ§Ã£o, doaÃ§Ã£o e outras entradas'&#13;&#10;                        end ds_01&#13;&#10;                      , a.id_almoxarifado&#13;&#10;                      , sum(round(b.vl_total-round(g.vl_total / g.qtd * b.qtd, 2), 2) ) vl_total&#13;&#10;                   from sup_lancamento a&#13;&#10;                        left join sup_lancamento_it      b  on  b.id_lancamento = a.id_lancamento&#13;&#10;                        left join sup_lancamento_saida   f  on  f.id_lancamento = a.id_lancamento&#13;&#10;                        left join sup_lancamento_entrada f1 on f1.id_lancamento = f.id_lancamento_entrada&#13;&#10;                        left join sup_material            m on  m.id_material   = b.id_material&#13;&#10;                        left join sup_lancamento_it       g on  g.id_lancamento = f1.id_lancamento&#13;&#10;                                                           and  g.id_material   = b.id_material&#13;&#10;                                                           and  coalesce(g.id_ratif_item, 0) = coalesce(b.id_ratif_item, 0)&#13;&#10;                  where a.id_entidade = :id_entidade&#13;&#10;                    and a.cp_ano = :cp_ano&#13;&#10;                    and a.cp_mes &#62;= :cp_mes_ini&#13;&#10;                    and a.cp_mes &#60;= :cp_mes_fin&#13;&#10;                    and a.tp_lancamento = 1&#13;&#10;                    and f.tp_saida = 5&#13;&#10;                    and not f1.tp_entrada in (2, 4, 7)&#13;&#10;                    and round(round(g.vl_total / g.qtd * b.qtd, 2) - b.vl_total,2) &#60;&#62; 0&#13;&#10;                    and (m.tp_material = :tp_mate or :tp_mate &#60;= 0)&#13;&#10;                    and (cast(:id_almox as integer) &#60;= 0 or a.id_almoxarifado = :id_almox)&#13;&#10;                  group by&#13;&#10;                    1, 2, 3, 4, 5, 6, 7, 8, 9&#13;&#10;&#13;&#10;                  union&#13;&#10;&#13;&#10;                 select distinct&#13;&#10;                        cast((case when :agrupar = 1 then b.cd_conta_contabil_estoque else '' end) as varchar(30)) cd_conta_contabil_estoque&#13;&#10;                      , cast(:cp_ano as integer) cp_ano&#13;&#10;                      , cast(:cp_mes_ini as integer) cp_mes_ini&#13;&#10;                      , cast(:cp_mes_fin as integer) cp_mes_fin&#13;&#10;                      , '99' tp_00&#13;&#10;                      , 'CONSUMO' ds_00&#13;&#10;                      , 'CONSUMO' tp_01&#13;&#10;                      , 'Detalhamento do consumo por conta contÃ¡bil de consumo' ds_01&#13;&#10;                      , a.id_almoxarifado&#13;&#10;                      , cast(0 as double precision) vl_total&#13;&#10;                   from sup_lancamento a&#13;&#10;                        left join sup_lancamento_saida   f  on  f.id_lancamento = a.id_lancamento&#13;&#10;                        left join sup_lancamento_entrada f1 on f1.id_lancamento = f.id_lancamento_entrada&#13;&#10;                        left join sup_lancamento_it      b  on  b.id_lancamento = a.id_lancamento&#13;&#10;                        left join sup_material           m  on  m.id_material   = b.id_material&#13;&#10;                  where a.id_entidade = :id_entidade&#13;&#10;                    and a.cp_ano = :cp_ano&#13;&#10;                    and a.cp_mes &#62;= :cp_mes_ini&#13;&#10;                    and a.cp_mes &#60;= :cp_mes_fin&#13;&#10;                    and a.tp_lancamento = 1&#13;&#10;                    and (f.tp_saida not in (2, 5, 9) or f.tp_saida = 5 and f1.tp_entrada = 4)&#13;&#10;                    and (m.tp_material = :tp_mate or :tp_mate &#60;= 0)&#13;&#10;                    and (cast(:id_almox as integer) &#60;= 0 or a.id_almoxarifado = :id_almox)&#13;&#10;&#13;&#10;                  union&#13;&#10;&#13;&#10;                 select distinct&#13;&#10;                        cast((case when :agrupar = 1 then b.cd_conta_contabil_estoque else '' end) as varchar(30)) cd_conta_contabil_estoque&#13;&#10;                      , cast(:cp_ano as integer) cp_ano&#13;&#10;                      , cast(:cp_mes_ini as integer) cp_mes_ini&#13;&#10;                      , cast(:cp_mes_fin as integer) cp_mes_fin&#13;&#10;                      , '99' tp_00&#13;&#10;                      , 'CONSUMO' ds_00&#13;&#10;                      , 'CONSUMO' tp_01&#13;&#10;                      , 'Detalhamento do consumo por conta contÃ¡bil de consumo' ds_01&#13;&#10;                      , a.id_almoxarifado&#13;&#10;                      , cast(0 as double precision) vl_total&#13;&#10;                   from sup_lancamento a&#13;&#10;                        left join sup_lancamento_entrada e  on  e.id_lancamento = a.id_lancamento&#13;&#10;                        left join sup_lancamento_saida   e1 on e1.id_lancamento = e.id_lancamento_saida&#13;&#10;                        left join sup_lancamento_it      b  on  b.id_lancamento = a.id_lancamento&#13;&#10;                        left join sup_material           m  on  m.id_material   = b.id_material&#13;&#10;                  where a.id_entidade = :id_entidade&#13;&#10;                    and a.cp_ano = :cp_ano&#13;&#10;                    and a.cp_mes &#62;= :cp_mes_ini&#13;&#10;                    and a.cp_mes &#60;= :cp_mes_fin&#13;&#10;                    and a.tp_lancamento = 0&#13;&#10;                    and (e.tp_entrada = 5 and e1.tp_saida not in (2, 5, 9) or e.tp_entrada = 4)&#13;&#10;                    and (m.tp_material = :tp_mate or :tp_mate &#60;= 0)&#13;&#10;                    and (cast(:id_almox as integer) &#60;= 0 or a.id_almoxarifado = :id_almox)&#13;&#10;                ) aa&#13;&#10;                left join sup_almoxarifado bb on bb.id_almoxarifado = aa.id_almoxarifado&#13;&#10;          group by&#13;&#10;                1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12&#13;&#10;        ) aaa&#13;&#10;        /*JOIN_API_CONTA_CONTABIL*/&#13;&#10;  order by&#13;&#10;        aaa.cd_conta_contabil_estoque&#13;&#10;      , aaa.tp_00&#13;&#10;      , aaa.tp_01&#13;&#10;                                                                                             " CommandTimeout="3000" LockType="ltReadOnly" PropData
    <TfrxADOQuery Name="SqlDetalheConsumo" UserName="SqlDetalheConsumo" CloseDataSource="True" FieldAliases.Text="CD_CONTA_CONTABIL_CONSUMO=CD_CONTA_CONTABIL_CONSUMO&#13;&#10;DS_CONTA_CONTABIL_CONSUMO=DS_CONTA_CONTABIL_CONSUMO&#13;&#10;CP_ANO=CP_ANO&#13;&#10;CP_MES_INI=CP_MES_INI&#13;&#10;CP_MES_FIN=CP_MES_FIN&#13;&#10;VL_TOTAL=VL_TOTAL" BCDToCurrency="False" Master="SqlPrincipal" IgnoreDupParams="True" SQL.Text="select a2.cd_conta_contabil_consumo&#13;&#10;     /*ds_conta_contabil*/&#13;&#10;     , a2.cp_ano&#13;&#10;     , a2.cp_mes_ini&#13;&#10;     , a2.cp_mes_fin&#13;&#10;     , a2.vl_total&#13;&#10;  from (select a1.cd_conta_contabil_consumo&#13;&#10;             , a1.cp_ano&#13;&#10;             , a1.cp_mes_ini&#13;&#10;             , a1.cp_mes_fin&#13;&#10;             , round (sum(a1.vl_total), 2) as vl_total&#13;&#10;&#13;&#10;          from (select coalesce( trim(b.cd_conta_contabil_consumo), '0.0.0.0.0.00.00' ) as cd_conta_contabil_consumo&#13;&#10;                     , cast(:cp_ano as integer)     as cp_ano&#13;&#10;                     , cast(:cp_mes_ini as integer) as cp_mes_ini&#13;&#10;                     , cast(:cp_mes_fin as integer) as cp_mes_fin&#13;&#10;                     , sum(b.vl_total)              as vl_total&#13;&#10;                  from (select seq.id_sequencia as consumo&#13;&#10;                          from sis_sequencia seq&#13;&#10;                         where seq.id_sequencia = 1    ) s&#13;&#10;                       left join sup_lancamento          a  on 1                              = s.consumo&#13;&#10;                       left join sup_lancamento_it       b  on b.id_lancamento                = a.id_lancamento&#13;&#10;                       left join sup_lancamento_saida    f  on f.id_lancamento                = a.id_lancamento&#13;&#10;                       left join sup_lancamento_entrada  f1 on f1.id_lancamento               = f.id_lancamento_entrada&#13;&#10;                       left join sup_material            m  on m.id_material                  = b.id_material&#13;&#10;                 where a.cp_ano         = :cp_ano&#13;&#10;                   and a.cp_mes        &#62;= :cp_mes_ini&#13;&#10;                   and a.cp_mes        &#60;= :cp_mes_fin&#13;&#10;                   and a.tp_lancamento  = 1&#13;&#10;                   and ( ( f.tp_saida not in (2,5,9)            ) or&#13;&#10;                         ( f.tp_saida = 5 and f1.tp_entrada = 4 )   )&#13;&#10;                   and ( ( cast(:id_almox as integer) &#60;= 0 ) or&#13;&#10;                         ( a.id_almoxarifado = :id_almox   )   )&#13;&#10;                   and ( ( b.cd_conta_contabil_estoque = :cd_conta_contabil_estoque) or (:agrupar = 0) )&#13;&#10;                   and ( ( m.tp_material = :tp_mate) or (:tp_mate &#60;= 0) )&#13;&#10;                   and a.id_entidade = :id_entidade&#13;&#10;                 group by 1,2,3,4&#13;&#10;&#13;&#10;                 union all&#13;&#10;&#13;&#10;                select coalesce( trim(g.cd_conta_contabil_consumo),&#13;&#10;                                 trim(m.cd_conta_contabil_consumo), '0.0.0.0.0.00.00' ) as cd_conta_contabil_consumo&#13;&#10;                     , cast(:cp_ano as integer)     as cp_ano&#13;&#10;                     , cast(:cp_mes_ini as integer) as cp_mes_ini&#13;&#10;                     , cast(:cp_mes_fin as integer) as cp_mes_fin&#13;&#10;                     , sum(b.vl_total) as vl_total&#13;&#10;                  from (select seq.id_sequencia as consumo&#13;&#10;                          from sis_sequencia seq&#13;&#10;                         where seq.id_sequencia = 1   ) s&#13;&#10;                       left join sup_lancamento         a  on 1                              = s.consumo&#13;&#10;                       left join sup_lancamento_entrada e  on e.id_lancamento                = a.id_lancamento&#13;&#10;                       left join sup_lancamento_saida   e1 on e1.id_lancamento               = e.id_lancamento_saida&#13;&#10;                       left join sup_lancamento_it      b  on b.id_lancamento                = a.id_lancamento&#13;&#10;                       left join sup_material           m  on m.id_material                  = b.id_material&#13;&#10;                       left join sup_lancamento_it      g  on g.id_lancamento                = e1.id_lancamento&#13;&#10;                                                          and g.id_material                  = b.id_material&#13;&#10;                                                          and coalesce(g.id_ratif_item,0)    = coalesce(b.id_ratif_item,0)&#13;&#10;                 where a.cp_ano  = :cp_ano&#13;&#10;                   and a.cp_mes &#62;= :cp_mes_ini&#13;&#10;                   and a.cp_mes &#60;= :cp_mes_fin&#13;&#10;                   and a.tp_lancamento = 0&#13;&#10;                   and ( ( e.tp_entrada = 5 and e1.tp_saida not in (2,5,9) ) or&#13;&#10;                         ( e.tp_entrada = 4                                )   )&#13;&#10;                   and ( ( cast(:id_almox as integer) &#60;= 0 ) or&#13;&#10;                         ( a.id_almoxarifado = :id_almox   )   )&#13;&#10;                   and ( ( b.cd_conta_contabil_estoque = :cd_conta_contabil_estoque) or (:agrupar = 0) )&#13;&#10;                   and ( ( m.tp_material = :tp_mate) or (:tp_mate &#60;= 0) )&#13;&#10;                   and a.id_entidade = :id_entidade&#13;&#10;                 group by 1,2,3,4&#13;&#10;&#13;&#10;                 union all&#13;&#10;&#13;&#10;                select coalesce( trim(b.cd_conta_contabil_consumo), '0.0.0.0.0.00.00' ) as cd_conta_contabil_consumo&#13;&#10;                     , cast(:cp_ano as integer)     as cp_ano&#13;&#10;                     , cast(:cp_mes_ini as integer) as cp_mes_ini&#13;&#10;                     , cast(:cp_mes_fin as integer) as cp_mes_fin&#13;&#10;                     , sum(round(b.vl_total - round(g.vl_total / g.qtd * b.qtd, 2), 2)) as vl_total&#13;&#10;                  from (select seq.id_sequencia as consumo&#13;&#10;                          from sis_sequencia seq&#13;&#10;                         where seq.id_sequencia = 1 ) s&#13;&#10;                       left join sup_lancamento         a  on 1                              = s.consumo&#13;&#10;                       left join sup_lancamento_saida   f  on f.id_lancamento                = a.id_lancamento&#13;&#10;                       left join sup_lancamento_entrada f1 on f1.id_lancamento               = f.id_lancamento_entrada&#13;&#10;                       left join sup_lancamento_it      b  on b.id_lancamento                = a.id_lancamento&#13;&#10;                       left join sup_material           m  on m.id_material                  = b.id_material&#13;&#10;                       left join sup_lancamento_it      g  on g.id_lancamento                = f1.id_lancamento&#13;&#10;                                                          and g.id_material                  = b.id_material&#13;&#10;                                                          and coalesce(g.id_ratif_item,0)    = coalesce(b.id_ratif_item,0)&#13;&#10;                 where a.cp_ano  = :cp_ano&#13;&#10;                   and a.cp_mes &#62;= :cp_mes_ini&#13;&#10;                   and a.cp_mes &#60;= :cp_mes_fin&#13;&#10;                   and a.tp_lancamento    = 1&#13;&#10;                   and f.tp_saida         = 5&#13;&#10;                   and not f1.tp_entrada in (2,4,7)&#13;&#10;                   and ( (cast(:id_almox as integer) &#60;= 0 ) or&#13;&#10;                         ( a.id_almoxarifado = :id_almox  )  )&#13;&#10;                   and ( ( b.cd_conta_contabil_estoque = :cd_conta_contabil_estoque) or (:agrupar = 0) )&#13;&#10;                   and ( ( m.tp_material = :tp_mate) or (:tp_mate &#60;= 0) )&#13;&#10;                   and a.id_entidade = :id_entidade&#13;&#10;                 group by 1,2,3,4&#13;&#10;                having round(sum(round(g.vl_total / g.qtd * b.qtd, 2) - b.vl_total), 2) &#60;&#62; 0&#13;&#10;               ) a1&#13;&#10;&#13;&#10;         group by 1,2,3,4&#13;&#10;&#13;&#10;         having round( sum(a1.vl_total), 2) &#60;&#62; 0&#13;&#10;       ) a2&#13;&#10;       /*JOIN_API_CONTA_CONTABIL*/&#13;&#10; where 1 = :econsumo&#13;&#10; order by 1                                                                                  " CommandTimeout="3000" LockType="ltReadOnly" PropData
  </inherited>
  <inherited Name="Page1" Font.Height="-9" PaperSize="9">
    <inherited Name="bndCabecalho" Child="Child1">
      <inherited Name="Logo"/>
      <inherited Name="Brasao"/>
      <inherited Name="TxtNomeCliente"/>
      <inherited Name="TxtTitulo1"/>
      <inherited Name="TxtTitulo2"/>
      <inherited Name="TxtTituloRelatorio" Text="Balancete do almoxarifado - CASP"/>
      <inherited Name="Line1"/>
      <inherited Name="TxtData"/>
      <inherited Name="TxtHora"/>
      <inherited Name="TxtCompetencia"/>
    </inherited>
    <inherited Name="bndRodape" Top="502,67749">
      <inherited Name="Line2"/>
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao"/>
      <inherited Name="TxtDataHora"/>
    </inherited>
    <TfrxGroupHeader Name="GrhTitulo1" FillType="ftBrush" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="15" Left="0" Top="241,88992" Width="718,1107" OnBeforePrint="GrhTitulo1OnBeforePrint" Condition="SqlPrincipal.&#34;TP_00&#34;" Stretched="True">
      <TfrxMemoView Name="MemDsTitulo1" IndexTag="1" AllowVectorExport="True" Left="18,1107" Top="0" Width="610" Height="15" StretchMode="smMaxHeight" DataField="DS_00" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" ParentFont="False" Text="[SqlPrincipal.&#34;DS_00&#34;]"/>
      <TfrxMemoView Name="MemValorTitulo1" IndexTag="1" AllowVectorExport="True" Left="628,1107" Top="0" Width="90" Height="15" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" HAlign="haRight" Highlight.Font.Charset="1" Highlight.Font.Color="255" Highlight.Font.Height="-9" Highlight.Font.Name="Arial" Highlight.Font.Style="1" Highlight.Condition="Value &#60;= -0.01" Highlight.FillType="ftBrush" Highlight.Frame.Typ="0" ParentFont="False" Text="[SqlPrincipal.&#34;VL_TOTAL&#34;]"/>
    </TfrxGroupHeader>
    <TfrxMasterData Name="MasterData1" FillType="ftBrush" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="15" Left="0" Top="279,68522" Width="718,1107" OnBeforePrint="MasterData1OnBeforePrint" ColumnWidth="0" ColumnGap="0" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" PrintIfDetailEmpty="True" RowCount="0">
      <TfrxMemoView Name="MemDsTitulo2" IndexTag="1" AllowVectorExport="True" Left="33,1107" Top="0" Width="505" Height="15" StretchMode="smMaxHeight" DataField="DS_01" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="0" Frame.Typ="0" ParentFont="False" Text="[SqlPrincipal.&#34;DS_01&#34;]"/>
      <TfrxMemoView Name="MemValorTitulo2" IndexTag="1" AllowVectorExport="True" Left="538,1107" Top="0" Width="90" Height="15" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="0" Frame.Typ="0" HAlign="haRight" HideZeros="True" Highlight.Font.Charset="1" Highlight.Font.Color="255" Highlight.Font.Height="-9" Highlight.Font.Name="Arial" Highlight.Font.Style="0" Highlight.Condition="Value &#60;= -0.01" Highlight.FillType="ftBrush" Highlight.Frame.Typ="0" ParentFont="False" Text="[SqlPrincipal.&#34;VL_TOTAL&#34;]"/>
    </TfrxMasterData>
    <TfrxGroupFooter Name="GroupFooter1" FillType="ftBrush" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="15,11811024" Left="0" Top="351,49629" Width="718,1107" OnBeforePrint="GroupFooter1OnBeforePrint">
      <TfrxMemoView Name="MemTotalTitulo2" IndexTag="1" AllowVectorExport="True" Left="627,4015748" Top="0" Width="90" Height="15,11811024" OnBeforePrint="MemTotalTitulo2OnBeforePrint" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="0" Frame.Typ="4" HAlign="haRight" Highlight.Font.Charset="1" Highlight.Font.Color="255" Highlight.Font.Height="-9" Highlight.Font.Name="Arial" Highlight.Font.Style="0" Highlight.Condition="Value &#60;= -0.01" Highlight.FillType="ftBrush" Highlight.Frame.Typ="0" ParentFont="False" Text="[SUM(&#60;SqlPrincipal.&#34;VL_TOTAL&#34;&#62;,MasterData1)]"/>
    </TfrxGroupFooter>
    <TfrxDetailData Name="DetailData1" FillType="ftBrush" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="13" Left="0" Top="317,48052" Width="718,1107" ColumnWidth="0" ColumnGap="0" DataSet="SqlDetalheConsumo" DataSetName="SqlDetalheConsumo" RowCount="0" Stretched="True">
      <TfrxMemoView Name="SqlDetalheConsumoCD_CONTA_CONTABIL_CONSUMO" IndexTag="1" AllowVectorExport="True" Left="48,11" Top="0" Width="410" Height="13" DataSet="SqlDetalheConsumo" DataSetName="SqlDetalheConsumo" Font.Charset="1" Font.Color="-16777208" Font.Height="-8" Font.Name="Arial" Font.Style="0" Frame.Typ="0" ParentFont="False" Text="[SqlDetalheConsumo.&#34;CD_CONTA_CONTABIL_CONSUMO&#34;] [IIF(&#60;ExibirDsContaContabil&#62; = 1, '- ' + &#60;SqlDetalheConsumo.&#34;DS_CONTA_CONTABIL_CONSUMO&#34;&#62;, '')]">
        <Formats>
          <item/>
          <item/>
        </Formats>
      </TfrxMemoView>
      <TfrxMemoView Name="MemValorConta" IndexTag="1" AllowVectorExport="True" Left="458,11" Top="0" Width="80" Height="13" DataField="VL_TOTAL" DataSet="SqlDetalheConsumo" DataSetName="SqlDetalheConsumo" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="-16777208" Font.Height="-8" Font.Name="Arial" Font.Style="0" Frame.Typ="0" HAlign="haRight" Highlight.Font.Charset="1" Highlight.Font.Color="255" Highlight.Font.Height="-8" Highlight.Font.Name="Arial" Highlight.Font.Style="0" Highlight.Condition="Value &#60;= -0.01" Highlight.FillType="ftBrush" Highlight.Frame.Typ="0" ParentFont="False" Text="[SqlDetalheConsumo.&#34;VL_TOTAL&#34;]"/>
    </TfrxDetailData>
    <TfrxReportSummary Name="ReportSummary1" FillType="ftBrush" Fill.BackColor="13158600" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="15,11811024" Left="0" Top="464,88219" Width="718,1107" OnBeforePrint="ReportSummary1OnBeforePrint">
      <TfrxMemoView Name="Memo3" IndexTag="1" AllowVectorExport="True" Left="15,11812" Top="0" Width="325,03952142" Height="15,11811024" OnBeforePrint="MemTotalTitulo2OnBeforePrint" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" ParentFont="False" Text="SALDO FINAL"/>
      <TfrxMemoView Name="Memo1" IndexTag="1" AllowVectorExport="True" Left="627,4015748" Top="0" Width="90" Height="15,11811024" OnBeforePrint="MemTotalTitulo2OnBeforePrint" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="-16777208" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" HAlign="haRight" Highlight.Font.Charset="1" Highlight.Font.Color="255" Highlight.Font.Height="-9" Highlight.Font.Name="Arial" Highlight.Font.Style="1" Highlight.Condition="Value &#60;= -0.01" Highlight.FillType="ftBrush" Highlight.Frame.Typ="0" ParentFont="False" Text="[SUM(&#60;SqlPrincipal.&#34;VL_TOTAL&#34;&#62;,MasterData1)]"/>
    </TfrxReportSummary>
    <TfrxChild Name="Child1" FillType="ftBrush" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="30" Left="0" Top="113,3859" Width="718,1107" ToNRows="0" ToNRowsMode="rmCount">
      <TfrxMemoView Name="Memo5" IndexTag="1" Align="baLeft" AllowVectorExport="True" Left="0" Top="0" Width="302,3624" Height="13" Font.Charset="0" Font.Color="-16777208" Font.Height="-9" Font.Name="Tahoma" Font.Style="0" Frame.Typ="0" ParentFont="False" Text="PerÃ­odo de [Mes(EncodeDate(&#60;CpAno&#62;,&#60;CpMesIni&#62;,1))] Ã  [Mes(EncodeDate(&#60;CpAno&#62;,&#60;CpMesFin&#62;,1))] de [&#60;CpAno&#62;]">
        <Formats>
          <item/>
          <item/>
          <item/>
        </Formats>
      </TfrxMemoView>
      <TfrxMemoView Name="Memo6" IndexTag="1" Align="baWidth" AllowVectorExport="True" Left="0" Top="13" Width="718,1107" Height="13" Font.Charset="0" Font.Color="-16777208" Font.Height="-9" Font.Name="Tahoma" Font.Style="0" Frame.Typ="0" ParentFont="False" Text="Almoxarifado: [&#60;SqlPrincipal.&#34;DS_ALX&#34;&#62;]"/>
      <TfrxLineView Name="Line3" Align="baWidth" AllowVectorExport="True" Left="0" Top="28" Width="718,1107" Height="0" Color="0" Frame.Typ="4"/>
      <TfrxMemoView Name="Memo7" IndexTag="1" Align="baRight" AllowVectorExport="True" Left="415,7483" Top="0" Width="302,3624" Height="13" Font.Charset="0" Font.Color="-16777208" Font.Height="-9" Font.Name="Tahoma" Font.Style="0" Frame.Typ="0" HAlign="haRight" ParentFont="False" Text="Tipo de material: [IIF(&#60;SqlPrincipal.&#34;TP_MATE&#34;&#62; = 1,'Consumo',IIF(&#60;SqlPrincipal.&#34;TP_MATE&#34;&#62; = 2,'Permanente','Todos'))]"/>
    </TfrxChild>
    <TfrxGroupHeader Name="GrhContaEstoque" FillType="ftBrush" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="15" Left="0" Top="204,09462" Width="718,1107" OnBeforePrint="GrhContaEstoqueOnBeforePrint" Condition="SqlPrincipal.&#34;CD_CONTA_CONTABIL_ESTOQUE&#34;" StartNewPage="True">
      <TfrxMemoView Name="Memo8" IndexTag="1" Align="baWidth" AllowVectorExport="True" Left="0" Top="0" Width="718,1107" Height="15" StretchMode="smMaxHeight" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" Font.Charset="1" Font.Color="16777215" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" Fill.BackColor="7754282" ParentFont="False" Text="Conta Estoque: [SqlPrincipal.&#34;CD_CONTA_CONTABIL_ESTOQUE&#34;][IIF(&#60;ExibirDsContaContabil&#62; = 1, '- ' +&#60;SqlPrincipal.&#34;DS_CONTA_CONTABIL_ESTOQUE&#34;&#62;, '')]">
        <Formats>
          <item/>
          <item/>
        </Formats>
      </TfrxMemoView>
    </TfrxGroupHeader>
    <TfrxGroupFooter Name="GrfContaEstoque" FillType="ftBrush" Fill.BackColor="7754282" FillGap.Top="0" FillGap.Left="0" FillGap.Bottom="0" FillGap.Right="0" Frame.Typ="0" Height="15,11811024" Left="0" Top="389,29159" Width="718,1107" OnBeforePrint="GrfContaEstoqueOnBeforePrint">
      <TfrxMemoView Name="Memo9" IndexTag="1" AllowVectorExport="True" Left="627,4015748" Top="0" Width="90" Height="15,11811024" OnBeforePrint="MemTotalTitulo2OnBeforePrint" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="16777215" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" HAlign="haRight" ParentFont="False" Text="[SUM(&#60;SqlPrincipal.&#34;VL_TOTAL&#34;&#62;,MasterData1)]"/>
      <TfrxMemoView Name="Memo10" IndexTag="1" AllowVectorExport="True" Left="15,11812" Top="0" Width="325,03952142" Height="15,11811024" OnBeforePrint="MemTotalTitulo2OnBeforePrint" DataSet="SqlPrincipal" DataSetName="SqlPrincipal" DisplayFormat.DecimalSeparator="," DisplayFormat.FormatStr="%2.2n" DisplayFormat.Kind="fkNumeric" Font.Charset="1" Font.Color="16777215" Font.Height="-9" Font.Name="Arial" Font.Style="1" Frame.Typ="0" ParentFont="False" Text="Saldo Final"/>
    </TfrxGroupFooter>
  </inherited>
</inherited>
