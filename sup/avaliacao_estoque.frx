<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="..\..\..\..\..\..\Repositórios de Clientes\PESSOAS\gsr-reports\base\paisagem.frx" BaseReportAbsolutePath="..\..\..\..\..\..\Repositórios de Clientes\PESSOAS\gsr-reports\base\paisagem.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="08/26/2025 16:19:27" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
       
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }

    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }
 
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }
          
    
/*        
//===================================================================================================================================    
    private void MvMinimo_BeforePrint(object sender, EventArgs e)
    {
      int tpProblema = ((Int32)Report.GetColumnValue(&quot;SqlAvaliador.tp_problema&quot;));
      
      if (tpProblema == 1)
   
      {        
        MvMinimo.TextColor = Color.Red;
      }
      else
      {
        MvMinimo.TextColor = SystemColors.WindowText;
        
      }
      
    }
//===================================================================================================================================    
        

    private void MvRessuprimento_BeforePrint(object sender, EventArgs e)
    {
      TextObject mvRessuprimento = sender as TextObject;
    
      // Obtém o valor do campo TP_PROBLEMA
      int tpProblema = Convert.ToInt32(Report.GetColumnValue(&quot;SqlAvaliador.TP_PROBLEMA&quot;));

      // Verifica se TP_PROBLEMA é igual a 2
      if (tpProblema == 2)
      {
        // Cor azul no formato RGB (C# usa RGB, Delphi usa BGR)
        MvRessuprimento.TextColor = Color.FromArgb(0, 102, 204); // 
      }
      else
      {
        MvRessuprimento.TextColor = SystemColors.WindowText; // Cor padrão do sistema
      }
      
    }
    
 //===================================================================================================================================
    
    

    private void MvMaximo_BeforePrint(object sender, EventArgs e)
    {
      int tpProblema = ((Int32)Report.GetColumnValue(&quot;SqlAvaliador.tp_problema&quot;));

      if (tpProblema == 3)
      {
        MvMaximo.TextColor = Color.Green;
      }
      else
      {
        MvMaximo.TextColor = SystemColors.WindowText;
      } 
    }                                                                                                                             
    
//===================================================================================================================================  */ 
    
    private void bndFilho_BeforePrint(object sender, EventArgs e)
    {
      long idGrupoPai = Convert.ToInt64(Report.GetParameterValue(&quot;idGrupoPai&quot;));
      long idGrupo = Convert.ToInt64(Report.GetParameterValue(&quot;idGrupo&quot;));
      long idAlmoxarifado = Convert.ToInt64(Report.GetParameterValue(&quot;idAlmoxarifado&quot;));

      bndFilho.Visible = (idGrupoPai &gt; 0) || (idGrupo &gt; 0) || (idAlmoxarifado &gt; 0);
    }
                                                                                                                            
    //=================================================================================================================================== 
  
  }
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAD52+0S9jQVqtbGjnQ1fJfcaegeqkp60BrLd+YLnR4XqyfZaBNherXEOpLePTulRqrY+ChMEL6VHdEuu5eaQq8E+ZDa9Ad9YImM+XDJvP1O1qPhF4NERYcMt0Zlx9LPUM=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" PropName="Table" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="site" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" PropName="Table2" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" PropName="Table1" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlAvaliador" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A1.CD_GRUPO&#13;&#10;     , A1.DS_GRUPO&#13;&#10;     , A1.CD_SUBGRUPO&#13;&#10;     , A1.DS_SUBGRUPO&#13;&#10;     , A1.ID_MATERIAL&#13;&#10;     , A1.CD_MATERIAL&#13;&#10;     , A1.DS_MATERIAL&#13;&#10;     , ROUND(A1.ESTOQUE_MINIMO,      4) AS ESTOQUE_MINIMO&#13;&#10;     , ROUND(A1.ESTOQUE_MAXIMO,      4) AS ESTOQUE_MAXIMO&#13;&#10;     , ROUND(A1.PONTO_RESSUPRIMENTO, 4) AS PONTO_RESSUPRIMENTO&#13;&#10;     , ROUND(A1.QTD_ATUAL,           4) AS QTD_ATUAL&#13;&#10;     , CASE WHEN ROUND(A1.QTD_ATUAL, 4) &lt;= ROUND(A1.ESTOQUE_MINIMO, 4) THEN 1&#13;&#10;            WHEN ROUND(A1.QTD_ATUAL, 4) &gt; ROUND(COALESCE(A1.ESTOQUE_MINIMO, -1), 4)&#13;&#10;             AND ROUND(A1.QTD_ATUAL, 4) &lt;= ROUND(A1.PONTO_RESSUPRIMENTO, 4) THEN 2&#13;&#10;            WHEN ROUND(A1.QTD_ATUAL, 4) &gt;= ROUND(A1.ESTOQUE_MAXIMO, 4)&#13;&#10;             AND ROUND(A1.ESTOQUE_MAXIMO, 4) &gt; 0 THEN 3&#13;&#10;            ELSE 4&#13;&#10;       END AS TP_PROBLEMA&#13;&#10;&#13;&#10;FROM (&#13;&#10;  SELECT F.CD_GRUPO&#13;&#10;       , F.DS_GRUPO&#13;&#10;       , D.CD_GRUPO AS CD_SUBGRUPO&#13;&#10;       , D.DS_GRUPO AS DS_SUBGRUPO&#13;&#10;       , C.ID_MATERIAL&#13;&#10;       , C.CD_MATERIAL&#13;&#10;       , C.DS_MATERIAL&#13;&#10;       , COALESCE(C.ESTOQUE_MINIMO, 0) AS ESTOQUE_MINIMO&#13;&#10;       , COALESCE(C.ESTOQUE_MAXIMO, 0) AS ESTOQUE_MAXIMO&#13;&#10;       , COALESCE(C.PONTO_RESSUPRIMENTO, 0) AS PONTO_RESSUPRIMENTO&#13;&#10;       , SUM(COALESCE(B.QTD, 0)) AS QTD_ATUAL&#13;&#10;    FROM (&#13;&#10;          SELECT SRF.ID_FILTRO&#13;&#10;            FROM SIS_RELATORIO_FILTRO SRF&#13;&#10;           WHERE SRF.ID_RELATORIO_FILTRO = :ID_RELATORIO_FILTRO&#13;&#10;         ) S&#13;&#10;         RIGHT JOIN SUP_MATERIAL C ON C.ID_ENTIDADE = :ID_ENTIDADE&#13;&#10;                                  AND C.MANTEM_ESTOQUE = 1&#13;&#10;                                  AND C.TP_MATERIAL = 1&#13;&#10;                                  AND C.ATIVO = 1&#13;&#10;                                  AND (&#13;&#10;                                    (:ID_RELATORIO_FILTRO = 0 AND C.ID_MATERIAL = S.ID_FILTRO)&#13;&#10;                                    OR :ID_RELATORIO_FILTRO &lt;&gt; 0&#13;&#10;                                  )&#13;&#10;         LEFT JOIN SUP_GRUPO D ON D.ID_GRUPO = C.ID_GRUPO&#13;&#10;         LEFT JOIN SUP_GRUPO F ON F.ID_GRUPO = D.ID_GRUPO_PAI&#13;&#10;         LEFT JOIN SUP_LANCAMENTO_IT B ON B.ID_MATERIAL = C.ID_MATERIAL&#13;&#10;         LEFT JOIN SUP_LANCAMENTO A ON A.ID_LANCAMENTO = B.ID_LANCAMENTO&#13;&#10;   WHERE C.ID_ENTIDADE = :ID_ENTIDADE&#13;&#10;     AND C.MANTEM_ESTOQUE = 1&#13;&#10;     AND C.TP_MATERIAL = 1&#13;&#10;     AND C.ATIVO = 1&#13;&#10;     AND (&#13;&#10;       (:ID_RELATORIO_FILTRO &gt; 0 AND C.ID_MATERIAL = S.ID_FILTRO)&#13;&#10;       OR :ID_RELATORIO_FILTRO &lt;=0&#13;&#10;     )&#13;&#10;     AND (C.ESTOQUE_MINIMO &gt; 0 OR C.ESTOQUE_MAXIMO &gt; 0 OR C.PONTO_RESSUPRIMENTO &gt; 0)&#13;&#10;     AND (C.ID_GRUPO = :ID_GRUPO OR -1 = :ID_GRUPO)&#13;&#10;     AND (D.ID_GRUPO_PAI = :ID_GRUPO_PAI OR -1 = :ID_GRUPO_PAI)&#13;&#10;     AND (A.ID_ALMOXARIFADO = :ID_ALMOXARIFADO OR -1 = :ID_ALMOXARIFADO)&#13;&#10;     AND (A.ID_UNIDADE_ESTOQUE = :ID_UNIDADE_ESTOQUE OR -1 = :ID_UNIDADE_ESTOQUE)&#13;&#10;   GROUP BY 1,2,3,4,5,6,7,8,9,10&#13;&#10;) A1&#13;&#10;&#13;&#10;WHERE (&#13;&#10;    (1 = :EXIBIR_MINIMO AND ROUND(A1.QTD_ATUAL, 4) &lt;= ROUND(A1.ESTOQUE_MINIMO, 4)) OR&#13;&#10;    (1 = :EXIBIR_RESSUPRIMENTO AND ROUND(A1.QTD_ATUAL, 4) &gt; ROUND(COALESCE(A1.ESTOQUE_MINIMO, -1), 4)&#13;&#10;     AND ROUND(A1.QTD_ATUAL, 4) &lt;= ROUND(A1.PONTO_RESSUPRIMENTO, 4)) OR&#13;&#10;    (1 = :EXIBIR_MAXIMO AND ROUND(A1.QTD_ATUAL, 4) &gt;= ROUND(A1.ESTOQUE_MAXIMO, 4)&#13;&#10;     AND ROUND(A1.ESTOQUE_MAXIMO, 4) &gt; 0)&#13;&#10;)&#13;&#10;&#13;&#10;ORDER BY&#13;&#10;  12, 1, 3,&#13;&#10;  CASE WHEN 1 = :TP_ORDENACAO THEN LPAD(CAST(A1.CD_MATERIAL AS VARCHAR(20)), 20, '0')  &#13;&#10;       ELSE A1.DS_MATERIAL &#13;&#10;  END">
        <Column Name="cd_grupo" DataType="System.Int64"/>
        <Column Name="ds_grupo" DataType="System.String"/>
        <Column Name="cd_subgrupo" DataType="System.Int64"/>
        <Column Name="ds_subgrupo" DataType="System.String"/>
        <Column Name="id_material" DataType="System.Int64"/>
        <Column Name="cd_material" DataType="System.Int64"/>
        <Column Name="ds_material" DataType="System.String"/>
        <Column Name="estoque_minimo" DataType="System.Double"/>
        <Column Name="estoque_maximo" DataType="System.Double"/>
        <Column Name="ponto_ressuprimento" DataType="System.Double"/>
        <Column Name="qtd_atual" DataType="System.Double"/>
        <Column Name="tp_problema" DataType="System.Int64"/>
        <CommandParameter Name="ID_RELATORIO_FILTRO" DataType="9" Expression="[idRelatorioFiltro]"/>
        <CommandParameter Name="ID_ENTIDADE" DataType="9" Expression="[idEntidade]"/>
        <CommandParameter Name="ID_GRUPO" DataType="22" Expression="[idGrupo]"/>
        <CommandParameter Name="ID_GRUPO_PAI" DataType="22" Expression="[idGrupoPai]"/>
        <CommandParameter Name="ID_ALMOXARIFADO" DataType="22" Expression="[idAlmoxarifado]"/>
        <CommandParameter Name="ID_UNIDADE_ESTOQUE" DataType="22" Expression="[idUnidadeEstoque]"/>
        <CommandParameter Name="EXIBIR_MINIMO" DataType="22" Expression="[exibirMinimo]"/>
        <CommandParameter Name="EXIBIR_RESSUPRIMENTO" DataType="22" Expression="[exibirPontoRessuprimento]"/>
        <CommandParameter Name="EXIBIR_MAXIMO" DataType="22" Expression="[exibirMaximo]"/>
        <CommandParameter Name="TP_ORDENACAO" DataType="22" Expression="[tpOrdenacao]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlGrupo" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CD_GRUPO&#13;&#10;     , TRIM(A.DS_GRUPO) AS DS_GRUPO              &#13;&#10;  FROM SUP_GRUPO A&#13;&#10; WHERE A.ID_GRUPO = :ID_GRUPO_PAI">
        <Column Name="cd_grupo" DataType="System.Int64"/>
        <Column Name="ds_grupo" DataType="System.String"/>
        <CommandParameter Name="ID_GRUPO_PAI" DataType="22" Expression="[idGrupoPai]"/>
      </TableDataSource>
      <TableDataSource Name="Table2" Alias="SqlAlmoxarifado" DataType="System.Int32" Enabled="true" SelectCommand=" SELECT A.CD_ALMOXARIFADO&#13;&#10;     , A.DS_ALMOXARIFADO&#13;&#10;  FROM SUP_ALMOXARIFADO A&#13;&#10; WHERE A.ID_ALMOXARIFADO = :ID_ALMOXARIFADO">
        <Column Name="cd_almoxarifado" DataType="System.Int64"/>
        <Column Name="ds_almoxarifado" DataType="System.String"/>
        <CommandParameter Name="ID_ALMOXARIFADO" DataType="22" Expression="[idAlmoxarifado]"/>
      </TableDataSource>
      <TableDataSource Name="Table3" Alias="SqlDetalhe" DataType="System.Int32" Enabled="true" SelectCommand="SELECT B.ID_MATERIAL&#13;&#10;     , E.CD_ALMOXARIFADO&#13;&#10;     , E.DS_ALMOXARIFADO&#13;&#10;     , D.CD_UNIDADE_ESTOQUE&#13;&#10;     , D.DS_UNIDADE_ESTOQUE&#13;&#10;     , ROUND(SUM(B.QTD), 4) AS QTD_ATUAL&#13;&#10;  FROM SIS_SEQUENCIA S&#13;&#10;       LEFT JOIN SUP_LANCAMENTO_IT      B ON 1                      = S.ID_SEQUENCIA&#13;&#10;       LEFT JOIN SUP_LANCAMENTO         A ON A.ID_LANCAMENTO        = B.ID_LANCAMENTO&#13;&#10;       LEFT JOIN SUP_UNIDADE_ESTOQUE    D ON D.ID_UNIDADE_ESTOQUE   = A.ID_UNIDADE_ESTOQUE&#13;&#10;       LEFT JOIN SUP_ALMOXARIFADO       E ON E.ID_ALMOXARIFADO      = A.ID_ALMOXARIFADO&#13;&#10; WHERE S.ID_SEQUENCIA = :EXIBIR_DETALHAMENTO&#13;&#10;   AND B.ID_MATERIAL  = :ID_MATERIAL&#13;&#10;   AND (A.ID_ALMOXARIFADO    = :ID_ALMOXARIFADO    OR -1 = :ID_ALMOXARIFADO)&#13;&#10;   AND (A.ID_UNIDADE_ESTOQUE = :ID_UNIDADE_ESTOQUE OR -1 = :ID_UNIDADE_ESTOQUE)&#13;&#10;   &#13;&#10; GROUP BY 1,2,3,4,5&#13;&#10;HAVING ROUND(SUM(B.QTD), 4) &lt;&gt; 0&#13;&#10; ORDER BY 1,2,4">
        <Column Name="id_material" DataType="System.Int64"/>
        <Column Name="cd_almoxarifado" DataType="System.Int32"/>
        <Column Name="ds_almoxarifado" DataType="System.String"/>
        <Column Name="cd_unidade_estoque" DataType="System.Int32"/>
        <Column Name="ds_unidade_estoque" DataType="System.String"/>
        <Column Name="qtd_atual" DataType="System.Double"/>
        <CommandParameter Name="EXIBIR_DETALHAMENTO" DataType="22" Expression="[exibirDetalhamento]"/>
        <CommandParameter Name="ID_MATERIAL" DataType="9" Expression="[SqlAvaliador.id_material]"/>
        <CommandParameter Name="ID_ALMOXARIFADO" DataType="22" Expression="[IdAlmoxarifado]"/>
        <CommandParameter Name="ID_UNIDADE_ESTOQUE" DataType="22" Expression="[IdUnidadeEstoque]"/>
      </TableDataSource>
      <TableDataSource Name="Table4" Alias="SqlSubGrupo" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CD_GRUPO AS CD_SUBGRUPO&#13;&#10;     , TRIM(A.DS_GRUPO) AS DS_SUBGRUPO&#13;&#10;  FROM SUP_GRUPO A&#13;&#10; WHERE A.ID_GRUPO = :ID_GRUPO">
        <Column Name="cd_subgrupo" DataType="System.Int64"/>
        <Column Name="ds_subgrupo" DataType="System.String"/>
        <CommandParameter Name="ID_GRUPO" DataType="22" Expression="[idGrupo]"/>
      </TableDataSource>
      <TableDataSource Name="Table5" Alias="SqlUnidadeEstoque" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.CD_UNIDADE_ESTOQUE&#13;&#10;     , A.DS_UNIDADE_ESTOQUE&#13;&#10;  FROM SUP_UNIDADE_ESTOQUE A&#13;&#10; WHERE A.ID_UNIDADE_ESTOQUE = :ID_UNIDADE_ESTOQUE">
        <Column Name="cd_unidade_estoque" DataType="System.Int64"/>
        <Column Name="ds_unidade_estoque" DataType="System.String"/>
        <CommandParameter Name="ID_UNIDADE_ESTOQUE" DataType="22" Expression="[idUnidadeEstoque]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Avaliação Estoque&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="2"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
    <Parameter Name="competencia" DataType="System.Int64" AsString=""/>
    <Parameter Name="idUnidadeEstoque" DataType="System.String" Expression="&quot;-1&quot;"/>
    <Parameter Name="idAlmoxarifado" DataType="System.String" Expression="&quot;-1&quot;"/>
    <Parameter Name="idGrupo" DataType="System.String" Expression="&quot;-1&quot;"/>
    <Parameter Name="idGrupoPai" DataType="System.String" Expression="&quot;-1&quot;"/>
    <Parameter Name="exibirMinimo" DataType="System.String" Expression="&quot;1&quot;"/>
    <Parameter Name="exibirPontoRessuprimento" DataType="System.String" Expression="&quot;1&quot;"/>
    <Parameter Name="exibirMaximo" DataType="System.String" Expression="&quot;1&quot;"/>
    <Parameter Name="exibirDetalhamento" DataType="System.String" Expression="&quot;0&quot;"/>
    <Parameter Name="tpOrdenacao" DataType="System.String" Expression="&quot;1&quot;"/>
    <Parameter Name="idMaterial" DataType="System.Int64" AsString=""/>
  </Dictionary>
  <inherited Name="MainPage">
    <inherited Name="BndCabecalho">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="BndFiltro" Top="98.58">
        <inherited Name="TxtFiltro"/>
        <ChildBand Name="bndFilho" ZOrder="-1" Top="121.56" Width="1047.06" Height="24.57" BeforePrintEvent="bndFilho_BeforePrint">
          <TextObject Name="TextPeriodo" Top="9.45" Width="1047.06" Height="15.12" Text="[IIf([IdGrupoPai] != &quot;-1&quot;,Format(&quot;Grupo: &lt;b&gt;{0} - {1}&lt;/b&gt;&quot;, [SqlSubGrupo.cd_subgrupo],[SqlSubGrupo.ds_subgrupo]),&quot; &quot;)] [IIf([IdAlmoxarifado] != &quot;-1&quot;,Format( &quot;| Almoxarifado: &lt;b&gt;{0} - {1}&lt;/b&gt;&quot;, [SqlAlmoxarifado.cd_almoxarifado],[SqlAlmoxarifado.ds_almoxarifado]), &quot; &quot;)] [IIf([IdUnidadeEstoque] != &quot;-1&quot;, Format(&quot;| Un. estoque: &lt;b&gt;{0} - {1}&lt;/b&gt;&quot;, [SqlUnidadeEstoque.cd_unidade_estoque],[SqlUnidadeEstoque.ds_unidade_estoque]), &quot; &quot;)]&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
        </ChildBand>
      </inherited>
    </inherited>
    <GroupHeaderBand Name="GrpAgrupamento1" ZOrder="0" Top="184.16" Width="1047.06" Height="15.12" RepeatOnEveryPage="true" Condition="[SqlAvaliador.tp_problema]">
      <TextObject Name="Text7" Width="1047.06" Height="15.12" Border.Lines="Left, Top, Bottom" Border.Color="White" Fill.Color="199, 199, 199" Text="[IIf([SqlAvaliador.tp_problema] == 1, &quot;Materiais com saldo atual abaixo ou igual ao estoque mínimo&quot;, &quot; &quot;)][IIf([SqlAvaliador.tp_problema] == 2, &quot;Materiais com saldo atual abaixo ou igual ao ponto de ressuprimento&quot;, &quot; &quot;)][IIf ([SqlAvaliador.tp_problema] == 3, &quot;Materiais com saldo atual acima ou igual ao estoque máximo&quot;, &quot; &quot;)]" Font="Tahoma, 7pt, style=Bold"/>
      <DataHeaderBand Name="cabRelatorio" Top="150.21" Width="1047.06" Height="29.86" RepeatOnEveryPage="true">
        <TextObject Name="Text2" Width="647.14" Height="29.86" Border.Lines="Right, Top, Bottom" Border.Color="White" Fill.Color="41, 82, 118" Text="Grupo / SubGrupo / Material" VertAlign="Bottom" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text3" Left="647.14" Width="100.17" Height="29.86" Border.Lines="All" Border.Color="White" Fill.Color="41, 82, 118" Text="Estoque&#13;&#10;Mínimo" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text4" Left="746.93" Width="100.17" Height="29.86" Border.Lines="All" Border.Color="White" Fill.Color="41, 82, 118" Text="Ponto de &#13;&#10;Ressuprimento" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text5" Left="847.1" Width="100.17" Height="29.86" Border.Lines="All" Border.Color="White" Fill.Color="41, 82, 118" Text="Estoque&#13;&#10;Máximo" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text6" Left="946.89" Width="100.17" Height="29.86" Border.Lines="Left, Top, Bottom" Border.Color="White" Fill.Color="41, 82, 118" Text="Estoque&#13;&#10;Atual" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White"/>
      </DataHeaderBand>
      <GroupHeaderBand Name="GrpAgrupamento2" Top="203.36" Width="1047.06" Height="15.12" Condition="[SqlAvaliador.cd_grupo]">
        <TextObject Name="Text8" Width="1047.06" Height="15.12" Border.Lines="Left, Top, Bottom" Border.Color="White" Fill.Color="ButtonFace" Text="     [SqlAvaliador.cd_grupo] - [SqlAvaliador.ds_grupo]" VertAlign="Center" Font="Tahoma, 7pt, style=Bold"/>
        <GroupHeaderBand Name="GrpAgrupamento3" Top="222.56" Width="1047.06" Height="15.12" Condition="[SqlAvaliador.cd_subgrupo]">
          <TextObject Name="Text9" Width="1047.06" Height="15.12" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="        [SqlAvaliador.cd_subgrupo] - [SqlAvaliador.ds_subgrupo]" VertAlign="Center" Font="Tahoma, 7pt, style=Bold"/>
          <DataBand Name="bndAvaliador" Top="241.76" Width="1047.06" Height="12.85" Guides="9.45" DataSource="Table" PrintIfDetailEmpty="true">
            <TextObject Name="Text10" Width="40.07" Height="12.85" Anchor="Top, Left, Right" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="[SqlAvaliador.cd_material]" Format="Custom" Format.Format="0000000" Font="Tahoma, 7pt"/>
            <TextObject Name="Text11" Left="40.07" Width="607.07" Height="12.85" Anchor="Top, Left, Right" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="[SqlAvaliador.ds_material]" Format="Custom" Format.Format="0000000" Font="Tahoma, 7pt"/>
            <TextObject Name="MvMinimo" Left="647.14" Width="100.17" Height="12.85" Border.Lines="Left, Top, Bottom" Border.Color="White" BeforePrintEvent="Text12_BeforePrint" Text="[SqlAvaliador.estoque_minimo]" Format="Number" Format.UseLocale="false" Format.DecimalDigits="4" Format.DecimalSeparator="," Format.GroupSeparator="." Format.NegativePattern="1" HorzAlign="Right" Font="Tahoma, 7pt">
              <Highlight>
                <Condition Expression="[SqlAvaliador.tp_problema] == 1" Font="Arial, 10pt"/>
              </Highlight>
            </TextObject>
            <TextObject Name="MvRessuprimento" Left="746.93" Width="100.17" Height="12.85" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="[SqlAvaliador.ponto_ressuprimento]" Format="Number" Format.UseLocale="false" Format.DecimalDigits="4" Format.DecimalSeparator="," Format.GroupSeparator="." Format.NegativePattern="1" HorzAlign="Right" Font="Tahoma, 7pt">
              <Highlight>
                <Condition Expression="[SqlAvaliador.tp_problema] == 2" TextFill.Color="HotTrack" Font="Arial, 10pt"/>
              </Highlight>
            </TextObject>
            <TextObject Name="MvMaximo" Left="847.1" Width="100.17" Height="12.85" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="[SqlAvaliador.estoque_maximo]" Format="Number" Format.UseLocale="false" Format.DecimalDigits="4" Format.DecimalSeparator="," Format.GroupSeparator="." Format.NegativePattern="1" HorzAlign="Right" Font="Tahoma, 7pt">
              <Highlight>
                <Condition Expression="[SqlAvaliador.tp_problema] == 3" TextFill.Color="Green" Font="Arial, 10pt"/>
              </Highlight>
            </TextObject>
            <TextObject Name="MvAtual" Left="946.89" Width="100.17" Height="12.85" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="[SqlAvaliador.qtd_atual]" Format="Number" Format.UseLocale="false" Format.DecimalDigits="4" Format.DecimalSeparator="," Format.GroupSeparator="." Format.NegativePattern="1" HorzAlign="Right" Font="Tahoma, 7pt" TextFill.Color="Blue"/>
            <DataBand Name="bndDetalhe" Top="258.69" Width="1047.06" Height="12.1" DataSource="Table3">
              <TextObject Name="Text16" Width="40.07" Height="12.1" Border.Lines="Left, Top, Bottom" Border.Color="White" Font="Tahoma, 7pt"/>
              <TextObject Name="Text17" Left="40.07" Width="399.92" Height="12.1" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="&lt;i&gt;[SqlDetalhe.cd_almoxarifado] - [SqlDetalhe.ds_almoxarifado]&lt;/i&gt;" Font="Tahoma, 7pt" TextRenderType="HtmlTags"/>
              <TextObject Name="Text18" Left="439.99" Width="506.9" Height="12.1" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="&lt;i&gt;[SqlDetalhe.cd_unidade_estoque] - [SqlDetalhe.ds_unidade_estoque]&lt;/i&gt;" Font="Tahoma, 7pt" TextRenderType="HtmlTags"/>
              <TextObject Name="Text19" Left="946.89" Width="100.17" Height="12.1" Border.Lines="Left, Top, Bottom" Border.Color="White" Text="&lt;i&gt;[SqlDetalhe.qtd_atual]&lt;/i&gt;" Font="Tahoma, 7pt" TextRenderType="HtmlTags"/>
            </DataBand>
          </DataBand>
          <GroupFooterBand Name="ftrAgrupamento3" Top="274.87" Width="1047.06" Height="9.45"/>
        </GroupHeaderBand>
        <GroupFooterBand Name="ftrAgrupamento2" Top="288.41" Width="1047.06" Height="9.45"/>
      </GroupHeaderBand>
      <GroupFooterBand Name="ftrAgrupamento1" Top="301.94" Width="1047.06" Height="9.45"/>
      <DataFooterBand Name="ftrRelatorio" Top="315.47" Width="1047.06" Height="28.35"/>
    </GroupHeaderBand>
    <inherited Name="BndRodape" Top="347.9">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
</inherited>
