<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="..\..\..\..\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\Documents\gsr-reports\base\retrato.frx" BaseReportAbsolutePath="..\..\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\Documents\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\Documents\gsr-reports\base\retrato.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="07/16/2025 16:18:58" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
        
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }  
    
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }    
    public Color ConvertToColorr(string value)
    {
      try
      {
        int rgb;

        // Verifica se é hexadecimal (começa com $ ou contém letras A-F)
        if (value.StartsWith(&quot;$&quot;) || value.ToUpper().IndexOfAny(new char[] { 'A', 'B', 'C', 'D', 'E', 'F' }) &gt;= 0)
        {
          // Conversão de Hex Delphi para int
          string hex = value.Replace(&quot;$&quot;, &quot;&quot;);
          int argb = int.Parse(hex, System.Globalization.NumberStyles.HexNumber);
          rgb = argb &amp; 0x00FFFFFF; // Ignora Alpha
        }
        else
        {
          // Conversão de decimal direto
          int decimalValue = int.Parse(value);
          rgb = decimalValue &amp; 0x00FFFFFF; // Ignora Alpha se existir
        }

        // Retorna a cor com alpha 255
        return Color.FromArgb(255, Color.FromArgb(rgb));
      }
      catch
      {
        // Se der erro, retorna branco ou a cor padrão que desejar
        return Color.White;
      }
    }
    
    private void mdtFuncionario_BeforePrint(object sender, EventArgs e)
    {
      //SqlPonto - Param ID_FUNCIONARIO
      TableDataSource SqlPonto = Report.GetDataSource(&quot;SqlPonto&quot;) as TableDataSource;
      SqlPonto.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
      (SqlPonto as DataSourceBase).Init();
      
      //SqlSomaPonto - Param ID_FUNCIONARIO
      TableDataSource SqlSomaPonto = Report.GetDataSource(&quot;SqlSomaPonto&quot;) as TableDataSource;
      SqlSomaPonto.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
      (SqlSomaPonto as DataSourceBase).Init();
      
      //SqlAM - Param ID_FUNCIONARIO
      TableDataSource SqlAM = Report.GetDataSource(&quot;SqlAM&quot;) as TableDataSource;
      SqlAM.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
      (SqlAM as DataSourceBase).Init();
      
      //SqlHP - Param ID_FUNCIONARIO
      TableDataSource SqlHP = Report.GetDataSource(&quot;SqlHP&quot;) as TableDataSource;
      SqlHP.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
      (SqlHP as DataSourceBase).Init();
      
      if(((Int64)Report.GetParameterValue(&quot;imprimeJustificativa&quot;)) == 1){
        //SqlJustificativaObservacao - Param ID_FUNCIONARIO
        TableDataSource SqlJustificativaObservacao = Report.GetDataSource(&quot;SqlJustificativaObservacao&quot;) as TableDataSource;
        SqlJustificativaObservacao.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
        (SqlJustificativaObservacao as DataSourceBase).Init();
      }
      
    }

    private void bndPonto_BeforePrint(object sender, EventArgs e)
    {

      if ((Int32)Report.GetColumnValue(&quot;SqlPonto.tem_outros_registros&quot;) == 1)
      {  
        // Acessa as fontes de dados SqlPonto
        TableDataSource SqlOutrosRegistros = Report.GetDataSource(&quot;SqlOutrosRegistros&quot;) as TableDataSource;    
        SqlOutrosRegistros.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
        SqlOutrosRegistros.Parameters.FindByName(&quot;DT_PONTO&quot;).Value = Report.GetColumnValue(&quot;SqlPonto.dt_ponto&quot;);
        (SqlOutrosRegistros as DataSourceBase).Init();
      }
      
      if((Int64)Report.GetParameterValue(&quot;colorirTipoDia&quot;) == 1){
        
        string corHex = Report.GetColumnValue(&quot;SqlPonto.cor&quot;).ToString();
        
        SqlPontoDT_PONTO.FillColor = ConvertToColorr(corHex);
        SqlPontoDS_TP_DIA_PONTO.FillColor = ConvertToColorr(corHex);
      }
      
      
      
    }

    private void bndOutrosRegistros_BeforePrint(object sender, EventArgs e)
    {
      bndOutrosRegistros.Visible = (Int32)Report.GetColumnValue(&quot;SqlPonto.TEM_OUTROS_REGISTROS&quot;) == 1;

      if ((Int64)Report.GetParameterValue(&quot;colorirTipoDia&quot;) == 1)
      {
        //Cria uma var para armazenar a coluna em String
        string corHex = Report.GetColumnValue(&quot;SqlPonto.COR&quot;).ToString();
      
        //Passa a cor para o memo (já convertida de Delphi - $00FFFFFF para C# - Color.White)               
        memDiaOutrosRegistros.TextColor = ConvertToColorr(corHex);
        //memDiaOutrosRegistros.Highlight.FillColor = false;

        memTipoDiaOutrosRegistros.TextColor = ConvertToColorr(corHex);
        //memTipoDiaOutrosRegistros.Highlight.FillColor = false;
      }
      
      TableDataSource SqlOutrosRegistros = Report.GetDataSource(&quot;SqlOutrosRegistros&quot;) as TableDataSource;
      // Calcular altura proporcional ao número de registros
      int altura = 13 * (SqlOutrosRegistros.RowCount / 4);

      // Atualiza a altura da própria banda
      bndOutrosRegistros.Height = altura;

      // Ajusta a altura de todos os campos visualmente
      memDiaOutrosRegistros.Height = altura;
      memTipoDiaOutrosRegistros.Height = altura;
      memOutrosRegistros1.Height = altura;
      memOutrosRegistros2.Height = altura;
      memOutrosRegistros3.Height = altura;
      memOutrosRegistros4.Height = altura;
      memOutrosRegistros5.Height = altura;
      memOutrosRegistros6.Height = altura;
      memOutrosRegistros7.Height = altura;
      memOutrosRegistros8.Height = altura;
      memOutrosRegistros9.Height = altura;
      memOutrosRegistros10.Height = altura;
    }

    private void bndApuracaoCargaHoraria_BeforePrint(object sender, EventArgs e)
    { 
      bndApuracaoCargaHoraria.Visible = (Int16)Report.GetColumnValue(&quot;SqlPonto.APURACAO_CARGA_HORARIA&quot;) == 1;
   
    }

    private void grpJustificativaObservacao_BeforePrint(object sender, EventArgs e)
    {
      ((BandBase)sender).Visible = (Int32)Report.GetColumnValue(&quot;ImprimeJustificativa&quot;) == 1;
    }

    private void bndJustificativaObservacao_BeforePrint(object sender, EventArgs e)
    {
      ((BandBase)sender).Visible = (Int32)Report.GetColumnValue(&quot;ImprimeJustificativa&quot;) == 1;
    }

    private void grfJustificativaObservacao_BeforePrint(object sender, EventArgs e)
    {
      ((BandBase)sender).Visible = (Int32)Report.GetColumnValue(&quot;ImprimeJustificativa&quot;) == 1;
    }

    private void cabHorario_BeforePrint(object sender, EventArgs e)
    {
      int tipoHorario = (Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.ID_TP_HORARIO_CONTRATUAL&quot;);
      cabHorario.Visible = tipoHorario == 1 || tipoHorario == 2;
    }

    private void cabCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      cabCargaHoraria.Visible = (Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.ID_TP_HORARIO_CONTRATUAL&quot;) == 3;
    }

    private void mdtHorarioContratual_BeforePrint(object sender, EventArgs e)
    {
      int tipoHorario = (Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.ID_TP_HORARIO_CONTRATUAL&quot;);
      mdtHorarioContratual.Visible = tipoHorario == 1 || tipoHorario == 2;
    }

    private void bndHorarioContratualCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      bndHorarioContratualCargaHoraria.Visible = (Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.ID_TP_HORARIO_CONTRATUAL&quot;) == 3;
    }

    private void ftrHorario_BeforePrint(object sender, EventArgs e)
    {
      int tipoHorario = (Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.ID_TP_HORARIO_CONTRATUAL&quot;);
      ftrHorario.Visible = tipoHorario == 1 || tipoHorario == 2;

    }

    private void ftrCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      ftrCargaHoraria.Visible = (Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.ID_TP_HORARIO_CONTRATUAL&quot;) == 3;

    }
  }
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAf45SGh+1JQ06HfUCwVjdXkCyXOd9RvbMkV2y8PKTmYL5ELmpgxhEufvvYXggj47AbdjnR2ZIhTO/eV8u1e+0G7oJtn1u+xtcfv8xBEtncgA==">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="site" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlFuncionario" DataType="System.Int32" Enabled="true" SelectCommandlt;= B.DT_FINAL&#13;&#10;                         UNION&#13;&#10;                        SELECT FF.ID_HORARIO_CONTRATUAL_RH AS ID_HORARIO_CONTRATUAL&#13;&#10;                             , FF.DT_INICIO_HORARIO&#13;&#10;                          FROM GPE_FUNCIONARIO_HORARIO FF&#13;&#10;                         WHERE 1                     = C.INTEGRADO_RH&#13;&#10;                           AND FF.ID_FUNCIONARIO_RH  = A.ID_FILTRO&#13;&#10;                           AND FF.DT_INICIO_HORARIO &lt;= B.DT_FINAL&#13;&#10;                         ORDER BY 2 DESC&#13;&#10;                          LIMIT 1&#13;&#10;                       ) XX ) AS ID_HORARIO_CONTRATUAL&#13;&#10;          FROM SIS_RELATORIO_FILTRO A&#13;&#10;               LEFT JOIN GPE_PERIODO_APURACAO                B ON B.ID_PERIODO_APURACAO                            = :ID_PERIODO_APURACAO&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO                    C ON C.ID_CONFIGURACAO                                = 1&#13;&#10;        &#13;&#10;               LEFT JOIN GPE_AREA_FUNCIONARIO                E ON E.ID_AREA_APURACAO                               = B.ID_AREA_APURACAO&#13;&#10;                                                              AND ( (  E.ID_FUNCIONARIO_RH  = A.ID_FILTRO   AND 1  = C.INTEGRADO_RH) OR&#13;&#10;                                                                    (  E.ID_FUNCIONARIO     = A.ID_FILTRO   AND 0 &lt;&gt; C.INTEGRADO_RH)   )&#13;&#10;               LEFT JOIN GPE_AREA_APURACAO                   F ON F.ID_AREA_APURACAO                               = B.ID_AREA_APURACAO&#13;&#10;               LEFT JOIN GPE_FUNCIONARIO_POR_ID(A.ID_FILTRO) G ON 1 = 1&#13;&#10;               LEFT JOIN SIS_FORMATA_DOCUMENTO(2, G.CPF)     H ON 1 = 1&#13;&#10;               LEFT JOIN GPE_LOCAL_TRABALHO_VIEW             I ON I.ID_LOCAL_TRABALHO                              = G.ID_LOCAL_TRABALHO&#13;&#10;               LEFT JOIN SIS_ENTIDADE                        K ON K.ID_ENTIDADE                                    = G.ID_ENTIDADE&#13;&#10;               LEFT JOIN SIS_PESSOA                          L ON L.ID_PESSOA_JURIDICA                             = K.ID_PESSOA_JURIDICA&#13;&#10;         WHERE A.ID_RELATORIO_FILTRO = :ID_RELATORIO_FILTRO                                                        &#13;&#10;       ) A1&#13;&#10;       LEFT JOIN GPE_HORARIO_CONTRATUAL_VIEW B1 ON B1.ID_HORARIO_CONTRATUAL = A1.ID_HORARIO_CONTRATUAL&#13;&#10; ORDER BY&#13;&#10;       A1.NOME&#13;&#10;     , A1.MATRICULA">
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <Column Name="matricula" DataType="System.String"/>
        <Column Name="nome" DataType="System.String"/>
        <Column Name="cpf" DataType="System.String"/>
        <Column Name="pis" DataType="System.String"/>
        <Column Name="cargo" DataType="System.String"/>
        <Column Name="funcao" DataType="System.String"/>
        <Column Name="ds_local_trabalho" DataType="System.String"/>
        <Column Name="ds_area_apuracao" DataType="System.String"/>
        <Column Name="cp_ano" DataType="System.Int32"/>
        <Column Name="cp_mes" DataType="System.Int32"/>
        <Column Name="dt_inicial" DataType="System.DateTime"/>
        <Column Name="dt_final" DataType="System.DateTime"/>
        <Column Name="id_entidade" DataType="System.Int32"/>
        <Column Name="ds_entidade" DataType="System.String"/>
        <Column Name="doc_entidade" DataType="System.String"/>
        <Column Name="id_horario_contratual" DataType="System.Int32"/>
        <Column Name="cd_horario_contratual" DataType="System.Int32"/>
        <Column Name="ds_horario_contratual" DataType="System.String"/>
        <Column Name="id_tp_horario_contratual" DataType="System.Int32"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_RELATORIO_FILTRO" DataType="9" Expression="[idRelatorioFiltro]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlHorarioContratual" DataType="System.Int32" Enabled="true" SelectCommand="SELECT AA1.ID_HORARIO_CONTRATUAL&#13;&#10;     , AA1.ID_TP_HORARIO_CONTRATUAL&#13;&#10;     , SEQ.ID_SEQUENCIA AS SEQUENCIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 1 THEN 'Domingo'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 2 THEN 'Segunda'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 3 THEN 'Terça'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 4 THEN 'Quarta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 5 THEN 'Quinta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 6 THEN 'Sexta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 7 THEN 'Sábado'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 2                          THEN CAST(SEQ.ID_SEQUENCIA AS CHAR(1)) || 'º Turno'&#13;&#10;             END AS VARCHAR(20)) AS DS_DIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_01&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_01   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_01&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_02   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_03&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_03   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_03&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN AA1.ID_TP_CARGA_HORARIA&#13;&#10;             END AS INTEGER) AS ID_TP_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN AA1.DS_TP_CARGA_HORARIA&#13;&#10;             END AS VARCHAR(30)) AS DS_TP_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 THEN CAST(AA1.D01_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D01_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 THEN CAST(AA1.D02_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D02_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 THEN CAST(AA1.D03_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D03_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 THEN CAST(AA1.D04_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D04_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 THEN CAST(AA1.D05_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D05_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 THEN CAST(AA1.D06_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D06_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 THEN CAST(AA1.D07_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D07_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;             END AS VARCHAR(10)) AS CARGA_HORARIA&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT HOR.ID_HORARIO_CONTRATUAL&#13;&#10;             , HOR.ID_TP_HORARIO_CONTRATUAL&#13;&#10;&#13;&#10;             , D01.ENTRADA_01  AS D01_ENTRADA_01&#13;&#10;             , D01.SAIDA_01    AS D01_SAIDA_01&#13;&#10;             , D01.ENTRADA_02  AS D01_ENTRADA_02&#13;&#10;             , D01.SAIDA_02    AS D01_SAIDA_02&#13;&#10;             , D01.ENTRADA_03  AS D01_ENTRADA_03&#13;&#10;             , D01.SAIDA_03    AS D01_SAIDA_03&#13;&#10;&#13;&#10;             , D02.ENTRADA_01  AS D02_ENTRADA_01&#13;&#10;             , D02.SAIDA_01    AS D02_SAIDA_01&#13;&#10;             , D02.ENTRADA_02  AS D02_ENTRADA_02&#13;&#10;             , D02.SAIDA_02    AS D02_SAIDA_02&#13;&#10;             , D02.ENTRADA_03  AS D02_ENTRADA_03&#13;&#10;             , D02.SAIDA_03    AS D02_SAIDA_03&#13;&#10;&#13;&#10;             , D03.ENTRADA_01  AS D03_ENTRADA_01&#13;&#10;             , D03.SAIDA_01    AS D03_SAIDA_01&#13;&#10;             , D03.ENTRADA_02  AS D03_ENTRADA_02&#13;&#10;             , D03.SAIDA_02    AS D03_SAIDA_02&#13;&#10;             , D03.ENTRADA_03  AS D03_ENTRADA_03&#13;&#10;             , D03.SAIDA_03    AS D03_SAIDA_03&#13;&#10;&#13;&#10;             , D04.ENTRADA_01  AS D04_ENTRADA_01&#13;&#10;             , D04.SAIDA_01    AS D04_SAIDA_01&#13;&#10;             , D04.ENTRADA_02  AS D04_ENTRADA_02&#13;&#10;             , D04.SAIDA_02    AS D04_SAIDA_02&#13;&#10;             , D04.ENTRADA_03  AS D04_ENTRADA_03&#13;&#10;             , D04.SAIDA_03    AS D04_SAIDA_03&#13;&#10;&#13;&#10;             , D05.ENTRADA_01  AS D05_ENTRADA_01&#13;&#10;             , D05.SAIDA_01    AS D05_SAIDA_01&#13;&#10;             , D05.ENTRADA_02  AS D05_ENTRADA_02&#13;&#10;             , D05.SAIDA_02    AS D05_SAIDA_02&#13;&#10;             , D05.ENTRADA_03  AS D05_ENTRADA_03&#13;&#10;             , D05.SAIDA_03    AS D05_SAIDA_03&#13;&#10;&#13;&#10;             , D06.ENTRADA_01  AS D06_ENTRADA_01&#13;&#10;             , D06.SAIDA_01    AS D06_SAIDA_01&#13;&#10;             , D06.ENTRADA_02  AS D06_ENTRADA_02&#13;&#10;             , D06.SAIDA_02    AS D06_SAIDA_02&#13;&#10;             , D06.ENTRADA_03  AS D06_ENTRADA_03&#13;&#10;             , D06.SAIDA_03    AS D06_SAIDA_03&#13;&#10;&#13;&#10;             , D07.ENTRADA_01  AS D07_ENTRADA_01&#13;&#10;             , D07.SAIDA_01    AS D07_SAIDA_01&#13;&#10;             , D07.ENTRADA_02  AS D07_ENTRADA_02&#13;&#10;             , D07.SAIDA_02    AS D07_SAIDA_02&#13;&#10;             , D07.ENTRADA_03  AS D07_ENTRADA_03&#13;&#10;             , D07.SAIDA_03    AS D07_SAIDA_03&#13;&#10;&#13;&#10;             , CAST(DIV(D01.CARGA_HORARIA, 60) AS INTEGER) AS D01_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D02.CARGA_HORARIA, 60) AS INTEGER) AS D02_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D03.CARGA_HORARIA, 60) AS INTEGER) AS D03_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D04.CARGA_HORARIA, 60) AS INTEGER) AS D04_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D05.CARGA_HORARIA, 60) AS INTEGER) AS D05_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D06.CARGA_HORARIA, 60) AS INTEGER) AS D06_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D07.CARGA_HORARIA, 60) AS INTEGER) AS D07_CARGA_HORARIA&#13;&#10;&#13;&#10;             , CAST(MOD(D01.CARGA_HORARIA, 60) AS INTEGER) AS D01_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D02.CARGA_HORARIA, 60) AS INTEGER) AS D02_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D03.CARGA_HORARIA, 60) AS INTEGER) AS D03_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D04.CARGA_HORARIA, 60) AS INTEGER) AS D04_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D05.CARGA_HORARIA, 60) AS INTEGER) AS D05_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D06.CARGA_HORARIA, 60) AS INTEGER) AS D06_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D07.CARGA_HORARIA, 60) AS INTEGER) AS D07_CARGA_HORARIA_MIN&#13;&#10;&#13;&#10;             , TCG.ID_TP_CARGA_HORARIA&#13;&#10;             , TCG.DS_TP_CARGA_HORARIA&#13;&#10;          FROM GPE_HORARIO_CONTRATUAL_VIEW  HOR&#13;&#10;               LEFT JOIN GPE_HORARIO            D01 ON D01.ID_HORARIO           = HOR.ID_HORARIO_01&#13;&#10;               LEFT JOIN GPE_HORARIO            D02 ON D02.ID_HORARIO           = HOR.ID_HORARIO_02&#13;&#10;               LEFT JOIN GPE_HORARIO            D03 ON D03.ID_HORARIO           = HOR.ID_HORARIO_03&#13;&#10;               LEFT JOIN GPE_HORARIO            D04 ON D04.ID_HORARIO           = HOR.ID_HORARIO_04&#13;&#10;               LEFT JOIN GPE_HORARIO            D05 ON D05.ID_HORARIO           = HOR.ID_HORARIO_05&#13;&#10;               LEFT JOIN GPE_HORARIO            D06 ON D06.ID_HORARIO           = HOR.ID_HORARIO_06&#13;&#10;               LEFT JOIN GPE_HORARIO            D07 ON D07.ID_HORARIO           = HOR.ID_HORARIO_07&#13;&#10;               LEFT JOIN GPE_TP_CARGA_HORARIA   TCG ON TCG.ID_TP_CARGA_HORARIA  = D01.ID_TP_CARGA_HORARIA&#13;&#10;         WHERE HOR.ID_HORARIO_CONTRATUAL = :ID_HORARIO_CONTRATUAL&#13;&#10;       ) AA1, SIS_SEQUENCIA SEQ&#13;&#10; WHERE SEQ.ID_SEQUENCIA &lt;= CASE WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 THEN 7&#13;&#10;                                WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 2 THEN 4&#13;&#10;                                WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN 1&#13;&#10;                           ELSE 0 END&#13;&#10; ORDER BY&#13;&#10;       SEQ.ID_SEQUENCIA">
        <Column Name="id_horario_contratual" DataType="System.Int32"/>
        <Column Name="id_tp_horario_contratual" DataType="System.Int32"/>
        <Column Name="sequencia" DataType="System.Int32"/>
        <Column Name="ds_dia" DataType="System.String"/>
        <Column Name="entrada_01" DataType="System.String"/>
        <Column Name="saida_01" DataType="System.String"/>
        <Column Name="entrada_02" DataType="System.String"/>
        <Column Name="saida_02" DataType="System.String"/>
        <Column Name="entrada_03" DataType="System.String"/>
        <Column Name="saida_03" DataType="System.String"/>
        <Column Name="id_tp_carga_horaria" DataType="System.Int32"/>
        <Column Name="ds_tp_carga_horaria" DataType="System.String"/>
        <Column Name="carga_horaria" DataType="System.String"/>
        <CommandParameter Name="ID_HORARIO_CONTRATUAL" DataType="9" Expression="[SqlFuncionario.id_horario_contratual]"/>
      </TableDataSource>
      <TableDataSource Name="Table2" Alias="SqlJustificativaObservacao" DataType="System.Int32" Enabled="true" SelectCommand="SELECT B1.DT_PONTO&#13;&#10;     , CAST(CASE UDF_WEEKDAY(CAST(B1.DT_PONTO AS DATE))&#13;&#10;                 WHEN 0 THEN 'dom'&#13;&#10;                 WHEN 1 THEN 'seg'&#13;&#10;                 WHEN 2 THEN 'ter'&#13;&#10;                 WHEN 3 THEN 'qua'&#13;&#10;                 WHEN 4 THEN 'qui'&#13;&#10;                 WHEN 5 THEN 'sex'&#13;&#10;                 WHEN 6 THEN 'sáb'&#13;&#10;             END AS VARCHAR(3)) AS DIA_SEMANA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN B1.OBS_TP_DIA_PONTO IS NOT NULL&#13;&#10;                 THEN B1.OBS_TP_DIA_PONTO || CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;                 ELSE '' END ||&#13;&#10;            CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL&#13;&#10;                 THEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) || CASE WHEN D1.OBS IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;                 ELSE '' END ||&#13;&#10;            CASE WHEN D1.OBS IS NOT NULL&#13;&#10;                 THEN D1.OBS&#13;&#10;                 ELSE '' END  AS TEXT) AS OBS&#13;&#10;     , B1.OBS_TP_DIA_PONTO&#13;&#10;     , B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP&#13;&#10;     , CAST(:ID_FUNCIONARIO AS INTEGER) AS ID_FUNCIONARIO                                                                                                                                 &#13;&#10;  FROM (&#13;&#10;        SELECT A.ID_PERIODO_APURACAO&#13;&#10;             , C.INTEGRADO_RH&#13;&#10;          FROM GPE_PERIODO_APURACAO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO&#13;&#10;       ) A1                                                                              &#13;&#10;       LEFT JOIN GPE_APURACAO           X1 ON X1.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                          AND X1.ID_FUNCIONARIO         = :ID_FUNCIONARIO&#13;&#10;                                          AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;       LEFT JOIN GPE_APURACAO           X2 ON X2.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                          AND X2.ID_FUNCIONARIO_RH      = :ID_FUNCIONARIO&#13;&#10;                                          AND 1                         = A1.INTEGRADO_RH&#13;&#10;       LEFT JOIN GPE_APURACAO           B1 ON B1.ID_APURACAO            = COALESCE(X1.ID_APURACAO, X2.ID_APURACAO)&#13;&#10;&#13;&#10;       LEFT JOIN GPE_APURACAO_USUARIO   Z1 ON Z1.ID_FUNCIONARIO         = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                          AND Z1.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                          AND Z1.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                          AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;       LEFT JOIN GPE_APURACAO_USUARIO   Z2 ON Z2.ID_FUNCIONARIO_RH      = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                          AND Z2.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                          AND Z2.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                          AND 1                         = A1.INTEGRADO_RH&#13;&#10;       LEFT JOIN GPE_APURACAO_USUARIO   D1 ON D1.ID_APURACAO_USUARIO    = COALESCE(Z1.ID_APURACAO_USUARIO, Z2.ID_APURACAO_USUARIO)&#13;&#10;                                          AND B1.ID_TP_DIA_PONTO       &lt;&gt; 9                  &#13;&#10;  &#13;&#10; WHERE CAST(NULLIF(TRIM(CASE WHEN B1.OBS_TP_DIA_PONTO IS NOT NULL&#13;&#10;                             THEN B1.OBS_TP_DIA_PONTO || CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;                             ELSE '' END ||&#13;&#10;                        CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL&#13;&#10;                             THEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) || CASE WHEN D1.OBS IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;                             ELSE '' END ||&#13;&#10;                        CASE WHEN D1.OBS IS NOT NULL&#13;&#10;                             THEN D1.OBS&#13;&#10;                             ELSE '' END), '') AS TEXT) IS NOT NULL&#13;&#10;ORDER BY&#13;&#10;      B1.DT_PONTO">
        <Column Name="dt_ponto" DataType="System.DateTime"/>
        <Column Name="dia_semana" DataType="System.String"/>
        <Column Name="obs" DataType="System.String"/>
        <Column Name="obs_tp_dia_ponto" DataType="System.String"/>
        <Column Name="obs_falta_atraso_saida_antecip" DataType="System.String"/>
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" DefaultValue="0"/>
      </TableDataSource>
      <TableDataSource Name="Table3" Alias="SqlAM" DataType="System.Int32" Enabled="true" SelectCommand="SELECT COUNT(1) AS QTD_AM&#13;&#10;  FROM (SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 4 -- AM&#13;&#10;         AND B.INTEGRADO_RH   = 0&#13;&#10;&#13;&#10;       UNION&#13;&#10;&#13;&#10;      SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 4 -- AM&#13;&#10;         AND B.INTEGRADO_RH      = 1&#13;&#10;) A1">
        <Column Name="qtd_am" DataType="System.Int64"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" DefaultValue="0"/>
      </TableDataSource>
      <TableDataSource Name="Table4" Alias="SqlHP" DataType="System.Int32" Enabled="true" SelectCommand="SELECT COUNT(1) AS QTD_HP&#13;&#10;  FROM (SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 5 -- HP&#13;&#10;         AND B.INTEGRADO_RH   = 0&#13;&#10;&#13;&#10;       UNION&#13;&#10;&#13;&#10;      SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 5 -- HP&#13;&#10;         AND B.INTEGRADO_RH      = 1&#13;&#10;) A1">
        <Column Name="qtd_hp" DataType="System.Int64"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" DefaultValue="0"/>
      </TableDataSource>
      <TableDataSource Name="Table5" Alias="SqlPonto" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A3.DT_PONTO&#13;&#10;     , A3.DIA_SEMANA&#13;&#10;     , A3.ID_APURACAO&#13;&#10;     , A3.ID_TP_DIA_PONTO&#13;&#10;     , A3.APURACAO_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.ID_TP_DIA_PONTO = 1 AND A3.ISENTO = 1 THEN A3.DS_TP_DIA_PONTO || ' (Isento)'&#13;&#10;                 WHEN A3.ID_TP_DIA_PONTO = 1 AND A3.ID_PONTO_REGISTRADO_ENTRADA_01 IS NULL THEN A3.DS_TP_DIA_PONTO || ' (Falta)'&#13;&#10;                 ELSE A3.DS_TP_DIA_PONTO&#13;&#10;            END&#13;&#10;       AS VARCHAR(120)) AS DS_TP_DIA_PONTO&#13;&#10;&#13;&#10;     , A3.HORARIO_IS_CARGA_HORARIA&#13;&#10;     , A3.ID_TP_CARGA_HORARIA&#13;&#10;     , A3.APURACAO_DIA_SEGUINTE&#13;&#10;     , A3.EXIBIR_INTERVALO_PRE_ASSINALADO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_01             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 2  THEN '*' || A3.ENTRADA_01   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 3  THEN '^' || A3.ENTRADA_01   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_01&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_01&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_01               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 2  THEN '*' || A3.SAIDA_01     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 3  THEN '^' || A3.SAIDA_01     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_01&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_01&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_02             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 2  THEN '*' || A3.ENTRADA_02   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 3  THEN '^' || A3.ENTRADA_02   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_02&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_02&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_02               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 2  THEN '*' || A3.SAIDA_02     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 3  THEN '^' || A3.SAIDA_02     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_02&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_01 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_01 &lt;&gt; 5 THEN A3.ENTRADA_01_DIA END AS VARCHAR(5)) AS ENTRADA_01_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_01   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_01   &lt;&gt; 5 THEN A3.SAIDA_01_DIA   END AS VARCHAR(5)) AS SAIDA_01_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_02 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_02 &lt;&gt; 5 THEN A3.ENTRADA_02_DIA END AS VARCHAR(5)) AS ENTRADA_02_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_02   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_02   &lt;&gt; 5 THEN A3.SAIDA_02_DIA   END AS VARCHAR(5)) AS SAIDA_02_DIA&#13;&#10;&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;     , A3.TEM_OUTROS_REGISTROS &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_NORMAL, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_NORMAL &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_NORMAL_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_NORMAL_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_NORMAL_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                      AS HR_NORMAL&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_FALTA, 0) = 0  THEN NULL&#13;&#10;                 WHEN A3.HR_FALTA &lt; 0               THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_FALTA_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_FALTA_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_FALTA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                       AS HR_FALTA          &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXCEDENTE, 0) = 0  THEN NULL&#13;&#10;                 WHEN A3.HR_EXCEDENTE &lt; 0               THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXCEDENTE_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_EXCEDENTE_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXCEDENTE_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                   AS HR_EXCEDENTE&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_FALTA_PAGAMENTO, 0) = 0    THEN NULL&#13;&#10;                 WHEN A3.HR_FALTA_PAGAMENTO &lt; 0                 THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_FALTA_PAGAMENTO_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_FALTA_PAGAMENTO_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_FALTA_PAGAMENTO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                             AS HR_FALTA_PAGAMENTO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA, 0) = 0  THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA &lt; 0               THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_EXTRA_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                       AS HR_EXTRA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_NAO_AUTORIZADA, 0) = 0   THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_NAO_AUTORIZADA &lt; 0                THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                        AS HR_EXTRA_NAO_AUTORIZADA          &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_ADICIONAL_NOTURNO, 0) = 0      THEN NULL&#13;&#10;                 ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                           AS HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_ACRES_DECRES_BANCO_SALDO, 0) = 0   THEN NULL&#13;&#10;                 WHEN A3.HR_ACRES_DECRES_BANCO_SALDO &lt; 0                THEN '-' &#13;&#10;                 WHEN A3.HR_ACRES_DECRES_BANCO_SALDO &gt; 0                THEN '+' ELSE '' END || &#13;&#10;                      LPAD(CAST(A3.HR_ACRES_DECRES_BANCO_SALDO_H AS VARCHAR(4)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_ACRES_DECRES_BANCO_SALDO_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_ACRES_DECRES_BANCO_SALDO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                    AS HR_ACRES_DECRES_BANCO_SALDO&#13;&#10;     &#13;&#10;     , CAST(TRIM(CASE WHEN COALESCE(A3.HR_SALDO_BANCO, 0) = 0 THEN ''&#13;&#10;                      WHEN A3.HR_SALDO_BANCO &lt; 0              THEN '-'&#13;&#10;                      WHEN A3.HR_SALDO_BANCO &gt; 0              THEN '+' ELSE '' END) ||&#13;&#10;                           LPAD(CAST(A3.HR_SALDO_BANCO_H AS VARCHAR(6)),&#13;&#10;                                CAST(GREATEST(LENGTH(CAST(A3.HR_SALDO_BANCO_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                           LPAD(CAST(A3.HR_SALDO_BANCO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                            AS HR_SALDO_BANCO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_PAGAMENTO_BANCO, 0) = 0 THEN NULL&#13;&#10;                 ELSE LPAD(CAST(A3.HR_PAGAMENTO_BANCO_H AS VARCHAR(5)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_PAGAMENTO_BANCO_H AS VARCHAR(5))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_PAGAMENTO_BANCO_M AS VARCHAR(2)), 2, '0') END ||&#13;&#10;            CASE WHEN COALESCE(A3.HR_PAGAMENTO_BANCO, 0) = 0 THEN ''&#13;&#10;                 WHEN A3.HR_PAGAMENTO_BANCO &lt; 0              THEN ' D'&#13;&#10;                 WHEN A3.HR_PAGAMENTO_BANCO &gt; 0              THEN ' P' END AS VARCHAR(10))                                                            AS HR_PAGAMENTO_BANCO&#13;&#10;&#13;&#10;     , A3.ID_APURACAO_USUARIO&#13;&#10;     , A3.COR&#13;&#10;     , A3.ISENTO&#13;&#10;     , A3.ID_FUNCIONARIO&#13;&#10;  FROM (&#13;&#10;        SELECT A2.DT_PONTO&#13;&#10;             , CAST(CASE EXTRACT(ISODOW from CAST(A2.DT_PONTO AS DATE))&#13;&#10;                         WHEN 1 THEN 'seg'&#13;&#10;                         WHEN 2 THEN 'ter'&#13;&#10;                         WHEN 3 THEN 'qua'&#13;&#10;                         WHEN 4 THEN 'qui'&#13;&#10;                         WHEN 5 THEN 'sex'&#13;&#10;                         WHEN 6 THEN 'sáb'&#13;&#10;                         ELSE 'dom'&#13;&#10;                     END AS VARCHAR(3)) AS DIA_SEMANA&#13;&#10;        &#13;&#10;             , A2.ID_APURACAO&#13;&#10;             , A2.ID_TP_DIA_PONTO&#13;&#10;             , A2.APURACAO_CARGA_HORARIA&#13;&#10;             , A2.DS_TP_DIA_PONTO&#13;&#10;             , A2.HORARIO_IS_CARGA_HORARIA&#13;&#10;             , A2.ID_TP_CARGA_HORARIA&#13;&#10;             , A2.APURACAO_DIA_SEGUINTE&#13;&#10;             , A2.EXIBIR_INTERVALO_PRE_ASSINALADO &#13;&#10;        &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_01 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_01)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_01&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_01   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_01)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_SAIDA_01)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_01&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_02 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_02)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_02&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_02   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_02)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_SAIDA_02)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_02&#13;&#10;&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_01 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         CAST(ABS(CAST(A2.DT_PONTO AS DATE) - MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER))) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS ENTRADA_01_DIA&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_01 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_01) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_01) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_01) AS INTEGER)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         CAST(ABS(CAST(A2.DT_PONTO AS DATE) - MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_01) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_01) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_01) AS INTEGER))) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS SAIDA_01_DIA&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_02 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS INTEGER)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         CAST(ABS(CAST(A2.DT_PONTO AS DATE) - MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS INTEGER))) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS ENTRADA_02_DIA&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_02 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_02) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_02) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_02) AS INTEGER)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         CAST(ABS(CAST(A2.DT_PONTO AS DATE) - MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_02) AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_02) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_02) AS INTEGER))) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS SAIDA_02_DIA&#13;&#10;&#13;&#10;             , A2.ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;             , A2.ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;             , A2.ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;             , A2.ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;&#13;&#10;             , CASE WHEN A2.ID_PONTO_REGISTRADO_ENTRADA_03 IS NULL THEN 0 ELSE 1 END AS TEM_OUTROS_REGISTROS&#13;&#10;&#13;&#10;             , A2.ID_TP_REGISTRO_ENTRADA_01&#13;&#10;             , A2.ID_TP_REGISTRO_SAIDA_01&#13;&#10;             , A2.ID_TP_REGISTRO_ENTRADA_02&#13;&#10;             , A2.ID_TP_REGISTRO_SAIDA_02&#13;&#10;&#13;&#10;             , A2.HR_NORMAL&#13;&#10;             , CAST(CASE WHEN A2.HR_NORMAL IS NOT NULL THEN DIV(ABS(A2.HR_NORMAL), 60) END AS INTEGER)                                      AS HR_NORMAL_H&#13;&#10;             , CAST(CASE WHEN A2.HR_NORMAL IS NOT NULL THEN MOD(ABS(A2.HR_NORMAL), 60) END AS INTEGER)                                      AS HR_NORMAL_M&#13;&#10;        &#13;&#10;             , A2.HR_FALTA&#13;&#10;             , CAST(CASE WHEN A2.HR_FALTA IS NOT NULL THEN DIV(ABS(A2.HR_FALTA), 60) END AS INTEGER)                                        AS HR_FALTA_H&#13;&#10;             , CAST(CASE WHEN A2.HR_FALTA IS NOT NULL THEN MOD(ABS(A2.HR_FALTA), 60) END AS INTEGER)                                        AS HR_FALTA_M&#13;&#10;        &#13;&#10;             , A2.HR_EXCEDENTE&#13;&#10;             , CAST(CASE WHEN A2.HR_EXCEDENTE IS NOT NULL THEN DIV(ABS(A2.HR_EXCEDENTE), 60) END AS INTEGER)                                AS HR_EXCEDENTE_H&#13;&#10;             , CAST(CASE WHEN A2.HR_EXCEDENTE IS NOT NULL THEN MOD(ABS(A2.HR_EXCEDENTE), 60) END AS INTEGER)                                AS HR_EXCEDENTE_M&#13;&#10;        &#13;&#10;             , A2.HR_FALTA_PAGAMENTO&#13;&#10;             , CAST(CASE WHEN A2.HR_FALTA_PAGAMENTO IS NOT NULL THEN DIV(ABS(A2.HR_FALTA_PAGAMENTO), 60) END AS INTEGER)                    AS HR_FALTA_PAGAMENTO_H&#13;&#10;             , CAST(CASE WHEN A2.HR_FALTA_PAGAMENTO IS NOT NULL THEN MOD(ABS(A2.HR_FALTA_PAGAMENTO), 60) END AS INTEGER)                    AS HR_FALTA_PAGAMENTO_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA&#13;&#10;             , CAST(CASE WHEN A2.HR_EXTRA IS NOT NULL THEN DIV(ABS(A2.HR_EXTRA), 60) END AS INTEGER)                                        AS HR_EXTRA_H&#13;&#10;             , CAST(CASE WHEN A2.HR_EXTRA IS NOT NULL THEN MOD(ABS(A2.HR_EXTRA), 60) END AS INTEGER)                                        AS HR_EXTRA_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_NAO_AUTORIZADA&#13;&#10;             , CAST(CASE WHEN A2.HR_EXTRA_NAO_AUTORIZADA IS NOT NULL THEN DIV(ABS(A2.HR_EXTRA_NAO_AUTORIZADA), 60) END AS INTEGER)          AS HR_EXTRA_NAO_AUTORIZADA_H&#13;&#10;             , CAST(CASE WHEN A2.HR_EXTRA_NAO_AUTORIZADA IS NOT NULL THEN MOD(ABS(A2.HR_EXTRA_NAO_AUTORIZADA), 60) END AS INTEGER)          AS HR_EXTRA_NAO_AUTORIZADA_M&#13;&#10;        &#13;&#10;             , A2.HR_ADICIONAL_NOTURNO&#13;&#10;             , CAST(CASE WHEN A2.HR_ADICIONAL_NOTURNO IS NOT NULL THEN DIV(ABS(A2.HR_ADICIONAL_NOTURNO), 60) END AS INTEGER)                AS HR_ADICIONAL_NOTURNO_H&#13;&#10;             , CAST(CASE WHEN A2.HR_ADICIONAL_NOTURNO IS NOT NULL THEN MOD(ABS(A2.HR_ADICIONAL_NOTURNO), 60) END AS INTEGER)                AS HR_ADICIONAL_NOTURNO_M&#13;&#10;&#13;&#10;             , NULLIF(A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH, 0) AS HR_ACRES_DECRES_BANCO_SALDO&#13;&#10;             , CAST(CASE WHEN A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH &lt;&gt; 0 THEN DIV(ABS(A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH), 60) END AS INTEGER) AS HR_ACRES_DECRES_BANCO_SALDO_H&#13;&#10;             , CAST(CASE WHEN A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH &lt;&gt|| ' day ') AS INTERVAL) AS DT_PONTO&#13;&#10;                             , C.INTEGRADO_RH&#13;&#10;                          FROM GPE_PERIODO_APURACAO A&#13;&#10;                               LEFT JOIN SIS_SEQUENCIA    B ON B.ID_SEQUENCIA &lt;= A.DT_FINAL - A.DT_INICIAL + 1&#13;&#10;                               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;                         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO                                      &#13;&#10;                       ) A1                                                                              &#13;&#10;                       LEFT JOIN GPE_APURACAO           X1 ON X1.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                          AND X1.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                          AND X1.ID_FUNCIONARIO         = :ID_FUNCIONARIO&#13;&#10;                                                          AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO           X2 ON X2.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                          AND X2.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                          AND X2.ID_FUNCIONARIO_RH      = :ID_FUNCIONARIO&#13;&#10;                                                          AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO           B1 ON B1.ID_APURACAO            = COALESCE(X1.ID_APURACAO, X2.ID_APURACAO)&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_TP_DIA_PONTO       C1 ON C1.ID_TP_DIA_PONTO        = B1.ID_TP_DIA_PONTO&#13;&#10;                       LEFT JOIN GPE_APONTAMENTO        I1 ON I1.ID_APONTAMENTO         = B1.ID_APONTAMENTO&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO   Z1 ON Z1.ID_FUNCIONARIO         = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                          AND Z1.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                          AND Z1.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                          AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO   Z2 ON Z2.ID_FUNCIONARIO_RH      = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                          AND Z2.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                          AND Z2.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                          AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO   D1 ON D1.ID_APURACAO_USUARIO    = COALESCE(Z1.ID_APURACAO_USUARIO, Z2.ID_APURACAO_USUARIO)&#13;&#10;                                                          AND B1.ID_TP_DIA_PONTO       &lt;&gt
        <Column Name="dt_ponto" DataType="System.DateTime"/>
        <Column Name="dia_semana" DataType="System.String"/>
        <Column Name="id_apuracao" DataType="System.Int32"/>
        <Column Name="id_tp_dia_ponto" DataType="System.Int32"/>
        <Column Name="apuracao_carga_horaria" DataType="System.Int16"/>
        <Column Name="ds_tp_dia_ponto" DataType="System.String"/>
        <Column Name="horario_is_carga_horaria" DataType="System.Int32"/>
        <Column Name="id_tp_carga_horaria" DataType="System.Int32"/>
        <Column Name="apuracao_dia_seguinte" DataType="System.Int16"/>
        <Column Name="exibir_intervalo_pre_assinalado" DataType="System.Int16"/>
        <Column Name="entrada_01" DataType="System.String"/>
        <Column Name="saida_01" DataType="System.String"/>
        <Column Name="entrada_02" DataType="System.String"/>
        <Column Name="saida_02" DataType="System.String"/>
        <Column Name="entrada_01_dia" DataType="System.String"/>
        <Column Name="saida_01_dia" DataType="System.String"/>
        <Column Name="entrada_02_dia" DataType="System.String"/>
        <Column Name="saida_02_dia" DataType="System.String"/>
        <Column Name="id_ponto_registrado_entrada_01" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_01" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_entrada_02" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_02" DataType="System.Int32"/>
        <Column Name="tem_outros_registros" DataType="System.Int32"/>
        <Column Name="hr_normal" DataType="System.String"/>
        <Column Name="hr_falta" DataType="System.String"/>
        <Column Name="hr_excedente" DataType="System.String"/>
        <Column Name="hr_falta_pagamento" DataType="System.String"/>
        <Column Name="hr_extra" DataType="System.String"/>
        <Column Name="hr_extra_nao_autorizada" DataType="System.String"/>
        <Column Name="hr_adicional_noturno" DataType="System.String"/>
        <Column Name="hr_acres_decres_banco_saldo" DataType="System.String"/>
        <Column Name="hr_saldo_banco" DataType="System.String"/>
        <Column Name="hr_pagamento_banco" DataType="System.String"/>
        <Column Name="id_apuracao_usuario" DataType="System.Int32"/>
        <Column Name="cor" DataType="System.Int32"/>
        <Column Name="isento" DataType="System.Int16"/>
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" DefaultValue="0"/>
      </TableDataSource>
      <TableDataSource Name="Table6" Alias="SqlOutrosRegistros" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A1.DT_HR_REGISTRO&#13;&#10;     , CAST(CASE WHEN A1.ID_TP_REGISTRO = 2  THEN '*' || A1.HR_REGISTRO   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 3  THEN '^' || A1.HR_REGISTRO   -- PRE ASSINALADO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A1.HR_REGISTRO&#13;&#10;        END AS VARCHAR(10)) AS HR_REGISTRO&#13;&#10;&#13;&#10;      , CAST(CASE WHEN A1.DT_HR_REGISTRO IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A1.DT_HR_REGISTRO) AS INTEGER), CAST(EXTRACT(MONTH FROM A1.DT_HR_REGISTRO) AS INTEGER), CAST(EXTRACT(DAY FROM A1.DT_HR_REGISTRO) AS INTEGER)) &lt;&gt; :DT_PONTO THEN&#13;&#10;                  CAST(CASE WHEN :APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                  CAST(ABS(MAKE_DATE(CAST(EXTRACT(YEAR FROM A1.DT_HR_REGISTRO) AS INTEGER), CAST(EXTRACT(MONTH FROM A1.DT_HR_REGISTRO) AS INTEGER), CAST(EXTRACT(DAY FROM A1.DT_HR_REGISTRO) AS INTEGER)) - :DT_PONTO) AS VARCHAR(10))&#13;&#10;             END AS VARCHAR(10)) AS HR_REGISTRO_DIA&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT A.DT_HR_REGISTRO&#13;&#10;             , CAST(LPAD(CAST(EXTRACT(HOUR FROM A.DT_HR_REGISTRO)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                    LPAD(CAST(EXTRACT(MINUTE FROM A.DT_HR_REGISTRO) AS VARCHAR(2)), 2, '0') AS VARCHAR(5)) AS HR_REGISTRO&#13;&#10;             , A.ID_TP_REGISTRO&#13;&#10;          FROM GPE_PONTO_REGISTRADO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;           AND A.DT_REFERENCIA  = :DT_PONTO&#13;&#10;           AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;           AND B.INTEGRADO_RH   = 0&#13;&#10;         UNION&#13;&#10;        SELECT A.DT_HR_REGISTRO&#13;&#10;             , CAST(LPAD(CAST(EXTRACT(HOUR FROM A.DT_HR_REGISTRO)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                    LPAD(CAST(EXTRACT(MINUTE FROM A.DT_HR_REGISTRO) AS VARCHAR(2)), 2, '0') AS VARCHAR(5)) AS HR_REGISTRO&#13;&#10;             , A.ID_TP_REGISTRO&#13;&#10;          FROM GPE_PONTO_REGISTRADO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;           AND A.DT_REFERENCIA     = :DT_PONTO&#13;&#10;           AND A.ID_TP_MARCACAO   &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;           AND B.INTEGRADO_RH      = 1&#13;&#10;         ORDER BY&#13;&#10;               1&#13;&#10;       ) A1&#13;&#10; UNION ALL&#13;&#10;/* SEMPRE RETORNAR MULTIPLOS DE 4 */&#13;&#10;SELECT MAKE_DATE(2100, 12, 31) AS DT_HR_REGISTRO&#13;&#10;     , CAST('' AS VARCHAR(10) )  AS HR_REGISTRO&#13;&#10;     , CAST(NULL AS VARCHAR(2) ) AS HR_REGISTRO_DIA&#13;&#10;  FROM SIS_SEQUENCIA S&#13;&#10; WHERE S.ID_SEQUENCIA &lt;= 4 - ( SELECT CASE WHEN MOD(SUM(QT.QTDE), 4) = 0 THEN 4 ELSE MOD(SUM(QT.QTDE), 4) END&#13;&#10;                                 FROM (&#13;&#10;                                        SELECT COUNT(1) AS QTDE&#13;&#10;                                          FROM GPE_PONTO_REGISTRADO A&#13;&#10;                                               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;                                         WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;                                           AND A.DT_REFERENCIA  = :DT_PONTO&#13;&#10;                                           AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;                                           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;                                            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;                                           AND B.INTEGRADO_RH   = 0&#13;&#10;                                         UNION&#13;&#10;                                        SELECT COUNT(1) AS QTDE&#13;&#10;                                          FROM GPE_PONTO_REGISTRADO A&#13;&#10;                                               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;                                         WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;                                           AND A.DT_REFERENCIA     = :DT_PONTO&#13;&#10;                                           AND A.ID_TP_MARCACAO   &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;                                           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;                                            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;                                           AND B.INTEGRADO_RH      = 1&#13;&#10;                                      ) QT&#13;&#10;                             )&#13;&#10; ORDER BY 1">
        <Column Name="dt_hr_registro" DataType="System.DateTime"/>
        <Column Name="hr_registro" DataType="System.String"/>
        <Column Name="hr_registro_dia" DataType="System.String"/>
        <CommandParameter Name="DT_PONTO" DataType="7" Expression="[SqlPonto.dt_ponto]"/>
        <CommandParameter Name="APURACAO_DIA_SEGUINTE" DataType="9" Expression="[SqlPonto.apuracao_dia_seguinte]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" Expression="[SqlPonto.id_funcionario]"/>
        <CommandParameter Name="EXIBIR_INTERVALO_PRE_ASSINALADO" DataType="9" Expression="[SqlPonto.exibir_intervalo_pre_assinalado]"/>
      </TableDataSource>
      <TableDataSource Name="Table7" Alias="SqlSomaPonto" DataType="System.Int32" Enabled="true" SelectCommand="SELECT CAST(LPAD(CAST(A3.HR_NORMAL_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_NORMAL_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_NORMAL_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                      AS HR_NORMAL&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_FALTA_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_FALTA_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_FALTA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                       AS HR_FALTA&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXCEDENTE_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_EXCEDENTE_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXCEDENTE_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                   AS HR_EXCEDENTE&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_FALTA_PAGAMENTO_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_FALTA_PAGAMENTO_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_FALTA_PAGAMENTO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                             AS HR_FALTA_PAGAMENTO&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_EXTRA_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                       AS HR_EXTRA&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                        AS HR_EXTRA_NAO_AUTORIZADA&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(6)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                           AS HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.HR_ACRES_DECRES_BANCO_SALDO &lt; 0     THEN '-'&#13;&#10;                 WHEN A3.HR_ACRES_DECRES_BANCO_SALDO &gt; 0     THEN '+' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_ACRES_DECRES_BANCO_SALDO_H AS VARCHAR(6)),&#13;&#10;                           CAST(GREATEST(LENGTH(CAST(A3.HR_ACRES_DECRES_BANCO_SALDO_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_ACRES_DECRES_BANCO_SALDO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                          AS HR_ACRES_DECRES_BANCO_SALDO&#13;&#10;     &#13;&#10;     , CAST(LPAD(CAST(A3.HR_PAGAMENTO_BANCO_H AS VARCHAR(5)),&#13;&#10;                 CAST(GREATEST(LENGTH(CAST(A3.HR_PAGAMENTO_BANCO_H AS VARCHAR(5))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_PAGAMENTO_BANCO_M AS VARCHAR(2)), 2, '0') ||&#13;&#10;            CASE WHEN A3.HR_PAGAMENTO_BANCO &lt; 0     THEN ' D'&#13;&#10;                 WHEN A3.HR_PAGAMENTO_BANCO &gt; 0     THEN ' P' ELSE '' END AS VARCHAR(10))                                         AS HR_PAGAMENTO_BANCO&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT A2.HR_NORMAL&#13;&#10;             , CAST(DIV(ABS(A2.HR_NORMAL), 60) AS INTEGER)                                  AS HR_NORMAL_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_NORMAL), 60) AS INTEGER)                                  AS HR_NORMAL_M&#13;&#10;        &#13;&#10;             , A2.HR_FALTA&#13;&#10;             , CAST(DIV(ABS(A2.HR_FALTA), 60) AS INTEGER)                                   AS HR_FALTA_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_FALTA), 60) AS INTEGER)                                   AS HR_FALTA_M&#13;&#10;        &#13;&#10;             , A2.HR_EXCEDENTE&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXCEDENTE), 60) AS INTEGER)                               AS HR_EXCEDENTE_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXCEDENTE), 60) AS INTEGER)                               AS HR_EXCEDENTE_M&#13;&#10;        &#13;&#10;             , A2.HR_FALTA_PAGAMENTO&#13;&#10;             , CAST(DIV(ABS(A2.HR_FALTA_PAGAMENTO), 60) AS INTEGER)                         AS HR_FALTA_PAGAMENTO_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_FALTA_PAGAMENTO), 60) AS INTEGER)                         AS HR_FALTA_PAGAMENTO_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA), 60) AS INTEGER)                                   AS HR_EXTRA_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA), 60) AS INTEGER)                                   AS HR_EXTRA_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_NAO_AUTORIZADA&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_NAO_AUTORIZADA), 60) AS INTEGER)                    AS HR_EXTRA_NAO_AUTORIZADA_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_NAO_AUTORIZADA), 60) AS INTEGER)                    AS HR_EXTRA_NAO_AUTORIZADA_M&#13;&#10;        &#13;&#10;             , A2.HR_ADICIONAL_NOTURNO&#13;&#10;             , CAST(DIV(ABS(A2.HR_ADICIONAL_NOTURNO), 60) AS INTEGER)                       AS HR_ADICIONAL_NOTURNO_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_ADICIONAL_NOTURNO), 60) AS INTEGER)                       AS HR_ADICIONAL_NOTURNO_M&#13;&#10;&#13;&#10;             , A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH                                   AS HR_ACRES_DECRES_BANCO_SALDO&#13;&#10;             , CAST(DIV(ABS(A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH), 60) AS INTEGER)    AS HR_ACRES_DECRES_BANCO_SALDO_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_ACRESCIMOS_BH - A2.HR_DECRESCIMOS_BH), 60) AS INTEGER)    AS HR_ACRES_DECRES_BANCO_SALDO_M&#13;&#10;        &#13;&#10;             , A2.HR_PAGAMENTO_BANCO&#13;&#10;             , CAST(DIV(ABS(A2.HR_PAGAMENTO_BANCO), 60) AS INTEGER)                         AS HR_PAGAMENTO_BANCO_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_PAGAMENTO_BANCO), 60) AS INTEGER)                         AS HR_PAGAMENTO_BANCO_M&#13;&#10;          FROM (&#13;&#10;                SELECT SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_NORMAL,  B1.HR_NORMAL, 0)&#13;&#10;                                    + COALESCE(D1.HR_NOTURNA, B1.HR_NOTURNA, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_NORMAL&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_ATRASO, B1.HR_ATRASO, 0)&#13;&#10;                                    + COALESCE(D1.HR_SAIDA_ANTECIPADA, B1.HR_SAIDA_ANTECIPADA, 0)&#13;&#10;                                    + COALESCE(D1.HR_FALTA, B1.HR_FALTA, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_FALTA&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_EXCEDENTE, B1.HR_EXCEDENTE, 0)&#13;&#10;                                    + COALESCE(D1.HR_EXCEDENTE_NOTURNA, B1.HR_EXCEDENTE_NOTURNA, 0)&#13;&#10;                                    + COALESCE(D1.HR_NORMAL_COMO_EXC_DOM, B1.HR_NORMAL_COMO_EXC_DOM, 0)&#13;&#10;                                    + COALESCE(D1.HR_NORMAL_COMO_EXC_SAB, B1.HR_NORMAL_COMO_EXC_SAB, 0)&#13;&#10;                                    + COALESCE(D1.HR_NORMAL_COMO_EXC_FER, B1.HR_NORMAL_COMO_EXC_FER, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_EXCEDENTE&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_ATRASO_PAGAMENTO, B1.HR_ATRASO_PAGAMENTO, 0)&#13;&#10;                                    + COALESCE(D1.HR_SAIDA_ANTECIPADA_PAGAMENTO, B1.HR_SAIDA_ANTECIPADA_PAGAMENTO, 0)&#13;&#10;                                    + COALESCE(D1.HR_FALTA_PAGAMENTO, B1.HR_FALTA_PAGAMENTO, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_FALTA_PAGAMENTO&#13;&#10;                     &#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_1, B1.HR_EXTRA_1 - COALESCE(B1.HR_EXTRA_1_BANCO, 0), 0)&#13;&#10;                                    + COALESCE(D1.HR_EXTRA_2, B1.HR_EXTRA_2 - COALESCE(B1.HR_EXTRA_2_BANCO, 0), 0)&#13;&#10;                                    + COALESCE(D1.HR_EXTRA_3, B1.HR_EXTRA_3 - COALESCE(B1.HR_EXTRA_3_BANCO, 0), 0)&#13;&#10;                                    + COALESCE(D1.HR_EXTRA_4, B1.HR_EXTRA_4 - COALESCE(B1.HR_EXTRA_4_BANCO, 0), 0)&#13;&#10;                                    + COALESCE(D1.HR_EXTRA_5, B1.HR_EXTRA_5 - COALESCE(B1.HR_EXTRA_5_BANCO, 0), 0)&#13;&#10;                                    + COALESCE(D1.HR_EXTRA_6, B1.HR_EXTRA_6 - COALESCE(B1.HR_EXTRA_6_BANCO, 0), 0)&#13;&#10;                                  ELSE 0 END )                                                                  AS HR_EXTRA&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_NAO_AUTORIZADA, B1.HR_EXTRA_NAO_AUTORIZADA, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_EXTRA_NAO_AUTORIZADA&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(B1.HR_ADICIONAL_NOTURNO, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(B1.HR_ADICIONAL_BANCO, 0)&#13;&#10;                                    + CASE WHEN E1.BANCO_HORAS = 1 AND E1.INCLUIR_ADICIONAL_NOTURNO_BH = 1 THEN COALESCE(B1.HR_ADICIONAL_NOTURNO, 0) ELSE 0 END&#13;&#10;                                    + COALESCE(D1.HR_EXCEDENTE, B1.HR_EXCEDENTE, 0)&#13;&#10;                                    + COALESCE(D1.HR_EXCEDENTE_NOTURNA, B1.HR_EXCEDENTE_NOTURNA, 0)&#13;&#10;                                    + COALESCE(D1.HR_NORMAL_COMO_EXC_DOM, B1.HR_NORMAL_COMO_EXC_DOM, 0)&#13;&#10;                                    + COALESCE(D1.HR_NORMAL_COMO_EXC_SAB, B1.HR_NORMAL_COMO_EXC_SAB, 0)&#13;&#10;                                    + COALESCE(D1.HR_NORMAL_COMO_EXC_FER, B1.HR_NORMAL_COMO_EXC_FER, 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_1, B1.HR_EXTRA_1 - COALESCE(B1.HR_EXTRA_1_BANCO, 0), 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_2, B1.HR_EXTRA_2 - COALESCE(B1.HR_EXTRA_2_BANCO, 0), 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_3, B1.HR_EXTRA_3 - COALESCE(B1.HR_EXTRA_3_BANCO, 0), 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_4, B1.HR_EXTRA_4 - COALESCE(B1.HR_EXTRA_4_BANCO, 0), 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_5, B1.HR_EXTRA_5 - COALESCE(B1.HR_EXTRA_5_BANCO, 0), 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_6, B1.HR_EXTRA_6 - COALESCE(B1.HR_EXTRA_6_BANCO, 0), 0)&#13;&#10;                                    - COALESCE(D1.HR_EXTRA_NAO_AUTORIZADA, B1.HR_EXTRA_NAO_AUTORIZADA, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_ACRESCIMOS_BH&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_ATRASO, B1.HR_ATRASO, 0)&#13;&#10;                                    + COALESCE(D1.HR_SAIDA_ANTECIPADA, B1.HR_SAIDA_ANTECIPADA, 0)&#13;&#10;                                    + COALESCE(D1.HR_FALTA, B1.HR_FALTA, 0)&#13;&#10;                                    - (&#13;&#10;                                           COALESCE(D1.HR_ATRASO_ABONADO, B1.HR_ATRASO_ABONADO, 0)&#13;&#10;                                         + COALESCE(D1.HR_SAIDA_ANTECIPADA_ABONADA, B1.HR_SAIDA_ANTECIPADA_ABONADA, 0)&#13;&#10;                                         + COALESCE(D1.HR_FALTA_ABONADA, B1.HR_FALTA_ABONADA, 0)                              )&#13;&#10;                                    - (&#13;&#10;                                           COALESCE(D1.HR_ATRASO_PAGAMENTO, B1.HR_ATRASO_PAGAMENTO, 0)&#13;&#10;                                         + COALESCE(D1.HR_SAIDA_ANTECIPADA_PAGAMENTO, B1.HR_SAIDA_ANTECIPADA_PAGAMENTO, 0)&#13;&#10;                                         + COALESCE(D1.HR_FALTA_PAGAMENTO, B1.HR_FALTA_PAGAMENTO, 0)                         )&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_DECRESCIMOS_BH&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN (E1.ID_TP_APURACAO &lt;&gt; 4) OR (E1.ID_TP_APURACAO = 4 AND B1.APURACAO_CARGA_HORARIA = 1)&#13;&#10;                                 THEN COALESCE(D1.HR_PAGAMENTO_BANCO, 0)&#13;&#10;                                 ELSE 0 END )                                                                   AS HR_PAGAMENTO_BANCO&#13;&#10;        &#13;&#10;                  FROM (&#13;&#10;                        SELECT A.ID_PERIODO_APURACAO&#13;&#10;                             , A.DT_INICIAL&#13;&#10;                             , A.DT_FINAL&#13;&#10;                             , A.DT_INICIAL + CAST(((B.ID_SEQUENCIA -1) || 'day') AS INTERVAL) AS DT_PONTO                             &#13;&#10;                             , C.INTEGRADO_RH&#13;&#10;                          FROM GPE_PERIODO_APURACAO A&#13;&#10;                               LEFT JOIN SIS_SEQUENCIA    B ON B.ID_SEQUENCIA &lt;= A.DT_FINAL - A.DT_INICIAL + 1&#13;&#10;                               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;                         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO                                      &#13;&#10;                       ) A1                                                                              &#13;&#10;                       LEFT JOIN GPE_APURACAO                   X1 ON X1.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                                  AND X1.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                                  AND X1.ID_FUNCIONARIO         = :ID_FUNCIONARIO&#13;&#10;                                                                  AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO                   X2 ON X2.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                                  AND X2.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                                  AND X2.ID_FUNCIONARIO_RH      = :ID_FUNCIONARIO&#13;&#10;                                                                  AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO                   B1 ON B1.ID_APURACAO            = COALESCE(X1.ID_APURACAO, X2.ID_APURACAO)&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO           Z1 ON Z1.ID_FUNCIONARIO         = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                                  AND Z1.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                                  AND Z1.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                                  AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO           Z2 ON Z2.ID_FUNCIONARIO_RH      = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                                  AND Z2.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                                  AND Z2.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                                  AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO           D1 ON D1.ID_APURACAO_USUARIO    = COALESCE(Z1.ID_APURACAO_USUARIO, Z2.ID_APURACAO_USUARIO)&#13;&#10;                                                                  AND B1.ID_TP_DIA_PONTO       &lt;&gt; 9                  &#13;&#10;                  &#13;&#10;                       LEFT JOIN GPE_APONTAMENTO                E1 ON E1.ID_APONTAMENTO         = B1.ID_APONTAMENTO&#13;&#10;                       LEFT JOIN GPE_HORARIO                    H1 ON H1.ID_HORARIO             = B1.ID_HORARIO&#13;&#10;&#13;&#10;               ) A2&#13;&#10;&#13;&#10;       ) A3&#13;&#10;&#13;&#10;   LIMIT 1">
        <Column Name="hr_normal" DataType="System.String"/>
        <Column Name="hr_falta" DataType="System.String"/>
        <Column Name="hr_excedente" DataType="System.String"/>
        <Column Name="hr_falta_pagamento" DataType="System.String"/>
        <Column Name="hr_extra" DataType="System.String"/>
        <Column Name="hr_extra_nao_autorizada" DataType="System.String"/>
        <Column Name="hr_adicional_noturno" DataType="System.String"/>
        <Column Name="hr_acres_decres_banco_saldo" DataType="System.String"/>
        <Column Name="hr_pagamento_banco" DataType="System.String"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" DefaultValue="0"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Frequência e Apuração do Ponto&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
    <Parameter Name="formato" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="codigoRelatorio" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="competencia" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="idPeriodoApuracao" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="colorirTipoDia" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimeJustificativa" DataType="System.Int64" Expression="0"/>
    <Parameter Name="lineBndPonto" DataType="System.Int64" Expression="0"/>
  </Dictionary>
  <inherited Name="MainPage" RawPaperSize="9">
    <inherited Name="BndCabecalho" Top="0">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="BndFiltro" Top="98.67">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <GroupHeaderBand Name="grpFuncionario" ZOrder="0" Top="121.73" Width="718.2" Height="30.24" Condition="[SqlFuncionario.id_funcionario]">
      <TextObject Name="Text1" Width="69.93" Height="15.12" Border.Lines="Bottom" Fill.Color="41, 82, 118" Text="Entidade:" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White"/>
      <TextObject Name="Text2" Top="15.12" Width="69.93" Height="15.12" Border.Lines="Top" Fill.Color="42, 82, 118" Text="Funcionário" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White"/>
      <TextObject Name="SqlFuncionarioDS_ENTIDADE" Left="69.93" Width="468.34" Height="15.12" Border.Lines="Bottom" Fill.Color="42, 82, 118" Text="&lt;b&gt;[SqlFuncionario.ds_entidade]&lt;/b&gt;     CNPJ: [SqlFuncionario.doc_entidade]" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White" TextRenderType="HtmlTags"/>
      <TextObject Name="Text4" Left="69.93" Top="15.12" Width="648.27" Height="15.12" Border.Lines="Top" Fill.Color="42, 82, 118" Text="[SqlFuncionario.matricula] | &lt;b&gt;[SqlFuncionario.nome]&lt;/b&gt;" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White" TextRenderType="HtmlTags"/>
      <TextObject Name="Text5" Left="538.27" Width="179.93" Height="15.12" Border.Lines="Bottom" Fill.Color="42, 82, 118" Text="Periodo: &lt;b&gt;[Format(&quot;{0:dd/MM/yyyy}&quot;,[SqlFuncionario.dt_inicial])]&lt;/b&gt; a &lt;b&gt; [Format(&quot;{0:dd/MM/yyyy}&quot;,[SqlFuncionario.dt_final])] &lt;/b&gt;" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White" TextRenderType="HtmlTags">
        <Formats>
          <CustomFormat/>
          <CustomFormat Format="dd/mm"/>
        </Formats>
      </TextObject>
      <GroupHeaderBand Name="grpPonto" Top="156.14" Width="718.2" Height="116.05" Condition="[SqlFuncionario.id_funcionario]">
        <TextObject Name="Text6" Width="69.93" Height="15.88" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="CPF:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text7" Top="17.01" Width="69.93" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Cargo:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text8" Top="32.89" Width="69.93" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Loc. Trabalho:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text9" Top="49.14" Width="69.93" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Área Apuração:" VertAlign="Center" WordWrap="false" Font="Tahoma, 7pt"/>
        <TextObject Name="Text10" Top="65.02" Width="69.93" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Horário:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text11" Left="69.93" Top="1.13" Width="100.17" Height="15.88" Border.Lines="Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.cpf]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text12" Left="69.93" Top="17.01" Width="185.98" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.cargo]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text13" Left="69.93" Top="49.14" Width="410.13" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.ds_area_apuracao]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text14" Left="69.93" Top="65.02" Width="410.13" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.cd_horario_contratual] - [SqlFuncionario.ds_horario_contratual]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text15" Left="69.93" Top="32.89" Width="410.13" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.ds_local_trabalho]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text16" Left="210.17" Top="1.13" Width="269.89" Height="15.88" Border.Lines="Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.pis]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text17" Left="170.1" Top="1.13" Width="40.07" Height="15.88" Border.Lines="Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Nº PIS:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text18" Left="255.91" Top="17.01" Width="40.07" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Função:" HorzAlign="Right" VertAlign="Center" WordWrap="false" Font="Tahoma, 7pt"/>
        <TextObject Name="Text19" Left="295.97" Top="17.01" Width="184.09" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.funcao]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text20" Top="86.18" Width="55.19" Height="29.86" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Dia" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text21" Left="55.19" Top="86.18" Width="72.95" Height="29.86" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Tipo" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text22" Left="128.14" Top="86.18" Width="143.64" Height="20.03" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Pontos Registrados" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text23" Left="271.78" Top="86.18" Width="131.92" Height="20.03" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Apuração das Horas" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text24" Left="403.7" Top="86.18" Width="46.12" Height="20.03" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Horas Não Trabalhada" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text25" Left="449.82" Top="86.18" Width="88.07" Height="20.03" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Horas Extras" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text26" Left="537.89" Top="86.18" Width="43.85" Height="29.86" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Adicional Noturno" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text27" Left="581.74" Top="86.18" Width="136.46" Height="20.03" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Saldo/Banco de Horas" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text28" Left="128.14" Top="105.84" Width="35.91" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Ent." HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text29" Left="199.96" Top="105.84" Width="35.91" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Ent." HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text30" Left="164.05" Top="105.84" Width="35.91" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Sai." HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text31" Left="235.87" Top="105.84" Width="35.91" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Sai." HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text32" Left="271.78" Top="105.84" Width="43.85" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Normais" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text33" Left="359.86" Top="105.84" Width="43.85" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Excedentes" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text34" Left="315.63" Top="105.84" Width="43.85" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Faltas" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text35" Left="403.7" Top="105.84" Width="46.12" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Descontadas" HorzAlign="Center" VertAlign="Center" WordWrap="false" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text36" Left="493.67" Top="105.84" Width="43.85" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Não Aut." HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text37" Left="449.82" Top="105.84" Width="43.85" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Autorizadas" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text38" Left="581.74" Top="105.84" Width="45.36" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="+/-" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text39" Left="672.46" Top="105.84" Width="45.74" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Baixa" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text40" Left="627.1" Top="105.84" Width="45.36" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Saldo" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <SubreportObject Name="repHorario" Left="488" Top="0.11" Width="230.2" Height="9.83" ReportPage="Page2" PrintOnParent="true"/>
        <DataBand Name="mdtFuncionario" Top="276.36" Width="718.2" BeforePrintEvent="mdtFuncionario_BeforePrint" DataSource="Table">
          <DataBand Name="bndPonto" Top="280.52" Width="718.2" Height="12.85" BeforePrintEvent="bndPonto_BeforePrint" DataSource="Table5" PrintIfDetailEmpty="true" PrintIfDatasourceEmpty="true">
            <TextObject Name="Text124" Width="718.2" Height="12.85" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#] % 2 != 0" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="SqlPontoDT_PONTO" Width="55.19" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text=" &lt;b&gt;[Format(&quot;{0:dd/MM}&quot;,[SqlPonto.dt_ponto])]&lt;/b&gt; - [SqlPonto.dia_semana]" VertAlign="Center" Font="Tahoma, 5pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#] % 2 != 0 &amp;&amp; [colorirTipoDia] != 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="SqlPontoDS_TP_DIA_PONTO" Left="55.19" Width="72.95" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.ds_tp_dia_ponto]" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text44" Left="164.05" Width="35.91" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.saida_01]&lt;sup&gt;[SqlPonto.saida_01_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text45" Left="199.96" Width="35.91" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.entrada_02]&lt;sup&gt;[SqlPonto.entrada_02_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text46" Left="235.87" Width="35.91" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.saida_02]&lt;sup&gt;[SqlPonto.saida_02_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text47" Left="271.78" Width="43.85" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_normal]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text48" Left="315.63" Width="43.85" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_falta]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text49" Left="403.7" Width="46.12" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_falta_pagamento]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text50" Left="359.86" Width="43.85" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_excedente]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text51" Left="537.89" Width="43.85" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_adicional_noturno]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text52" Left="581.74" Width="45.36" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_acres_decres_banco_saldo]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text53" Left="627.1" Width="45.36" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_saldo_banco]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text54" Left="493.67" Width="43.85" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_extra_nao_autorizada]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text55" Left="449.82" Width="43.85" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_extra]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="Text56" Left="672.46" Width="45.74" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.hr_pagamento_banco]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <TextObject Name="SqlPontoENTRADA_01" Left="128.14" Width="35.91" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Text="[SqlPonto.entrada_01]&lt;sup&gt;[SqlPonto.entrada_01_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            <ChildBand Name="bndOutrosRegistros" Top="297.54" Width="718.2" Height="12.85" BeforePrintEvent="bndOutrosRegistros_BeforePrint" PrintIfDatabandEmpty="true">
              <TextObject Name="memOutrosRegistros1" Left="271.78" Width="43.85" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros2" Left="315.63" Width="43.85" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros4" Left="403.7" Width="46.12" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros3" Left="359.86" Width="43.85" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros7" Left="537.89" Width="43.85" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros8" Left="581.74" Width="45.36" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros9" Left="627.1" Width="45.36" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros6" Left="493.67" Width="43.85" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros5" Left="449.82" Width="43.85" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memOutrosRegistros10" Left="672.46" Width="45.74" Height="12.85" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memDiaOutrosRegistros" Width="55.19" Height="12.85" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <TextObject Name="memTipoDiaOutrosRegistros" Left="55.19" Width="72.95" Height="12.85" VertAlign="Center" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
              <SubreportObject Name="repOutrosRegistros" Left="128.14" Width="143.64" Height="12.85" ReportPage="Page1" PrintOnParent="true"/>
              <ChildBand Name="bndApuracaoCargaHoraria" Top="314.56" Width="718.2" Height="13.99" BeforePrintEvent="bndApuracaoCargaHoraria_BeforePrint">
                <TextObject Name="Text57" Width="128.14" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Apuração da Carga Horária" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text59" Left="128.14" Width="143.64" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text60" Left="271.78" Width="43.85" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_normal]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text61" Left="315.63" Width="43.85" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_falta]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text62" Left="359.86" Width="43.85" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_excedente]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text63" Left="403.7" Width="46.12" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_falta_pagamento]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text64" Left="449.82" Width="43.85" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_extra]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text65" Left="672.46" Width="45.74" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_pagamento_banco]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text66" Left="627.1" Width="45.36" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_saldo_banco]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text67" Left="581.74" Width="45.36" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_acres_decres_banco_saldo]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text68" Left="493.67" Width="43.85" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_extra_nao_autorizada]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
                <TextObject Name="Text69" Left="537.89" Width="43.85" Height="12.85" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlPonto.hr_adicional_noturno]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
              </ChildBand>
            </ChildBand>
          </DataBand>
          <DataBand Name="bndSomaPonto" Top="332.71" Width="718.2" Height="27.97" DataSource="Table7">
            <TextObject Name="Text70" Width="128.14" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Totais&#13;&#10;" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text71" Left="128.14" Width="143.64" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text72" Left="271.78" Width="43.85" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_normal]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text73" Left="315.63" Width="43.85" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_falta]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text74" Left="359.86" Width="43.85" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_excedente]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text75" Left="403.7" Width="46.12" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_falta_pagamento]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text76" Left="449.82" Width="43.85" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_extra]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text77" Left="627.1" Width="43.85" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text78" Left="493.67" Width="43.85" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_extra_nao_autorizada]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text79" Left="581.74" Width="45.36" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_acres_decres_banco_saldo]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text80" Left="537.89" Width="45.36" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_adicional_noturno]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text81" Left="672.46" Width="45.74" Height="15.12" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlSomaPonto.hr_pagamento_banco]" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="memLegenda1" Top="15.88" Width="100.17" Height="9.83" Border.Color="199, 199, 199" Text="[&quot;[*]&quot;] - Lançado manualmente" Font="Tahoma, 5pt"/>
            <TextObject Name="menLegenda2" Left="100.17" Top="15.88" Width="80.14" Height="9.83" Border.Color="199, 199, 199" Text="[&quot;[^]&quot;] - Pré Assinalado          " Font="Tahoma, 5pt" TextRenderType="HtmlTags"/>
            <TextObject Name="memLegenda3" Left="179.93" Top="15.88" Width="120.2" Height="9.83" Border.Color="199, 199, 199" Text="[&quot;[A.M.]&quot;] - Ausência de Marcação [IIf([SqlAM.QTD_AM] == 0 , &quot;&quot;, IIf([SqlAM.QTD_AM] == 1 , &quot;(1 registro)&quot;, &quot;(&quot; + ToString([SqlAM.QTD_AM]) + &quot; registros)&quot;))]          &#13;&#10;" Font="Tahoma, 5pt" TextRenderType="HtmlTags"/>
            <TextObject Name="memLegenda4" Left="300.13" Top="15.88" Width="120.2" Height="9.83" Border.Color="199, 199, 199" Text="[&quot;[H.P.]&quot;] - Horário Padrão [IIf([SqlHP.QTD_HP] == 0 , &quot;&quot;, IIf([SqlHP.QTD_HP] == 1 , &quot;(1 registro)&quot;, &quot;(&quot; + ToString([SqlHP.QTD_HP]) + &quot; registros)&quot;))]          &#13;&#10;" Font="Tahoma, 5pt" TextRenderType="HtmlTags"/>
          </DataBand>
          <GroupHeaderBand Name="grpJustificativaObservacao" Top="364.85" Width="718.2" Height="12.1" BeforePrintEvent="grpJustificativaObservacao_BeforePrint">
            <TextObject Name="Text86" Width="55.19" Height="12.1" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Dia" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text87" Left="55.19" Width="663.01" Height="12.1" Border.Lines="All" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Justificativas e Observações" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <DataBand Name="bndJustificativaObservacao" Top="381.12" Width="718.2" Height="12.1" BeforePrintEvent="bndJustificativaObservacao_BeforePrint" DataSource="Table2">
              <TextObject Name="Text88" Width="55.19" Height="12.1" Border.Color="199, 199, 199" Text="&lt;b&gt;[Format(&quot;{0:dd/MM}, [SqlJustificativaObservacao.DT_PONTO])]&lt;/b&gt; - [SqlJustificativaObservacao.DIA_SEMANA]]&#13;&#10;" Font="Tahoma, 5pt" TextRenderType="HtmlTags"/>
              <TextObject Name="Text89" Left="55.19" Width="663.01" Height="12.1" Border.Color="199, 199, 199" Text="[SqlJustificativaObservacao.obs]" Font="Tahoma, 5pt"/>
            </DataBand>
            <GroupFooterBand Name="grfJustificativaObservacao" Top="397.38" Width="718.2" Height="1.89" BeforePrintEvent="grfJustificativaObservacao_BeforePrint"/>
          </GroupHeaderBand>
        </DataBand>
        <GroupFooterBand Name="grfPonto" Top="403.44" Width="718.2"/>
      </GroupHeaderBand>
      <GroupFooterBand Name="grfFuncionario" Top="407.61" Width="718.2" Height="80.89">
        <TextObject Name="Text90" Left="49.9" Top="71.06" Width="284.26" Height="9.83" Border.Lines="Top" Text="[SqlFuncionario.nome]" HorzAlign="Center" Font="Tahoma, 5pt"/>
        <TextObject Name="Text91" Left="384.05" Top="71.06" Width="284.26" Height="9.83" Border.Lines="Top" Text="RESPONSÁVEL" HorzAlign="Center" Font="Tahoma, 5pt"/>
        <TextObject Name="Text92" Top="4.91" Width="718.2" Height="38.18" Border.Color="199, 199, 199" Text="	Reconheço com exatidão das horas constantes de acordo com a minha frequência no intevalo de [SqlFuncionario.DT_INICIAL] a [SqlFuncionario.DT_FINAL]. Nos termos da Portaria MTB Nº 3626 de 13/11/1991 art.13, o presente &quot;Cartão Ponto&quot; substitui o quadro de horário de Trabalho.&#13;&#10;" VertAlign="Center" Font="Tahoma, 6pt"/>
      </GroupFooterBand>
    </GroupHeaderBand>
    <inherited Name="BndRodape" Top="492.66">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
  <ReportPage Name="Page1" ZOrder="1" Watermark.Font="Arial, 60pt">
    <DataBand Name="Data1" Width="35.91" Height="75.6" DataSource="Table6" Columns.Count="4" Columns.Width="35.91">
      <TextObject Name="SqlOutrosPeriodosDT_HR_REGISTRO" Width="35.91" Height="12.85" Border.Lines="Left, Right" Text="[SqlOutrosRegistros.HR_REGISTRO]&lt;sup&gt;[SqlOutrosRegistros.HR_REGISTRO_DIA]&lt;/sup&gt;&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 6pt" TextRenderType="HtmlTags"/>
    </DataBand>
  </ReportPage>
  <ReportPage Name="Page2" ZOrder="2" PaperWidth="60.9" PaperHeight="211.7" Watermark.Font="Arial, 60pt">
    <DataBand Name="mdtHorarioContratual" Top="79.66" Width="154.6" Height="9.83" BeforePrintEvent="mdtHorarioContratual_BeforePrint" DataSource="Table1">
      <TextObject Name="SqlHorarioContratualDS_DIA" Width="49.9" Height="9.83" Text="[SqlHorarioContratual.ds_dia]" VertAlign="Center" Font="Arial, 5pt"/>
      <TextObject Name="Text116" Left="80.14" Width="29.86" Height="9.83" Text="[SqlHorarioContratual.saida_01]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      <TextObject Name="Text117" Left="110" Width="29.86" Height="9.83" Text="[SqlHorarioContratual.entrada_02]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      <TextObject Name="Text118" Left="139.86" Width="29.86" Height="9.83" Text="[SqlHorarioContratual.saida_02]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      <TextObject Name="Text119" Left="170.1" Width="29.86" Height="9.83" Text="[SqlHorarioContratual.entrada_03]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      <TextObject Name="Text120" Left="199.96" Width="29.86" Height="9.83" Text="[SqlHorarioContratual.saida_03]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      <TextObject Name="SqlHorarioContratualENTRADA_01" Left="49.9" Width="29.86" Height="9.83" Text="[SqlHorarioContratual.entrada_01]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      <ChildBand Name="bndHorarioContratualCargaHoraria" Top="109.49" Width="154.6" Height="9.83" BeforePrintEvent="bndHorarioContratualCargaHoraria_BeforePrint">
        <TextObject Name="SqlHorarioContratualDS_TP_CARGA_HORARIA" Width="170.1" Height="9.83" Text="[SqlHorarioContratual.ds_tp_carga_horaria]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
        <TextObject Name="Text123" Left="170.1" Width="60.1" Height="9.83" Text="[SqlHorarioContratual.carga_horaria]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      </ChildBand>
      <DataHeaderBand Name="cabHorario" Top="20" Width="154.6" Height="9.83" BeforePrintEvent="cabHorario_BeforePrint">
        <TextObject Name="Text106" Width="49.9" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" VertAlign="Center" Font="Arial, 10pt"/>
        <TextObject Name="Text107" Left="80.14" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="SAI 1" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text108" Left="110" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="ENT 2" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text109" Left="139.86" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="SAI 2" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text110" Left="170.1" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="ENT 3" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text111" Left="199.96" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="SAI 3" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text112" Left="49.9" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="ENT 1" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <ChildBand Name="cabCargaHoraria" Top="49.83" Width="154.6" Height="9.83" BeforePrintEvent="cabCargaHoraria_BeforePrint">
          <TextObject Name="Text113" Width="170.1" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="CARGA HORÁRIA" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text114" Left="170.1" Width="49.9" Height="9.83" Border.Lines="All" Border.Color="White" Fill.Color="149, 149, 149" Text="HORAS" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        </ChildBand>
      </DataHeaderBand>
      <DataFooterBand Name="ftrHorario" Top="139.32" Width="154.6" Height="1.13" BeforePrintEvent="ftrHorario_BeforePrint">
        <ChildBand Name="ftrCargaHoraria" Top="160.45" Width="154.6" Height="1.13" BeforePrintEvent="ftrCargaHoraria_BeforePrint"/>
      </DataFooterBand>
    </DataBand>
  </ReportPage>
</inherited>
