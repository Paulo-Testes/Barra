<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="C:\Users\Embras\Desktop\gsr-reports\base\retrato.frx" BaseReportAbsolutePath="C:\Users\Embras\Desktop\gsr-reports\base\retrato.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="08/06/2025 14:22:23" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;
using System.Linq;

namespace FastReport
{
  public class ReportScript
  {
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
        
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }  
   
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }
//=================================================================================================================================================//
    private void gprData_BeforePrint(object sender, EventArgs e)
    {
      var tpAgrupamento = ((Int64)Report.GetParameterValue(&quot;tpAgrupamento&quot;));
      gprData.Visible = new long[] { 1, 2, 3 }.Contains(tpAgrupamento);
    } 
//=================================================================================================================================================//
  
    private void bndDataSemAgrupamento_BeforePrint(object sender, EventArgs e)
    {
      var tpAgrupamento = ((Int64)Report.GetParameterValue(&quot;tpAgrupamento&quot;));
      bndDataSemAgrupamento.Visible =! new long[] { 1, 2, 3 }.Contains(tpAgrupamento); 
    }  
//=================================================================================================================================================//
   
    private void bndAgrupamentoFuncionario_BeforePrint(object sender, EventArgs e)
    {
      bndAgrupamentoFuncionario.Visible = ((Int64)Report.GetParameterValue(&quot;tpAgrupamento&quot;)) == 1;
    } 
//================================================================================================================================================//
   
    private void bndAgrupamentoLocal_BeforePrint(object sender, EventArgs e)
    {
      bndAgrupamentoLocal.Visible = ((Int64)Report.GetParameterValue(&quot;tpAgrupamento&quot;)) == 2;
    }  
//================================================================================================================================================//
   
    private void bndAgrupamentoTurno_BeforePrint(object sender, EventArgs e)
    {
      bndAgrupamentoTurno.Visible = ((Int64)Report.GetParameterValue(&quot;tpAgrupamento&quot;)) == 3;
    }
//================================================================================================================================================//
  
    private void cabDataSemAgrupamento_BeforePrint(object sender, EventArgs e)
    {
      var tpAgrupamento = ((Int64)Report.GetParameterValue(&quot;tpAgrupamento&quot;));
      cabDataSemAgrupamento.Visible =! new long[] {1,2,3}.Contains(tpAgrupamento);
    }   
//================================================================================================================================================//

  }
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAD52+0S9jQVqtbGjnQ1fJfcaegeqkp60BrLd+YLnR4XqyfZaBNherXEOpLePTulRqrY+ChMEL6VHdEuu5eaQq8P7uQHIyyz39UKCw5T7zIJm6FSkYSf35fcK8jWRehSE8=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlEscala" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A.ID_ESCALA&#13;&#10;     , A.DS_ESCALA&#13;&#10;     , A.CP_ANO&#13;&#10;     , A.CP_MES&#13;&#10;     , B.DS_AREA_APURACAO&#13;&#10;     , C.CD_HORARIO_CONTRATUAL&#13;&#10;     , C.DS_HORARIO_CONTRATUAL&#13;&#10;  FROM GPE_ESCALA A&#13;&#10;       LEFT JOIN GPE_AREA_APURACAO              B ON B.ID_AREA_APURACAO         = A.ID_AREA_APURACAO&#13;&#10;       LEFT JOIN GPE_HORARIO_CONTRATUAL_VIEW         C ON C.ID_HORARIO_CONTRATUAL    = COALESCE(A.ID_HORARIO_CONTRATUAL, A.ID_HORARIO_CONTRATUAL_RH)&#13;&#10; WHERE A.ID_ESCALA = :ID_ESCALA">
        <Column Name="id_escala" DataType="System.Int32"/>
        <Column Name="ds_escala" DataType="System.String"/>
        <Column Name="cp_ano" DataType="System.Int32"/>
        <Column Name="cp_mes" DataType="System.Int32"/>
        <Column Name="ds_area_apuracao" DataType="System.String"/>
        <Column Name="cd_horario_contratual" DataType="System.Int32"/>
        <Column Name="ds_horario_contratual" DataType="System.String"/>
        <CommandParameter Name="ID_ESCALA" DataType="9" Expression="[idEscala]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlData" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A2.MATRICULA&#13;&#10;     , A2.NOME&#13;&#10;     , A2.CPF&#13;&#10;     , A2.CARGO&#13;&#10;     , A2.FUNCAO&#13;&#10;     , A2.DT_CONSIDERADA&#13;&#10;     , A2.ID_HORARIO&#13;&#10;     , A2.ID_ESCALA_LOCAL&#13;&#10;     , A2.DS_ESCALA_LOCAL&#13;&#10;     , A2.DT_HR_ENTRADA_01&#13;&#10;     , A2.DT_HR_SAIDA_01&#13;&#10;     , A2.DT_HR_ENTRADA_02&#13;&#10;     , A2.DT_HR_SAIDA_02&#13;&#10;     , A2.DT_HR_ENTRADA_03&#13;&#10;     , A2.DT_HR_SAIDA_03&#13;&#10;     , A2.TURNO&#13;&#10;     , A2.AGRUPAMENTO&#13;&#10;  FROM (&#13;&#10;        SELECT A1.MATRICULA&#13;&#10;             , A1.NOME&#13;&#10;             , A1.CPF&#13;&#10;             , A1.CARGO&#13;&#10;             , A1.FUNCAO&#13;&#10;             , A1.DT_CONSIDERADA&#13;&#10;             , A1.ID_HORARIO&#13;&#10;             , A1.ID_ESCALA_LOCAL&#13;&#10;             , A1.DS_ESCALA_LOCAL&#13;&#10;             , A1.DT_HR_ENTRADA_01&#13;&#10;             , A1.DT_HR_SAIDA_01&#13;&#10;             , A1.DT_HR_ENTRADA_02&#13;&#10;             , A1.DT_HR_SAIDA_02&#13;&#10;             , A1.DT_HR_ENTRADA_03&#13;&#10;             , A1.DT_HR_SAIDA_03&#13;&#10;        &#13;&#10;             , CAST(( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_ENTRADA_01, 'DD/MM/YY HH:NN') X ) || ' - ' ||&#13;&#10;                    ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_SAIDA_01,   'DD/MM/YY HH:NN') X ) ||&#13;&#10;                    CASE WHEN A1.DT_HR_ENTRADA_02 IS NOT NULL&#13;&#10;                         THEN ' | ' || ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_ENTRADA_02, 'DD/MM/YY HH:NN') X ) || ' - ' ||&#13;&#10;                                       ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_SAIDA_02,   'DD/MM/YY HH:NN') X )&#13;&#10;                         ELSE '' END ||&#13;&#10;                    CASE WHEN A1.DT_HR_ENTRADA_03 IS NOT NULL&#13;&#10;                         THEN ' | ' || ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_ENTRADA_03, 'DD/MM/YY HH:NN') X ) || ' - ' ||&#13;&#10;                                       ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_SAIDA_03,   'DD/MM/YY HH:NN') X )&#13;&#10;                         ELSE '' END AS VARCHAR(250)) AS TURNO&#13;&#10;        &#13;&#10;             , CAST(CASE WHEN 1 = :TP_AGRUPAMENTO        -- FUNCIONARIO&#13;&#10;                         THEN 'FUNCIONÁRIO: &lt;b&gt;' || CAST(A1.MATRICULA AS VARCHAR(20)) || ' - ' || A1.NOME || '&lt;/b&gt;'&#13;&#10;                         WHEN 2 = :TP_AGRUPAMENTO        -- LOCAL DA ESCALA&#13;&#10;                         THEN 'LOCAL: &lt;b&gt;' || A1.DS_ESCALA_LOCAL || '&lt;/b&gt;'&#13;&#10;                         WHEN 3 = :TP_AGRUPAMENTO        -- HORARIO DO TURNO&#13;&#10;                         THEN 'TURNO: &lt;b&gt;' ||&#13;&#10;                              ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_ENTRADA_01, 'DD/MM/YY HH:NN') X ) || ' - ' ||&#13;&#10;                              ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_SAIDA_01,   'DD/MM/YY HH:NN') X ) ||&#13;&#10;                              CASE WHEN A1.DT_HR_ENTRADA_02 IS NOT NULL&#13;&#10;                                   THEN ' | ' || ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_ENTRADA_02, 'DD/MM/YY HH:NN') X ) || ' - ' ||&#13;&#10;                                                 ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_SAIDA_02,   'DD/MM/YY HH:NN') X )&#13;&#10;                                   ELSE '' END ||&#13;&#10;                              CASE WHEN A1.DT_HR_ENTRADA_03 IS NOT NULL&#13;&#10;                                   THEN ' | ' || ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_ENTRADA_03, 'DD/MM/YY HH:NN') X ) || ' - ' ||&#13;&#10;                                                 ( SELECT X.RESULT FROM FORMATDATETIME(A1.DT_HR_SAIDA_03,   'DD/MM/YY HH:NN') X )&#13;&#10;                                   ELSE '' END  || '&lt;/b&gt;'&#13;&#10;                         ELSE ''                         -- SEM AGRUPAMENTO&#13;&#10;                     END AS VARCHAR(500) ) AS AGRUPAMENTO&#13;&#10;          FROM (&#13;&#10;                SELECT B.MATRICULA_SEQ AS MATRICULA                                      &#13;&#10;                     , B.NOME&#13;&#10;                     , B.CPF&#13;&#10;                     , B.CARGO&#13;&#10;                     , B.FUNCAO&#13;&#10;                     , A.DT_CONSIDERADA&#13;&#10;                     , A.ID_HORARIO&#13;&#10;                     , A.ID_ESCALA_LOCAL&#13;&#10;                     , D.DS_ESCALA_LOCAL&#13;&#10;                &#13;&#10;                     , CAST((CASE WHEN C.ENTRADA_01 IS NOT NULL THEN&#13;&#10;                           A.DT_CONSIDERADA + make_interval(mins=&gt; (CAST(SUBSTRING(RPAD(C.ENTRADA_01, 4, '0') FROM 1 FOR 2) AS INTEGER) * 60) +&#13;&#10;                                                            CAST(SUBSTRING(RPAD(C.ENTRADA_01, 4, '0') FROM 3 FOR 2) AS INTEGER))END) AS TIMESTAMP ) AS DT_HR_ENTRADA_01&#13;&#10;                &#13;&#10;                     , CAST(CASE WHEN C.SAIDA_01 IS NOT NULL THEN&#13;&#10;                           A.DT_CONSIDERADA + make_interval(mins=&gt; (CAST(SUBSTRING(RPAD(C.SAIDA_01,   4, '0') FROM 1 FOR 2) AS INTEGER) * 60) +&#13;&#10;                                                            CAST(SUBSTRING(RPAD(C.SAIDA_01,   4, '0') FROM 3 FOR 2) AS INTEGER)       +&#13;&#10;                                                            CASE WHEN C.SAIDA_01 &lt; C.ENTRADA_01       THEN 1440 ELSE 0 END) END AS TIMESTAMP ) AS DT_HR_SAIDA_01&#13;&#10;                &#13;&#10;                     , CAST(CASE WHEN C.ENTRADA_02 IS NOT NULL THEN&#13;&#10;                           A.DT_CONSIDERADA + make_interval(mins=&gt; (CAST(SUBSTRING(RPAD(C.ENTRADA_02, 4, '0') FROM 1 FOR 2) AS INTEGER) * 60) +&#13;&#10;                                                            CAST(SUBSTRING(RPAD(C.ENTRADA_02, 4, '0') FROM 3 FOR 2) AS INTEGER)       +&#13;&#10;                                                            CASE WHEN C.ENTRADA_02 &lt; C.SAIDA_01       THEN 1440 ELSE 0 END) END AS TIMESTAMP ) AS DT_HR_ENTRADA_02&#13;&#10;                &#13;&#10;                     , CAST(CASE WHEN C.SAIDA_02 IS NOT NULL THEN&#13;&#10;                           A.DT_CONSIDERADA + make_interval(mins=&gt; (CAST(SUBSTRING(RPAD(C.SAIDA_02,   4, '0') FROM 1 FOR 2) AS INTEGER) * 60) +&#13;&#10;                                                            CAST(SUBSTRING(RPAD(C.SAIDA_02,   4, '0') FROM 3 FOR 2) AS INTEGER)       +&#13;&#10;                                                            CASE WHEN C.SAIDA_02 &lt; C.ENTRADA_02       THEN 1440 ELSE 0 END) END AS TIMESTAMP ) AS DT_HR_SAIDA_02&#13;&#10;                &#13;&#10;                     , CAST(CASE WHEN C.ENTRADA_03 IS NOT NULL THEN&#13;&#10;                           A.DT_CONSIDERADA + make_interval(mins=&gt; (CAST(SUBSTRING(RPAD(C.ENTRADA_03, 4, '0') FROM 1 FOR 2) AS INTEGER) * 60) +&#13;&#10;                                                            CAST(SUBSTRING(RPAD(C.ENTRADA_03, 4, '0') FROM 3 FOR 2) AS INTEGER)       +&#13;&#10;                                                            CASE WHEN C.ENTRADA_03 &lt; C.SAIDA_02       THEN 1440 ELSE 0 END) END AS TIMESTAMP ) AS DT_HR_ENTRADA_03&#13;&#10;                &#13;&#10;                     , CAST(CASE WHEN C.SAIDA_03 IS NOT NULL THEN&#13;&#10;                           A.DT_CONSIDERADA + make_interval(mins=&gt; (CAST(SUBSTRING(RPAD(C.SAIDA_03,   4, '0') FROM 1 FOR 2) AS INTEGER) * 60) +&#13;&#10;                                                            CAST(SUBSTRING(RPAD(C.SAIDA_03,   4, '0') FROM 3 FOR 2) AS INTEGER)       +&#13;&#10;                                                            CASE WHEN C.SAIDA_03 &lt; C.ENTRADA_03       THEN 1440 ELSE 0 END             ) END AS TIMESTAMP ) AS DT_HR_SAIDA_03&#13;&#10;                  FROM GPE_ESCALA_DATA A&#13;&#10;                       LEFT JOIN GPE_FUNCIONARIO_POR_ID(COALESCE(A.ID_FUNCIONARIO, A.ID_FUNCIONARIO_RH)) B ON 1 = 1&#13;&#10;                       LEFT JOIN GPE_HORARIO            C ON C.ID_HORARIO         = A.ID_HORARIO&#13;&#10;                       LEFT JOIN GPE_ESCALA_LOCAL       D ON D.ID_ESCALA_LOCAL    = A.ID_ESCALA_LOCAL&#13;&#10;                 WHERE A.ID_ESCALA = :ID_ESCALA&#13;&#10;        &#13;&#10;               ) A1&#13;&#10;&#13;&#10;       ) A2&#13;&#10;&#13;&#10; ORDER BY&#13;&#10;       A2.AGRUPAMENTO&#13;&#10;     , CASE WHEN 1 = :TP_AGRUPAMENTO THEN A2.DS_ESCALA_LOCAL&#13;&#10;            ELSE CAST(A2.MATRICULA AS VARCHAR(20))&#13;&#10;        END&#13;&#10;     , A2.MATRICULA&#13;&#10;     , A2.TURNO">
        <Column Name="matricula" DataType="System.String"/>
        <Column Name="nome" DataType="System.String"/>
        <Column Name="cpf" DataType="System.String"/>
        <Column Name="cargo" DataType="System.String"/>
        <Column Name="funcao" DataType="System.String"/>
        <Column Name="dt_considerada" DataType="System.DateTime"/>
        <Column Name="id_horario" DataType="System.Int32"/>
        <Column Name="id_escala_local" DataType="System.Int32"/>
        <Column Name="ds_escala_local" DataType="System.String"/>
        <Column Name="dt_hr_entrada_01" DataType="System.DateTime"/>
        <Column Name="dt_hr_saida_01" DataType="System.DateTime"/>
        <Column Name="dt_hr_entrada_02" DataType="System.DateTime"/>
        <Column Name="dt_hr_saida_02" DataType="System.DateTime"/>
        <Column Name="dt_hr_entrada_03" DataType="System.DateTime"/>
        <Column Name="dt_hr_saida_03" DataType="System.DateTime"/>
        <Column Name="turno" DataType="System.String"/>
        <Column Name="agrupamento" DataType="System.String"/>
        <CommandParameter Name="TP_AGRUPAMENTO" DataType="9" Expression="[tpAgrupamento]"/>
        <CommandParameter Name="ID_ESCALA" DataType="9" Expression="[idEscala]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="idEscala" DataType="System.Int64" Expression="3"/>
    <Parameter Name="tpAgrupamento" DataType="System.Int64" Expression="0"/>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Relatório de Escalas&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="47"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="periodo" DataType="System.String" AsString=""/>
    <Parameter Name="filtro" DataType="System.String" AsString=""/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
  </Dictionary>
  <inherited Name="MainPage">
    <inherited Name="BndCabecalho" Top="0" Guides="85.049995">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="BndFiltro" Top="98.67">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <GroupHeaderBand Name="grpEscala" ZOrder="0" Top="121.73" Width="718.2" Height="75.6" Condition="0">
      <TextObject Name="Text1" Top="12" Width="100.17" Height="20.03" Border.Lines="All" Fill.Color="41, 82, 118" Text="Escala:" VertAlign="Center" Font="Tahoma, 8pt" TextFill.Color="White"/>
      <TextObject Name="Text2" Left="100.17" Top="12" Width="428.27" Height="20.03" Border.Lines="All" Fill.Color="41, 82, 118" Text="[SqlEscala.ds_escala]" VertAlign="Center" Font="Tahoma, 8pt" TextFill.Color="White"/>
      <TextObject Name="Text3" Left="528.07" Top="12" Width="70.31" Height="20.03" Border.Lines="All" Fill.Color="41, 82, 118" Text="Competência:" VertAlign="Center" Font="Tahoma, 7.5pt" TextFill.Color="White"/>
      <TextObject Name="Text4" Left="598.37" Top="12" Width="120.2" Height="20.03" Border.Lines="All" Fill.Color="41, 82, 118" Text="[string.Format(&quot;{0:MM/yyyy}&quot;, new DateTime([SqlEscala.cp_ano], [SqlEscala.cp_mes], 1))]" VertAlign="Center" Font="Tahoma, 8pt" TextFill.Color="White"/>
      <TextObject Name="Text5" Top="32.13" Width="100.17" Height="20.03" Border.Lines="All" Text="Área de apuração:" VertAlign="Center" Font="Tahoma, 8pt"/>
      <TextObject Name="Text6" Top="52.07" Width="100.17" Height="20.03" Border.Lines="All" Text="Horário Contratual:" VertAlign="Center" Font="Tahoma, 7.8pt"/>
      <TextObject Name="Text7" Left="100.17" Top="32.03" Width="618.03" Height="20.03" Border.Lines="All" Text="[SqlEscala.ds_area_apuracao]" VertAlign="Center" Font="Tahoma, 8pt, style=Bold"/>
      <TextObject Name="Text8" Left="100.17" Top="52.07" Width="618.03" Height="20.03" Border.Lines="All" Text="[SqlEscala.cd_horario_contratual] - [SqlEscala.ds_horario_contratual]" VertAlign="Center" Font="Tahoma, 8pt, style=Bold"/>
      <DataBand Name="mdtEscala" Top="201.5" Width="718.2" DataSource="Table">
        <GroupHeaderBand Name="gprData" Top="205.67" Width="718.2" Height="29.48" BeforePrintEvent="gprData_BeforePrint" Condition="[SqlData.agrupamento]">
          <TextObject Name="Text9" Width="718.2" Height="20.03" Border.Lines="Bottom" Border.Color="199, 199, 199" Text="[SqlData.agrupamento]" VertAlign="Bottom" Font="Tahoma, 7.8pt, style=Bold" TextRenderType="HtmlTags"/>
          <DataBand Name="bndDataSemAgrupamento" Top="263.51" Width="718.2" Height="13.99" BeforePrintEvent="bndDataSemAgrupamento_BeforePrint" DataSource="Table1">
            <TextObject Name="Text13" Width="268" Height="13.99" Text="[SqlData.matricula] | [SqlData.nome]" Font="Tahoma, 7.8pt"/>
            <TextObject Name="Text14" Left="268" Width="249.86" Height="13.99" Text="[SqlData.ds_escala_local]" Font="Tahoma, 7.8pt"/>
            <TextObject Name="Text15" Left="518.24" Width="199.96" Height="13.99" Text="[SqlData.turno]" Font="Tahoma, 7.8pt"/>
            <ChildBand Name="bndAgrupamentoFuncionario" Top="281.67" Width="718.2" Height="13.99" BeforePrintEvent="bndAgrupamentoFuncionario_BeforePrint">
              <TextObject Name="Text16" Width="398.03" Height="13.99" Text="[SqlData.ds_escala_local]" Font="Tahoma, 7.8pt"/>
              <TextObject Name="Text17" Left="398.03" Width="320.17" Height="13.99" Text="[SqlData.turno]" Font="Tahoma, 7.8pt"/>
              <ChildBand Name="bndAgrupamentoLocal" Top="299.82" Width="718.2" Height="13.99" BeforePrintEvent="bndAgrupamentoLocal_BeforePrint">
                <TextObject Name="Text18" Width="398.03" Height="13.99" Text="[SqlData.matricula] -  [SqlData.nome]" Font="Tahoma, 7.8pt"/>
                <TextObject Name="Text19" Left="398.03" Width="320.17" Height="13.99" Text="[SqlData.turno]" Font="Tahoma, 7.8pt"/>
                <ChildBand Name="bndAgrupamentoTurno" Top="317.98" Width="718.2" Height="13.99" BeforePrintEvent="bndAgrupamentoTurno_BeforePrint">
                  <TextObject Name="Text20" Width="398.03" Height="13.99" Text="[SqlData.matricula] -  [SqlData.nome]" Font="Tahoma, 7.8pt"/>
                  <TextObject Name="Text21" Left="398.03" Width="320.17" Height="13.99" Text="[SqlData.ds_escala_local]" Font="Tahoma, 7.8pt"/>
                </ChildBand>
              </ChildBand>
            </ChildBand>
            <DataHeaderBand Name="cabDataSemAgrupamento" Top="239.31" Width="718.2" Height="20.03" BeforePrintEvent="cabDataSemAgrupamento_BeforePrint">
              <TextObject Name="Text10" Width="268" Height="20.03" Text="Funcionário" Font="Tahoma, 7.8pt, style=Bold"/>
              <TextObject Name="Text11" Left="268" Width="249.86" Height="20.03" Text="Local" Font="Tahoma, 7.8pt, style=Bold"/>
              <TextObject Name="Text12" Left="518.24" Width="199.96" Height="20.03" Text="Turno" Font="Tahoma, 7.8pt, style=Bold"/>
            </DataHeaderBand>
            <Sort>
              <Sort Expression="[SqlData.matricula]"/>
              <Sort Expression="[SqlData.nome]"/>
            </Sort>
          </DataBand>
        </GroupHeaderBand>
      </DataBand>
    </GroupHeaderBand>
    <inherited Name="BndRodape" Top="336.14">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
</inherited>
