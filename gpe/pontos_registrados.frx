<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="C:\Users\Embras\Desktop\gsr-reports\base\retrato.frx" BaseReportAbsolutePath="C:\Users\Embras\Desktop\gsr-reports\base\retrato.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="08/06/2025 15:57:14" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
        
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }  
    
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }
//==========================================================================================================================//
  
    private void mdtFuncionario_BeforePrint(object sender, EventArgs e)
    {
      // Referência ao próprio relatório
      Report report = Report;
     
      // Acessa a base SqlFuncionario para
      TableDataSource SqlFuncionario = report.GetDataSource(&quot;SqlFuncionario&quot;) as TableDataSource;

      // Acessa as fontes de dados SqlPonto
      TableDataSource SqlPonto = report.GetDataSource(&quot;SqlPonto&quot;) as TableDataSource;    
      SqlPonto.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);  
      
      (SqlPonto as DataSourceBase).Init();      
      
      // Acessa as fontes de dados SqlAM
      TableDataSource SqlAM = report.GetDataSource(&quot;SqlAM&quot;) as TableDataSource;    
      SqlAM.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);  
      
      (SqlAM as DataSourceBase).Init();
     
      // Acessa as fontes de dados SqlHP
      TableDataSource SqlHP = report.GetDataSource(&quot;SqlHP&quot;) as TableDataSource;
      SqlHP.Parameters.FindByName(&quot;ID_FUNCIONARIO&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);  
      
      (SqlHP as DataSourceBase).Init();
    } 
    //==========================================================================================================================//
   
    private void cabHorario_BeforePrint(object sender, EventArgs e)
    {  // Obtém o valor da coluna ID_TP_HORARIO_CONTRATUAL
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));

       //Torna visível se estiver entre 1 ou 2
      cabHorario.Visible = (tipoHorario == 1 || tipoHorario == 2);
      
    }   
    //==========================================================================================================================//
   
    private void cabCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      // Torna visível se estiver igual a 3
      cabCargaHoraria.Visible = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;)) == 3; 
    }  
    //==========================================================================================================================//
  
    private void mdtHorarioContratual_BeforePrint(object sender, EventArgs e)
    {
     var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));
      
     mdtHorarioContratual.Visible = (tipoHorario == 1 || tipoHorario == 2); 
    }
    //==========================================================================================================================//
  
    private void bndHorarioContratualCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      //Torna visível se estiver igual a 3      
      bndHorarioContratualCargaHoraria.Visible = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;))  == 3;
    } 
    //==========================================================================================================================//
   

    private void ftrHorario_BeforePrint(object sender, EventArgs e)
    {
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));
      
      ftrHorario.Visible = (tipoHorario == 1 || tipoHorario == 2); 
    } 
    //==========================================================================================================================//

    private void ftrCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_horario_contratual&quot;));
      
      ftrCargaHoraria.Visible = (tipoHorario == 3);       
    }
    //==========================================================================================================================//
   
    private void bndOutrosRegistros_BeforePrint(object sender, EventArgs e)
    {   
      
      // Recupera a fonte de dados corretamente
      var SqlOutrosRegistros = Report.GetDataSource(&quot;SqlOutrosRegistros&quot;);

      // Verifica se a banda deve ser visível
      bndOutrosRegistros.Visible =
        SqlOutrosRegistros != null &amp;&amp;
        SqlOutrosRegistros.RowCount &gt; 0 &amp;&amp;
        Convert.ToInt32(Report.GetColumnValue(&quot;SqlPonto.tem_outros_registros&quot;)) == 1 &amp;&amp;
        !string.IsNullOrEmpty((string)Report.GetColumnValue(&quot;SqlOutrosRegistros.hr_registro&quot;));

      // Se for para colorir o tipo do dia
      if ((Int64)Report.GetParameterValue(&quot;colorirTipoDia&quot;) == 1)
      {
        // Tenta pegar a cor da linha
        Color cor = Color.FromArgb(Convert.ToInt32(Report.GetColumnValue(&quot;SqlPonto.cor&quot;)));

        // Aplica a cor no preenchimento
        memDiaOutrosRegistros.FillColor = cor;
        memTipoDiaOutrosRegistros.FillColor = cor;

        // Se quiser aplicar condição de destaque, adicione dentro de cada condição da coleção
        foreach (dynamic cond in memDiaOutrosRegistros.Highlight)
        {
          cond.ApplyFill = false;
        }
        foreach (dynamic cond in memTipoDiaOutrosRegistros.Highlight)
        {
          cond.ApplyFill = false;
        }
      
      }

      //Ajuste de renderização da banda
      int count = SqlOutrosRegistros.RowCount;
      int altura = 13 * (count / 8);

      memDiaOutrosRegistros.Height = altura;
      memTipoDiaOutrosRegistros.Height = altura;
      
    }    
    //==========================================================================================================================//
    private void bndJustificativaObservacao_BeforePrint(object sender, EventArgs e)
    {
      ((BandBase)sender).Visible = ((Int64)Report.GetParameterValue(&quot;imprimeJustificativa&quot;)) == 1;
      
      // Modifica a SQL para PostgreSQL
      TableDataSource sqlPonto = Report.GetDataSource(&quot;SqlPonto&quot;) as TableDataSource;
      sqlPonto.SelectCommand = sqlPonto.SelectCommand.Replace(
        &quot;A.DT_FINAL - A.DT_INICIAL + 1&quot;,
        &quot;EXTRACT(DAYS FROM A.DT_FINAL - A.DT_INICIAL) + 1&quot;
        );
      (sqlPonto as DataSourceBase).Init();

      TableDataSource sqlOutrosRegistros = Report.GetDataSource(&quot;SqlOutrosRegistros&quot;) as TableDataSource;
      sqlOutrosRegistros.SelectCommand =  sqlOutrosRegistros.SelectCommand.Replace(&quot;--OFFSET 4&quot;, &quot;OFFSET 4&quot;);
      (sqlOutrosRegistros as DataSourceBase).Init();
    }  
    //==========================================================================================================================//
    
    private void bndPonto_BeforePrint(object sender, EventArgs e)
    {
      // Se TEM_OUTROS_REGISTROS for 1, abre a consulta SqlOutrosRegistros com os parâmetros corretos
      if (Convert.ToInt32(Report.GetColumnValue(&quot;SqlPonto.tem_outros_registros&quot;)) == 1)
      {
        TableDataSource sqlOutrosRegistros = Report.GetDataSource(&quot;SqlOutrosRegistros&quot;) as TableDataSource;

        sqlOutrosRegistros.Parameters.FindByName(&quot;id_funcionario&quot;).Value =
          Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);

        sqlOutrosRegistros.Parameters.FindByName(&quot;dt_ponto&quot;).Value =
          Report.GetColumnValue(&quot;SqlPonto.dt_ponto&quot;);

        (sqlOutrosRegistros as DataSourceBase).Init(); // Equivalente ao Open
      }

      // Define variável de linha no relatório
      Report.SetParameterValue(&quot;lineBndPonto&quot;, Report.GetColumnValue(&quot;Line&quot;));


      
      if  (((Int64)Report.GetParameterValue(&quot;colorirTipoDia&quot;)) == 1)
      {
        TextObject ponto1 = Report.FindObject(&quot;Text31&quot;) as TextObject;
        TextObject ponto2 = Report.FindObject(&quot;Text32&quot;) as TextObject;

        // Converte a string da cor para objeto Color
        string corHex = Report.GetColumnValue(&quot;SqlPonto.COR&quot;).ToString();
        Color cor = ColorTranslator.FromOle(Convert.ToInt32(corHex));

        ponto1.FillColor = cor;
        ponto1.Highlight.Clear();

        ponto2.FillColor = cor;
        ponto2.Highlight.Clear();
      }
    }
      
//==========================================================================================================================//

  } 
}</ScriptText>
  <Styles>
    <Style Name="Estilo1" Fill.Color="224, 224, 224" Font="Arial, 10pt" ApplyBorder="false" ApplyTextFill="false" ApplyFont="false"/>
  </Styles>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAD52+0S9jQVqtbGjnQ1fJfcaegeqkp60BrLd+YLnR4XqyfZaBNherXEOpLePTulRqrY+ChMEL6VHdEuu5eaQq8P7uQHIyyz39UKCw5T7zIJp67l392Vhp0p1E3fxzJ+qU=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" DataType="System.String"/>
        <Column Name="site" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlFuncionario" DataType="System.Int32" Enabled="true" SelectCommandlt;= B.DT_FINAL&#13;&#10;                         UNION&#13;&#10;                        SELECT FF.ID_HORARIO_CONTRATUAL_RH AS ID_HORARIO_CONTRATUAL&#13;&#10;                             , FF.DT_INICIO_HORARIO&#13;&#10;                          FROM GPE_FUNCIONARIO_HORARIO FF&#13;&#10;                         WHERE 1                     = C.INTEGRADO_RH&#13;&#10;                           AND FF.ID_FUNCIONARIO_RH  = A.ID_FILTRO&#13;&#10;                           AND FF.DT_INICIO_HORARIO &lt;= B.DT_FINAL&#13;&#10;                         ORDER BY 2 DESC&#13;&#10;                          LIMIT 1&#13;&#10;                       ) XX ) AS ID_HORARIO_CONTRATUAL&#13;&#10;          FROM SIS_RELATORIO_FILTRO A&#13;&#10;               LEFT JOIN GPE_PERIODO_APURACAO                B ON B.ID_PERIODO_APURACAO                            = :ID_PERIODO_APURACAO&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO                    C ON C.ID_CONFIGURACAO                                = 1&#13;&#10;        &#13;&#10;               LEFT JOIN GPE_AREA_FUNCIONARIO                E ON E.ID_AREA_APURACAO                               = B.ID_AREA_APURACAO&#13;&#10;                                                              AND ( (  E.ID_FUNCIONARIO_RH  = A.ID_FILTRO   AND 1  = C.INTEGRADO_RH) OR&#13;&#10;                                                                    (  E.ID_FUNCIONARIO     = A.ID_FILTRO   AND 0 &lt;&gt; C.INTEGRADO_RH)   )&#13;&#10;               LEFT JOIN GPE_AREA_APURACAO                   F ON F.ID_AREA_APURACAO                               = B.ID_AREA_APURACAO&#13;&#10;               LEFT JOIN GPE_FUNCIONARIO_POR_ID(A.ID_FILTRO) G ON 1 = 1&#13;&#10;               LEFT JOIN SIS_FORMATA_DOCUMENTO(2, G.CPF)     H ON 1 = 1&#13;&#10;               LEFT JOIN GPE_LOCAL_TRABALHO_VIEW             I ON I.ID_LOCAL_TRABALHO                              = G.ID_LOCAL_TRABALHO&#13;&#10;               LEFT JOIN SIS_ENTIDADE                        K ON K.ID_ENTIDADE                                    = G.ID_ENTIDADE&#13;&#10;               LEFT JOIN SIS_PESSOA                          L ON L.ID_PESSOA                                      = K.ID_PESSOA_JURIDICA&#13;&#10;         WHERE A.ID_RELATORIO_FILTRO = :ID_RELATORIO_FILTRO                                                        &#13;&#10;       ) A1&#13;&#10;       LEFT JOIN GPE_HORARIO_CONTRATUAL_VIEW B1 ON B1.ID_HORARIO_CONTRATUAL = A1.ID_HORARIO_CONTRATUAL&#13;&#10; ORDER BY&#13;&#10;       A1.NOME&#13;&#10;     , A1.MATRICULA">
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <Column Name="matricula" DataType="System.String"/>
        <Column Name="nome" DataType="System.String"/>
        <Column Name="cpf" DataType="System.String"/>
        <Column Name="pis" DataType="System.String"/>
        <Column Name="cargo" DataType="System.String"/>
        <Column Name="funcao" DataType="System.String"/>
        <Column Name="ds_local_trabalho" DataType="System.String"/>
        <Column Name="ds_area_apuracao" DataType="System.String"/>
        <Column Name="cp_ano" DataType="System.Int32"/>
        <Column Name="cp_mes" DataType="System.Int32"/>
        <Column Name="dt_inicial" DataType="System.DateTime"/>
        <Column Name="dt_final" DataType="System.DateTime"/>
        <Column Name="id_entidade" DataType="System.Int32"/>
        <Column Name="ds_entidade" DataType="System.String"/>
        <Column Name="doc_entidade" DataType="System.String"/>
        <Column Name="id_horario_contratual" DataType="System.Int32"/>
        <Column Name="cd_horario_contratual" DataType="System.Int32"/>
        <Column Name="ds_horario_contratual" DataType="System.String"/>
        <Column Name="id_tp_horario_contratual" DataType="System.Int32"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_RELATORIO_FILTRO" DataType="9" Expression="[IdRelatorioFiltro]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlPonto" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A3.DT_PONTO&#13;&#10;     , A3.DIA_SEMANA&#13;&#10;     , A3.ID_APURACAO&#13;&#10;     , A3.ID_TP_DIA_PONTO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.ID_TP_DIA_PONTO = 1 AND A3.ISENTO = 1 THEN A3.DS_TP_DIA_PONTO || ' (Isento)'&#13;&#10;                 WHEN A3.ID_TP_DIA_PONTO = 1 AND A3.ID_PONTO_REGISTRADO_ENTRADA_01 IS NULL THEN A3.DS_TP_DIA_PONTO || ' (Falta)'&#13;&#10;                 ELSE A3.DS_TP_DIA_PONTO&#13;&#10;            END&#13;&#10;       AS VARCHAR(120)) AS DS_TP_DIA_PONTO&#13;&#10;&#13;&#10;     , A3.APURACAO_DIA_SEGUINTE&#13;&#10;     , A3.EXIBIR_INTERVALO_PRE_ASSINALADO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_01             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 2  THEN '*' || A3.ENTRADA_01   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 3  THEN '^' || A3.ENTRADA_01   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_01&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_01&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_01               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 2  THEN '*' || A3.SAIDA_01     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 3  THEN '^' || A3.SAIDA_01     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_01&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_01&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_02             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 2  THEN '*' || A3.ENTRADA_02   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 3  THEN '^' || A3.ENTRADA_02   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_02&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_02&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_02               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 2  THEN '*' || A3.SAIDA_02     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 3  THEN '^' || A3.SAIDA_02     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_02&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_02&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_03             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_03 = 2  THEN '*' || A3.ENTRADA_03   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_03 = 3  THEN '^' || A3.ENTRADA_03   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_03 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_03 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_03&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_03&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_03               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_03   = 2  THEN '*' || A3.SAIDA_03     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_03   = 3  THEN '^' || A3.SAIDA_03     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_03   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_03   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_03&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_03&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_04             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_04 = 2  THEN '*' || A3.ENTRADA_04   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_04 = 3  THEN '^' || A3.ENTRADA_04   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_04 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_04 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_04&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_04&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_04               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_04   = 2  THEN '*' || A3.SAIDA_04     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_04   = 3  THEN '^' || A3.SAIDA_04     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_04   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_04   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_04&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_04&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_01 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_01 &lt;&gt; 5 THEN A3.ENTRADA_01_DIA END AS VARCHAR(5)) AS ENTRADA_01_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_01   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_01   &lt;&gt; 5 THEN A3.SAIDA_01_DIA   END AS VARCHAR(5)) AS SAIDA_01_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_02 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_02 &lt;&gt; 5 THEN A3.ENTRADA_02_DIA END AS VARCHAR(5)) AS ENTRADA_02_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_02   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_02   &lt;&gt; 5 THEN A3.SAIDA_02_DIA   END AS VARCHAR(5)) AS SAIDA_02_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_03 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_03 &lt;&gt; 5 THEN A3.ENTRADA_03_DIA END AS VARCHAR(5)) AS ENTRADA_03_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_03   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_03   &lt;&gt; 5 THEN A3.SAIDA_03_DIA   END AS VARCHAR(5)) AS SAIDA_03_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_04 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_04 &lt;&gt; 5 THEN A3.ENTRADA_04_DIA END AS VARCHAR(5)) AS ENTRADA_04_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_04   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_04   &lt;&gt; 5 THEN A3.SAIDA_04_DIA   END AS VARCHAR(5)) AS SAIDA_04_DIA&#13;&#10;&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_03&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_03&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_04&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_04&#13;&#10;&#13;&#10;     , A3.TEM_OUTROS_REGISTROS&#13;&#10;&#13;&#10;     , A3.COR&#13;&#10;     , A3.ISENTO&#13;&#10;     , A3.ID_FUNCIONARIO&#13;&#10;  FROM (&#13;&#10;        SELECT A2.DT_PONTO&#13;&#10;             , CAST(CASE EXTRACT(DOW FROM (A2.DT_PONTO::DATE))&#13;&#10;                         WHEN 0 THEN 'dom'&#13;&#10;                         WHEN 1 THEN 'seg'&#13;&#10;                         WHEN 2 THEN 'ter'&#13;&#10;                         WHEN 3 THEN 'qua'&#13;&#10;                         WHEN 4 THEN 'qui'&#13;&#10;                         WHEN 5 THEN 'sex'&#13;&#10;                         WHEN 6 THEN 'sáb'&#13;&#10;                     END AS VARCHAR(3)) AS DIA_SEMANA&#13;&#10;        &#13;&#10;             , A2.ID_APURACAO&#13;&#10;             , A2.ID_TP_DIA_PONTO&#13;&#10;             , A2.DS_TP_DIA_PONTO&#13;&#10;             , A2.APURACAO_CARGA_HORARIA&#13;&#10;             , A2.APURACAO_DIA_SEGUINTE&#13;&#10;             , A2.EXIBIR_INTERVALO_PRE_ASSINALADO&#13;&#10;        &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_01 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_01)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_01&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_01   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_01)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_SAIDA_01)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_01&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_02 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_02)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_ENTRADA_02) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_02&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_02   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_02)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_SAIDA_02)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_02&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_03 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_03)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_ENTRADA_03) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_03&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_03   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_03)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_SAIDA_03)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_03&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_04 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_04)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_ENTRADA_04) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_04&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_04   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_04)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(EXTRACT(MINUTE FROM A2.DT_HR_REGISTRO_SAIDA_04)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_04&#13;&#10;&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_01 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_01)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_01)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_01)::int) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||  CAST(DATE_PART('day', A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_01)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_01)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_01)::int)) AS VARCHAR(10)) END&#13;&#10;                       AS VARCHAR(10)) AS ENTRADA_01_DIA        &#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_01 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_01)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_01)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_01)::int) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) || CAST(A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_01)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_01)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_01)::int) AS VARCHAR(10)) END &#13;&#10;                       AS VARCHAR(10)) AS SAIDA_01_DIA&#13;&#10;                       &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_02 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_02)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_02)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_02)::int) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) || CAST(A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_02)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_02)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_02)::int) AS VARCHAR(10))END&#13;&#10;                       AS VARCHAR(10)) AS ENTRADA_02_DIA &#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_02 IS NOT NULL AND DATE(A2.DT_HR_REGISTRO_SAIDA_02) &lt;&gt; A2.DT_PONTO THEN &#13;&#10;                      CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                      CAST(ABS(DATE_PART('day', A2.DT_HR_REGISTRO_SAIDA_02::date - A2.DT_PONTO)) AS VARCHAR(10)) END AS VARCHAR(10))&#13;&#10;                       AS SAIDA_02_DIA&#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_03 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_03)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_03)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_03)::int) &lt;&gt; A2.DT_PONTO THEN             &#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) || CAST(DATE_PART('day',A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_03)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_03)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_03)::int)) AS VARCHAR(10)) END&#13;&#10;                       AS VARCHAR(10)) AS ENTRADA_03_DIA&#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_03 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_03)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_03)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_03)::int) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) || CAST(DATE_PART('day',A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_03)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_03)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_03)::int)) AS VARCHAR(10)) END&#13;&#10;                       AS VARCHAR(10)) AS SAIDA_03_DIA&#13;&#10;                    &#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_04 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_04)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_04)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_04)::int) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) || CAST(DATE_PART('day', A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_04)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_04)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_04)::int)) AS VARCHAR(10)) END&#13;&#10;                       AS VARCHAR(10)) AS ENTRADA_04_DIA&#13;&#10;                    &#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_04 IS NOT NULL AND make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_04)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_04)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_04)::int) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;               CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) || CAST(DATE_PART('day', A2.DT_PONTO - make_date(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_04)::int,&#13;&#10;                       EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_04)::int, EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_04)::int)) AS VARCHAR(10)) END&#13;&#10;                       AS VARCHAR(10)) AS SAIDA_04_DIA&#13;&#10;&#13;&#10;             , A2.ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;             , A2.ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;             , A2.ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;             , A2.ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;             , A2.ID_PONTO_REGISTRADO_ENTRADA_03&#13;&#10;             , A2.ID_PONTO_REGISTRADO_SAIDA_03&#13;&#10;             , A2.ID_PONTO_REGISTRADO_ENTRADA_04&#13;&#10;             , A2.ID_PONTO_REGISTRADO_SAIDA_04&#13;&#10;        &#13;&#10;             , A2.TEM_OUTROS_REGISTROS&#13;&#10;&#13;&#10;             , A2.ID_TP_REGISTRO_ENTRADA_01&#13;&#10;             , A2.ID_TP_REGISTRO_SAIDA_01&#13;&#10;             , A2.ID_TP_REGISTRO_ENTRADA_02&#13;&#10;             , A2.ID_TP_REGISTRO_SAIDA_02&#13;&#10;             , A2.ID_TP_REGISTRO_ENTRADA_03&#13;&#10;             , A2.ID_TP_REGISTRO_SAIDA_03&#13;&#10;             , A2.ID_TP_REGISTRO_ENTRADA_04&#13;&#10;             , A2.ID_TP_REGISTRO_SAIDA_04&#13;&#10;&#13;&#10;             , A2.COR&#13;&#10;             , A2.ISENTO&#13;&#10;             , A2.ID_FUNCIONARIO&#13;&#10;          FROM (&#13;&#10;                SELECT A1.DT_PONTO&#13;&#10;                     , B1.ID_APURACAO&#13;&#10;                     , B1.ID_TP_DIA_PONTO&#13;&#10;                     , B1.APURACAO_CARGA_HORARIA&#13;&#10;                     , I1.APURACAO_DIA_SEGUINTE&#13;&#10;                     , I1.EXIBIR_INTERVALO_PRE_ASSINALADO&#13;&#10;&#13;&#10;                     , E1.DT_HR_REGISTRO AS DT_HR_REGISTRO_ENTRADA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S2.DT_HR_REGISTRO ELSE S1.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_SAIDA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN E3.DT_HR_REGISTRO ELSE E2.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_ENTRADA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S3.DT_HR_REGISTRO ELSE S2.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_SAIDA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN E4.DT_HR_REGISTRO ELSE E3.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_ENTRADA_03&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S4.DT_HR_REGISTRO ELSE S3.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_SAIDA_03&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE E4.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_ENTRADA_04&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE S4.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_SAIDA_04&#13;&#10;                &#13;&#10;                     , E1.ID_PONTO_REGISTRADO AS ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S2.ID_PONTO_REGISTRADO ELSE S1.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN E3.ID_PONTO_REGISTRADO ELSE E2.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S3.ID_PONTO_REGISTRADO ELSE S2.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN E4.ID_PONTO_REGISTRADO ELSE E3.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_ENTRADA_03&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S4.ID_PONTO_REGISTRADO ELSE S3.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_SAIDA_03&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE E4.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_ENTRADA_04&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE S4.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_SAIDA_04&#13;&#10;&#13;&#10;                     , CASE WHEN S4.ID_PONTO_REGISTRADO IS NULL THEN 0 ELSE 1 END AS TEM_OUTROS_REGISTROS&#13;&#10;                &#13;&#10;                     , E1.ID_TP_REGISTRO AS ID_TP_REGISTRO_ENTRADA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S2.ID_TP_REGISTRO ELSE S1.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_SAIDA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN E3.ID_TP_REGISTRO ELSE E2.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_ENTRADA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S3.ID_TP_REGISTRO ELSE S2.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_SAIDA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN E4.ID_TP_REGISTRO ELSE E3.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_ENTRADA_03&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S4.ID_TP_REGISTRO ELSE S3.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_SAIDA_03&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE E4.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_ENTRADA_04&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE S4.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_SAIDA_04&#13;&#10;&#13;&#10;                     , C1.DS_TP_DIA_PONTO&#13;&#10;                     , CAST(COALESCE(C1.COR, 16448250) AS INTEGER) AS COR&#13;&#10;                     , I1.ISENTO&#13;&#10;                     , COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH) AS ID_FUNCIONARIO&#13;&#10;                  FROM (&#13;&#10;                        SELECT A.ID_PERIODO_APURACAO&#13;&#10;                             , A.DT_INICIAL&#13;&#10;                             , A.DT_FINAL&#13;&#10;                             , A.DT_INICIAL + (B.ID_SEQUENCIA - 1) * INTERVAL '1 day' AS DT_PONTO&#13;&#10;                             , C.INTEGRADO_RH&#13;&#10;                          FROM GPE_PERIODO_APURACAO A&#13;&#10;                               LEFT JOIN SIS_SEQUENCIA    B ON B.ID_SEQUENCIA &lt;= A.DT_FINAL - A.DT_INICIAL + 1&#13;&#10;                               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;                         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO                                      &#13;&#10;                       ) A1                                                                              &#13;&#10;                       LEFT JOIN GPE_APURACAO           X1 ON X1.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                          AND X1.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                          AND X1.ID_FUNCIONARIO         = :ID_FUNCIONARIO&#13;&#10;                                                          AND 1                        &lt;&gtlt;&gt; 1&#13;&#10;&#13;&#10;               ) A2&#13;&#10;&#13;&#10;       ) A3&#13;&#10;&#13;&#10; ORDER BY&#13;&#10;       A3.DT_PONTO">
        <Column Name="dt_ponto" DataType="System.DateTime"/>
        <Column Name="dia_semana" DataType="System.String"/>
        <Column Name="id_apuracao" DataType="System.Int32"/>
        <Column Name="id_tp_dia_ponto" DataType="System.Int32"/>
        <Column Name="ds_tp_dia_ponto" DataType="System.String"/>
        <Column Name="apuracao_dia_seguinte" DataType="System.Int16"/>
        <Column Name="exibir_intervalo_pre_assinalado" DataType="System.Int16"/>
        <Column Name="entrada_01" DataType="System.String"/>
        <Column Name="saida_01" DataType="System.String"/>
        <Column Name="entrada_02" DataType="System.String"/>
        <Column Name="saida_02" DataType="System.String"/>
        <Column Name="entrada_03" DataType="System.String"/>
        <Column Name="saida_03" DataType="System.String"/>
        <Column Name="entrada_04" DataType="System.String"/>
        <Column Name="saida_04" DataType="System.String"/>
        <Column Name="entrada_01_dia" DataType="System.String"/>
        <Column Name="saida_01_dia" DataType="System.String"/>
        <Column Name="entrada_02_dia" DataType="System.String"/>
        <Column Name="saida_02_dia" DataType="System.String"/>
        <Column Name="entrada_03_dia" DataType="System.String"/>
        <Column Name="saida_03_dia" DataType="System.String"/>
        <Column Name="entrada_04_dia" DataType="System.String"/>
        <Column Name="saida_04_dia" DataType="System.String"/>
        <Column Name="id_ponto_registrado_entrada_01" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_01" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_entrada_02" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_02" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_entrada_03" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_03" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_entrada_04" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_04" DataType="System.Int32"/>
        <Column Name="tem_outros_registros" DataType="System.Int32"/>
        <Column Name="cor" DataType="System.Int32"/>
        <Column Name="isento" DataType="System.Int16"/>
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" Expression="[SqlFuncionario.id_funcionario]"/>
      </TableDataSource>
      <TableDataSource Name="Table2" Alias="SqlHorarioContratual" DataType="System.Int32" Enabled="true" SelectCommand="SELECT AA1.ID_HORARIO_CONTRATUAL&#13;&#10;     , AA1.ID_TP_HORARIO_CONTRATUAL&#13;&#10;     , SEQ.ID_SEQUENCIA AS SEQUENCIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 1 THEN 'Domingo'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 2 THEN 'Segunda'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 3 THEN 'Terça'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 4 THEN 'Quarta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 5 THEN 'Quinta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 6 THEN 'Sexta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 7 THEN 'Sábado'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 2                          THEN CAST(SEQ.ID_SEQUENCIA AS CHAR(1)) || 'º Turno'&#13;&#10;             END AS VARCHAR(20)) AS DS_DIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_01&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_01   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_01&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_02   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_03&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_03   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_03&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN AA1.ID_TP_CARGA_HORARIA&#13;&#10;             END AS INTEGER) AS ID_TP_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN AA1.DS_TP_CARGA_HORARIA&#13;&#10;             END AS VARCHAR(30)) AS DS_TP_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 THEN CAST(AA1.D01_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D01_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 THEN CAST(AA1.D02_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D02_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 THEN CAST(AA1.D03_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D03_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 THEN CAST(AA1.D04_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D04_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 THEN CAST(AA1.D05_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D05_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 THEN CAST(AA1.D06_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D06_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 THEN CAST(AA1.D07_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D07_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;             END AS VARCHAR(10)) AS CARGA_HORARIA&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT HOR.ID_HORARIO_CONTRATUAL&#13;&#10;             , HOR.ID_TP_HORARIO_CONTRATUAL&#13;&#10;&#13;&#10;             , D01.ENTRADA_01  AS D01_ENTRADA_01&#13;&#10;             , D01.SAIDA_01    AS D01_SAIDA_01&#13;&#10;             , D01.ENTRADA_02  AS D01_ENTRADA_02&#13;&#10;             , D01.SAIDA_02    AS D01_SAIDA_02&#13;&#10;             , D01.ENTRADA_03  AS D01_ENTRADA_03&#13;&#10;             , D01.SAIDA_03    AS D01_SAIDA_03&#13;&#10;&#13;&#10;             , D02.ENTRADA_01  AS D02_ENTRADA_01&#13;&#10;             , D02.SAIDA_01    AS D02_SAIDA_01&#13;&#10;             , D02.ENTRADA_02  AS D02_ENTRADA_02&#13;&#10;             , D02.SAIDA_02    AS D02_SAIDA_02&#13;&#10;             , D02.ENTRADA_03  AS D02_ENTRADA_03&#13;&#10;             , D02.SAIDA_03    AS D02_SAIDA_03&#13;&#10;&#13;&#10;             , D03.ENTRADA_01  AS D03_ENTRADA_01&#13;&#10;             , D03.SAIDA_01    AS D03_SAIDA_01&#13;&#10;             , D03.ENTRADA_02  AS D03_ENTRADA_02&#13;&#10;             , D03.SAIDA_02    AS D03_SAIDA_02&#13;&#10;             , D03.ENTRADA_03  AS D03_ENTRADA_03&#13;&#10;             , D03.SAIDA_03    AS D03_SAIDA_03&#13;&#10;&#13;&#10;             , D04.ENTRADA_01  AS D04_ENTRADA_01&#13;&#10;             , D04.SAIDA_01    AS D04_SAIDA_01&#13;&#10;             , D04.ENTRADA_02  AS D04_ENTRADA_02&#13;&#10;             , D04.SAIDA_02    AS D04_SAIDA_02&#13;&#10;             , D04.ENTRADA_03  AS D04_ENTRADA_03&#13;&#10;             , D04.SAIDA_03    AS D04_SAIDA_03&#13;&#10;&#13;&#10;             , D05.ENTRADA_01  AS D05_ENTRADA_01&#13;&#10;             , D05.SAIDA_01    AS D05_SAIDA_01&#13;&#10;             , D05.ENTRADA_02  AS D05_ENTRADA_02&#13;&#10;             , D05.SAIDA_02    AS D05_SAIDA_02&#13;&#10;             , D05.ENTRADA_03  AS D05_ENTRADA_03&#13;&#10;             , D05.SAIDA_03    AS D05_SAIDA_03&#13;&#10;&#13;&#10;             , D06.ENTRADA_01  AS D06_ENTRADA_01&#13;&#10;             , D06.SAIDA_01    AS D06_SAIDA_01&#13;&#10;             , D06.ENTRADA_02  AS D06_ENTRADA_02&#13;&#10;             , D06.SAIDA_02    AS D06_SAIDA_02&#13;&#10;             , D06.ENTRADA_03  AS D06_ENTRADA_03&#13;&#10;             , D06.SAIDA_03    AS D06_SAIDA_03&#13;&#10;&#13;&#10;             , D07.ENTRADA_01  AS D07_ENTRADA_01&#13;&#10;             , D07.SAIDA_01    AS D07_SAIDA_01&#13;&#10;             , D07.ENTRADA_02  AS D07_ENTRADA_02&#13;&#10;             , D07.SAIDA_02    AS D07_SAIDA_02&#13;&#10;             , D07.ENTRADA_03  AS D07_ENTRADA_03&#13;&#10;             , D07.SAIDA_03    AS D07_SAIDA_03&#13;&#10;&#13;&#10;             , CAST(DIV(D01.CARGA_HORARIA, 60) AS INTEGER) AS D01_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D02.CARGA_HORARIA, 60) AS INTEGER) AS D02_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D03.CARGA_HORARIA, 60) AS INTEGER) AS D03_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D04.CARGA_HORARIA, 60) AS INTEGER) AS D04_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D05.CARGA_HORARIA, 60) AS INTEGER) AS D05_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D06.CARGA_HORARIA, 60) AS INTEGER) AS D06_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D07.CARGA_HORARIA, 60) AS INTEGER) AS D07_CARGA_HORARIA&#13;&#10;&#13;&#10;             , CAST(MOD(D01.CARGA_HORARIA, 60) AS INTEGER) AS D01_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D02.CARGA_HORARIA, 60) AS INTEGER) AS D02_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D03.CARGA_HORARIA, 60) AS INTEGER) AS D03_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D04.CARGA_HORARIA, 60) AS INTEGER) AS D04_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D05.CARGA_HORARIA, 60) AS INTEGER) AS D05_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D06.CARGA_HORARIA, 60) AS INTEGER) AS D06_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D07.CARGA_HORARIA, 60) AS INTEGER) AS D07_CARGA_HORARIA_MIN&#13;&#10;&#13;&#10;             , TCG.ID_TP_CARGA_HORARIA&#13;&#10;             , TCG.DS_TP_CARGA_HORARIA&#13;&#10;          FROM GPE_HORARIO_CONTRATUAL_VIEW  HOR&#13;&#10;               LEFT JOIN GPE_HORARIO            D01 ON D01.ID_HORARIO           = HOR.ID_HORARIO_01&#13;&#10;               LEFT JOIN GPE_HORARIO            D02 ON D02.ID_HORARIO           = HOR.ID_HORARIO_02&#13;&#10;               LEFT JOIN GPE_HORARIO            D03 ON D03.ID_HORARIO           = HOR.ID_HORARIO_03&#13;&#10;               LEFT JOIN GPE_HORARIO            D04 ON D04.ID_HORARIO           = HOR.ID_HORARIO_04&#13;&#10;               LEFT JOIN GPE_HORARIO            D05 ON D05.ID_HORARIO           = HOR.ID_HORARIO_05&#13;&#10;               LEFT JOIN GPE_HORARIO            D06 ON D06.ID_HORARIO           = HOR.ID_HORARIO_06&#13;&#10;               LEFT JOIN GPE_HORARIO            D07 ON D07.ID_HORARIO           = HOR.ID_HORARIO_07&#13;&#10;               LEFT JOIN GPE_TP_CARGA_HORARIA   TCG ON TCG.ID_TP_CARGA_HORARIA  = D01.ID_TP_CARGA_HORARIA&#13;&#10;         WHERE HOR.ID_HORARIO_CONTRATUAL = :ID_HORARIO_CONTRATUAL&#13;&#10;       ) AA1, SIS_SEQUENCIA SEQ&#13;&#10; WHERE SEQ.ID_SEQUENCIA &lt;= CASE WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 THEN 7&#13;&#10;                                WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 2 THEN 4&#13;&#10;                                WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN 1&#13;&#10;                           ELSE 0 END&#13;&#10; ORDER BY&#13;&#10;       SEQ.ID_SEQUENCIA">
        <Column Name="id_horario_contratual" DataType="System.Int32"/>
        <Column Name="id_tp_horario_contratual" DataType="System.Int32"/>
        <Column Name="sequencia" DataType="System.Int32"/>
        <Column Name="ds_dia" DataType="System.String"/>
        <Column Name="entrada_01" DataType="System.String"/>
        <Column Name="saida_01" DataType="System.String"/>
        <Column Name="entrada_02" DataType="System.String"/>
        <Column Name="saida_02" DataType="System.String"/>
        <Column Name="entrada_03" DataType="System.String"/>
        <Column Name="saida_03" DataType="System.String"/>
        <Column Name="id_tp_carga_horaria" DataType="System.Int32"/>
        <Column Name="ds_tp_carga_horaria" DataType="System.String"/>
        <Column Name="carga_horaria" DataType="System.String"/>
        <CommandParameter Name="ID_HORARIO_CONTRATUAL" DataType="9" Expression="[SqlFuncionario.id_horario_contratual]"/>
      </TableDataSource>
      <TableDataSource Name="Table3" Alias="SqlAM" DataType="System.Int32" Enabled="true" SelectCommand="SELECT COUNT(1) AS QTD_AM&#13;&#10;  FROM (SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 4 -- AM&#13;&#10;         AND B.INTEGRADO_RH   = 0&#13;&#10;&#13;&#10;       UNION&#13;&#10;&#13;&#10;      SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 4 -- AM&#13;&#10;         AND B.INTEGRADO_RH      = 1&#13;&#10;) A1">
        <Column Name="qtd_am" DataType="System.Int64"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" Expression="[SqlFuncionario.id_funcionario]"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
      </TableDataSource>
      <TableDataSource Name="Table4" Alias="SqlHP" DataType="System.Int32" Enabled="true" SelectCommand="SELECT COUNT(1) AS QTD_HP&#13;&#10;  FROM (SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 5 -- HP&#13;&#10;         AND B.INTEGRADO_RH   = 0&#13;&#10;&#13;&#10;       UNION&#13;&#10;&#13;&#10;      SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 5 -- HP&#13;&#10;         AND B.INTEGRADO_RH      = 1&#13;&#10;) A1">
        <Column Name="qtd_hp" DataType="System.Int64"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" Expression="[SqlFuncionario.id_funcionario]"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
      </TableDataSource>
      <TableDataSource Name="Table5" Alias="SqlOutrosRegistros" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A1.DT_HR_REGISTRO&#13;&#10;     , CAST(CASE WHEN A1.ID_TP_REGISTRO = 2  THEN '*' || A1.HR_REGISTRO   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 3  THEN '^' || A1.HR_REGISTRO   -- PRE ASSINALADO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A1.HR_REGISTRO&#13;&#10;        END AS VARCHAR(10)) AS HR_REGISTRO&#13;&#10;&#13;&#10;      , CAST(CASE WHEN A1.DT_HR_REGISTRO IS NOT NULL AND DATE_TRUNC('day', A1.DT_HR_REGISTRO) &lt;&gt; :DT_PONTO THEN CAST(CASE WHEN :APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;             CAST(DATE_PART('day', :DT_PONTO - DATE_TRUNC('day', A1.DT_HR_REGISTRO)) AS VARCHAR(10)) &#13;&#10;             END AS VARCHAR(10)) AS HR_REGISTRO_DIA&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT A.DT_HR_REGISTRO&#13;&#10;             , CAST(LPAD(CAST(UDF_HOUR(A.DT_HR_REGISTRO)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                    LPAD(CAST(UDF_MINUTE(A.DT_HR_REGISTRO) AS VARCHAR(2)), 2, '0') AS VARCHAR(5)) AS HR_REGISTRO&#13;&#10;             , A.ID_TP_REGISTRO&#13;&#10;          FROM GPE_PONTO_REGISTRADO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;           AND A.DT_REFERENCIA  = :DT_PONTO&#13;&#10;           AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;           AND B.INTEGRADO_RH   = 0&#13;&#10;         UNION&#13;&#10;        SELECT A.DT_HR_REGISTRO&#13;&#10;             , CAST(LPAD(CAST(EXTRACT(HOUR FROM A.DT_HR_REGISTRO)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                    LPAD(CAST(EXTRACT(MINUTE FROM A.DT_HR_REGISTRO) AS VARCHAR(2)), 2, '0') AS VARCHAR(5)) AS HR_REGISTRO&#13;&#10;             , A.ID_TP_REGISTRO&#13;&#10;          FROM GPE_PONTO_REGISTRADO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;           AND A.DT_REFERENCIA     = :DT_PONTO&#13;&#10;           AND A.ID_TP_MARCACAO   &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;           AND B.INTEGRADO_RH      = 1&#13;&#10;         ORDER BY&#13;&#10;               1&#13;&#10;       ) A1&#13;&#10; UNION ALL&#13;&#10;/* SEMPRE RETORNAR MULTIPLOS DE 4 */&#13;&#10;SELECT make_date(2100, 12, 31)   AS DT_HR_REGISTRO&#13;&#10;     , CAST('' AS VARCHAR(10) )  AS HR_REGISTRO&#13;&#10;     , CAST(NULL AS VARCHAR(2) ) AS HR_REGISTRO_DIA&#13;&#10;  FROM SIS_SEQUENCIA S&#13;&#10; WHERE S.ID_SEQUENCIA &lt;= 8 - ( SELECT CASE WHEN MOD(SUM(QT.QTDE), 8) = 0 THEN 8 ELSE MOD(SUM(QT.QTDE), 8) END&#13;&#10;                                 FROM (&#13;&#10;                                        SELECT COUNT(1) AS QTDE&#13;&#10;                                          FROM GPE_PONTO_REGISTRADO A&#13;&#10;                                               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;                                         WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;                                           AND A.DT_REFERENCIA  = :DT_PONTO&#13;&#10;                                           AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;                                           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;                                            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;                                           AND B.INTEGRADO_RH   = 0&#13;&#10;                                         UNION&#13;&#10;                                        SELECT COUNT(1) AS QTDE&#13;&#10;                                          FROM GPE_PONTO_REGISTRADO A&#13;&#10;                                               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;                                         WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;                                           AND A.DT_REFERENCIA     = :DT_PONTO&#13;&#10;                                           AND A.ID_TP_MARCACAO   &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;                                           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;                                            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;                                           AND B.INTEGRADO_RH      = 1&#13;&#10;                                      ) QT&#13;&#10;                             )&#13;&#10; ORDER BY 1&#13;&#10; --OFFSET 4&#13;&#10;LIMIT 1&#13;&#10;&#13;&#10;">
        <Column Name="dt_hr_registro" DataType="System.DateTime"/>
        <Column Name="hr_registro" DataType="System.String"/>
        <Column Name="hr_registro_dia" DataType="System.String"/>
        <CommandParameter Name="DT_PONTO" DataType="7" Expression="[SqlPonto.dt_ponto]"/>
        <CommandParameter Name="APURACAO_DIA_SEGUINTE" DataType="9" Expression="[SqlPonto.apuracao_dia_seguinte]"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" Expression="[SqlPonto.id_funcionario]"/>
        <CommandParameter Name="EXIBIR_INTERVALO_PRE_ASSINALADO" DataType="18" Expression="[SqlPonto.exibir_intervalo_pre_assinalado]"/>
      </TableDataSource>
      <TableDataSource Name="Table6" Alias="SqlJustificativaObservacao" DataType="System.Int32" Enabled="true" SelectCommand="SELECT B1.DT_PONTO&#13;&#10;     , CASE EXTRACT(DOW FROM B1.DT_PONTO)&#13;&#10;           WHEN 0 THEN 'dom'&#13;&#10;           WHEN 1 THEN 'seg'&#13;&#10;           WHEN 2 THEN 'ter'&#13;&#10;           WHEN 3 THEN 'qua'&#13;&#10;           WHEN 4 THEN 'qui'&#13;&#10;           WHEN 5 THEN 'sex'&#13;&#10;           WHEN 6 THEN 'sáb'&#13;&#10;       END AS DIA_SEMANA&#13;&#10;&#13;&#10;     , (&#13;&#10;         CASE WHEN B1.OBS_TP_DIA_PONTO IS NOT NULL&#13;&#10;              THEN B1.OBS_TP_DIA_PONTO ||&#13;&#10;                   CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;              ELSE '' END ||&#13;&#10;&#13;&#10;         CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL&#13;&#10;              THEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) ||&#13;&#10;                   CASE WHEN D1.OBS IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;              ELSE '' END ||&#13;&#10;&#13;&#10;         CASE WHEN D1.OBS IS NOT NULL THEN D1.OBS ELSE '' END&#13;&#10;       ) AS OBS&#13;&#10;&#13;&#10;     , B1.OBS_TP_DIA_PONTO&#13;&#10;     , B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP&#13;&#10;     , CAST(:ID_FUNCIONARIO AS INTEGER) AS ID_FUNCIONARIO&#13;&#10;&#13;&#10;FROM (&#13;&#10;        SELECT A.ID_PERIODO_APURACAO&#13;&#10;             , C.INTEGRADO_RH&#13;&#10;          FROM GPE_PERIODO_APURACAO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO&#13;&#10;     ) A1&#13;&#10;&#13;&#10;LEFT JOIN GPE_APURACAO X1 ON X1.ID_PERIODO_APURACAO = A1.ID_PERIODO_APURACAO&#13;&#10;                          AND X1.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;                          AND 1 &lt;&gt; A1.INTEGRADO_RH&#13;&#10;&#13;&#10;LEFT JOIN GPE_APURACAO X2 ON X2.ID_PERIODO_APURACAO = A1.ID_PERIODO_APURACAO&#13;&#10;                          AND X2.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;                          AND 1 = A1.INTEGRADO_RH&#13;&#10;&#13;&#10;LEFT JOIN GPE_APURACAO B1 ON B1.ID_APURACAO = COALESCE(X1.ID_APURACAO, X2.ID_APURACAO)&#13;&#10;&#13;&#10;LEFT JOIN GPE_APURACAO_USUARIO Z1 ON Z1.ID_FUNCIONARIO = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                  AND Z1.DT_PONTO = B1.DT_PONTO&#13;&#10;                                  AND Z1.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                  AND 1 &lt;&gt; A1.INTEGRADO_RH&#13;&#10;&#13;&#10;LEFT JOIN GPE_APURACAO_USUARIO Z2 ON Z2.ID_FUNCIONARIO_RH = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                  AND Z2.DT_PONTO = B1.DT_PONTO&#13;&#10;                                  AND Z2.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                  AND 1 = A1.INTEGRADO_RH&#13;&#10;&#13;&#10;LEFT JOIN GPE_APURACAO_USUARIO D1 ON D1.ID_APURACAO_USUARIO = COALESCE(Z1.ID_APURACAO_USUARIO, Z2.ID_APURACAO_USUARIO)&#13;&#10;                                  AND B1.ID_TP_DIA_PONTO &lt;&gt; 9&#13;&#10;&#13;&#10;WHERE NULLIF(TRIM(&#13;&#10;          CASE WHEN B1.OBS_TP_DIA_PONTO IS NOT NULL&#13;&#10;               THEN B1.OBS_TP_DIA_PONTO ||&#13;&#10;                    CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;               ELSE '' END ||&#13;&#10;&#13;&#10;          CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL&#13;&#10;               THEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) ||&#13;&#10;                    CASE WHEN D1.OBS IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;               ELSE '' END ||&#13;&#10;&#13;&#10;          CASE WHEN D1.OBS IS NOT NULL THEN D1.OBS ELSE '' END&#13;&#10;), '') IS NOT NULL&#13;&#10;&#13;&#10;ORDER BY B1.DT_PONTO;">
        <Column Name="dt_ponto" DataType="System.DateTime"/>
        <Column Name="dia_semana" DataType="System.String"/>
        <Column Name="obs" DataType="System.String"/>
        <Column Name="obs_tp_dia_ponto" DataType="System.String"/>
        <Column Name="obs_falta_atraso_saida_antecip" DataType="System.String"/>
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <CommandParameter Name="ID_FUNCIONARIO" DataType="9" Expression="[SqlFuncionario.id_funcionario]"/>
        <CommandParameter Name="ID_PERIODO_APURACAO" DataType="9" Expression="[idPeriodoApuracao]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Relatório de Pontos registrados&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="47"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
    <Parameter Name="idPeriodoApuracao" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="lineBndPonto" DataType="System.Int64" Expression="0"/>
    <Parameter Name="dbms" DataType="System.Int64" AsString=""/>
    <Parameter Name="colorirTipoDia" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimeJustificativa" DataType="System.Int64" Expression="0"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
  </Dictionary>
  <inherited Name="MainPage">
    <inherited Name="BndCabecalho" Top="0" CanGrow="true">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="BndFiltro" Top="98.67">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <GroupHeaderBand Name="grpFuncionario" ZOrder="0" Top="121.73" Width="718.2" Height="40.14" Condition="[SqlFuncionario.id_funcionario]">
      <TextObject Name="Text1" Top="8.9" Width="69.93" Height="15.12" Border.Lines="Bottom" Border.Color="White" Fill.Color="41, 82, 118" Text="Entidade:" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White"/>
      <TextObject Name="Text2" Left="69.93" Top="8.9" Width="468.34" Height="15.12" Border.Lines="Bottom" Border.Color="White" Fill.Color="41, 82, 118" Text="&lt;b&gt;[SqlFuncionario.ds_entidade]&lt;/b&gt;         CNPJ:[SqlFuncionario.doc_entidade]" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White" TextRenderType="HtmlTags"/>
      <TextObject Name="Text3" Left="538.27" Top="8.9" Width="179.93" Height="15.12" Border.Lines="Bottom" Border.Color="White" Fill.Color="41, 82, 118" Text="Período: &lt;b&gt;[SqlFuncionario.dt_inicial]&lt;/b&gt;  a &lt;b&gt;[SqlFuncionario.dt_final]&lt;/B&gt;" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextFill.Color="White" TextRenderType="HtmlTags">
        <Formats>
          <DateFormat Format="dd/MM/yyyy"/>
          <DateFormat Format="dd/MM/yyyy"/>
        </Formats>
      </TextObject>
      <TextObject Name="Text4" Top="24.47" Width="69.93" Height="15.12" Border.Lines="Top" Border.Color="White" Fill.Color="41, 82, 118" Text="Funcionário:" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White"/>
      <TextObject Name="Text5" Left="69.93" Top="24.42" Width="648.27" Height="15.12" Border.Lines="Top" Border.Color="White" Fill.Color="41, 82, 118" Text="[SqlFuncionario.matricula] | &lt;b&gt;[SqlFuncionario.nome]&lt;/b&gt;" VertAlign="Center" Font="Tahoma, 7pt" TextFill.Color="White" TextRenderType="HtmlTags"/>
      <GroupHeaderBand Name="grpPonto" Top="166.04" Width="718.2" Height="116.05" Condition="[SqlFuncionario.id_funcionario]">
        <TextObject Name="Text6" Top="0.76" Width="69.93" Height="15.88" Border.Lines="Left, Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="CPF:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text7" Top="17.01" Width="69.93" Height="15.88" Border.Lines="Left, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Cargo:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text8" Top="32.89" Width="69.93" Height="15.88" Border.Lines="Left, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Loc.Trabalho:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text9" Top="49.14" Width="69.93" Height="15.88" Border.Lines="Left, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Área apuração:" VertAlign="Center" Font="Tahoma, 6.8pt"/>
        <TextObject Name="Text10" Top="65.02" Width="69.93" Height="15.88" Border.Lines="Left, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Horário:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text11" Left="69.93" Top="0.76" Width="100.17" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.cpf]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text12" Left="69.93" Top="17.01" Width="185.98" Height="15.88" Border.Lines="Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.cargo]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text13" Left="69.93" Top="32.89" Width="410.13" Height="15.88" Border.Lines="Right, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.ds_local_trabalho]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text14" Left="69.93" Top="49.14" Width="410.13" Height="15.88" Border.Lines="Right, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.ds_area_apuracao]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text15" Left="69.93" Top="65.02" Width="410.13" Height="15.88" Border.Lines="Right, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.cd_horario_contratual] - [SqlFuncionario.ds_horario_contratual]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text18" Left="255.91" Top="17.01" Width="40.07" Height="15.88" Border.Lines="Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Função:" VertAlign="Center" Font="Tahoma, 6.75pt"/>
        <TextObject Name="Text19" Left="295.97" Top="17.01" Width="184.09" Height="15.88" Border.Lines="Right, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.funcao]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text20" Top="86.18" Width="94.5" Height="29.86" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Dia" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text21" Left="94.5" Top="86.18" Width="170.1" Height="29.86" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Tipo" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text22" Left="264.6" Top="86.18" Width="453.6" Height="20.03" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Pontos Registrados" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text23" Left="264.6" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Entrada" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text24" Left="321.3" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Saída" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text25" Left="378" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Entrada" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text26" Left="434.7" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Saída" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text27" Left="491.4" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Entrada" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text28" Left="548.1" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Saída" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text29" Left="604.8" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Entrada" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <TextObject Name="Text30" Left="661.5" Top="106.22" Width="56.7" Height="9.83" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Saída" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
        <SubreportObject Name="repHorario" Left="488" Top="1.13" Width="230.2" Height="9.83" ReportPage="Page2" PrintOnParent="true"/>
        <TextObject Name="Text17" Left="210.17" Top="0.76" Width="269.89" Height="15.88" Border.Lines="Right, Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="[SqlFuncionario.pis]" VertAlign="Center" Font="Tahoma, 7pt"/>
        <TextObject Name="Text16" Left="170.1" Top="0.76" Width="40.07" Height="15.88" Border.Lines="Top, Bottom" Border.Color="199, 199, 199" Fill.Color="ButtonFace" Text="Nº PIS:" VertAlign="Center" Font="Tahoma, 7pt"/>
        <DataBand Name="mdtFuncionario" Top="290.42" Width="718.2" BeforePrintEvent="mdtFuncionario_BeforePrint" DataSource="Table">
          <DataHeaderBand Name="cabLegenda" Top="286.26" Width="718.2"/>
          <DataBand Name="bndPonto" Top="294.59" Width="718.2" Height="12.85" BeforePrintEvent="bndPonto_BeforePrint" DataSource="Table1" PrintIfDetailEmpty="true" PrintIfDatasourceEmpty="true">
            <TextObject Name="Text31" Width="94.5" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="&lt;b&gt;[SqlPonto.dt_ponto]&lt;/b&gt; - [SqlPonto.dia_semana]" VertAlign="Center" Font="Tahoma, 7pt, style=Bold" TextRenderType="HtmlTags">
              <Formats>
                <CustomFormat Format="dd/MM"/>
                <GeneralFormat/>
              </Formats>
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text32" Left="94.5" Width="170.1" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.ds_tp_dia_ponto]" VertAlign="Center" Font="Tahoma, 7pt">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text33" Left="264.6" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.entrada_01]&lt;sup&gt;[SqlPonto.entrada_01_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text34" Left="321.3" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.saida_01]&lt;sup&gt;[SqlPonto.saida_01_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text35" Left="378" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.entrada_02]&lt;sup&gt;[SqlPonto.entrada_02_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text36" Left="434.7" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.saida_02]&lt;sup&gt;[SqlPonto.saida_02_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text37" Left="491.4" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.entrada_03]&lt;sup&gt;[SqlPonto.entrada_03_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text38" Left="548.1" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.saida_03]&lt;sup&gt;[SqlPonto.saida_03_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text39" Left="604.8" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.entrada_04]&lt;sup&gt;[SqlPonto.entrada_04_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text40" Left="661.5" Width="56.7" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlPonto.saida_04]&lt;sup&gt;[SqlPonto.saida_04_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags">
              <Highlight>
                <Condition Expression="[Row#]%2 != 0" Fill.Color="Control" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <ChildBand Name="bndOutrosRegistros" Top="311.61" Width="718.2" Height="12.85" CanGrow="true" BeforePrintEvent="bndOutrosRegistros_BeforePrint" PrintIfDatabandEmpty="true">
              <TextObject Name="memDiaOutrosRegistros" Width="94.5" Height="12.85" Border.Lines="Right" Border.Color="199, 199, 199" Border.Width="0.5" VertAlign="Center" Font="Tahoma, 7pt"/>
              <SubreportObject Name="repOutrosRegistros" Left="264.6" Width="453.6" Height="12.85" ReportPage="Page1"/>
              <TextObject Name="memTipoDiaOutrosRegistros" Left="94.5" Width="170.1" Height="12.85" Border.Lines="Left, Right" Border.Color="199, 199, 199" Font="Arial, 10pt"/>
            </ChildBand>
            <DataFooterBand Name="ftrLegenda" Top="328.62" Width="718.2" Height="14.83" Border.Lines="Top" Border.Color="199, 199, 199" Border.Width="0.5" CanGrow="true" KeepWithData="true">
              <TextObject Name="Text42" Top="3" Width="100.17" Height="9.83" Border.Color="Transparent" Border.Width="0.5" Text="[&quot;[*]&quot;] - Lançado Manualmente" VertAlign="Center" Font="Tahoma, 5pt"/>
              <TextObject Name="Text43" Left="100.17" Top="3" Width="80.14" Height="9.83" Border.Color="Transparent" Border.Width="0.5" Text="[&quot;[^]&quot;] - Pré Assinalado" VertAlign="Center" Font="Tahoma, 5pt"/>
              <TextObject Name="Text44" Left="179.93" Top="3" Width="120.2" Height="9.83" Border.Color="Transparent" Border.Width="0.5" Text="[&quot;[A.M.]&quot;] - Ausência de Marcação [IIf([SqlAM.qtd_am] == 0 , &quot; &quot;, IIf([SqlAM.qtd_am] == 1 , &quot;(1 registro)&quot;, &quot;(&quot; + ([SqlAM.qtd_am]) + &quot; registros)&quot;))]" VertAlign="Center" Font="Tahoma, 5pt"/>
              <TextObject Name="Text45" Left="300.13" Top="3" Width="120.2" Height="9.83" Border.Color="Transparent" Border.Width="0.5" Text="[&quot;[H.P.]&quot;] - Horário Padrão [IIf([SqlHP.qtd_hp] == 0 , &quot; &quot;, IIf([SqlHP.qtd_hp] == 1 , &quot;(1 registro)&quot;, &quot;(&quot; + ([SqlHP.qtd_hp]) + &quot; registros)&quot;))]          " VertAlign="Center" Font="Tahoma, 5pt"/>
            </DataFooterBand>
          </DataBand>
          <GroupHeaderBand Name="grpJustificativaObservacao" Top="347.62" Width="718.2" Height="12.1" BeforePrintEvent="bndJustificativaObservacao_BeforePrint" Condition="[SqlJustificativaObservacao.id_funcionario]">
            <TextObject Name="Text46" Width="55.19" Height="12.1" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Dia" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <TextObject Name="Text47" Left="55.19" Width="663.01" Height="12.1" Border.Lines="All" Border.Color="199, 199, 199" Border.Width="0.5" Fill.Color="ButtonFace" Text="Justificativa e Observações" VertAlign="Center" Font="Tahoma, 6pt, style=Bold"/>
            <DataBand Name="bndJustificativaObservacao" Top="363.89" Width="718.2" Height="12.1" Border.Lines="Right" Border.Color="199, 199, 199" BeforePrintEvent="bndJustificativaObservacao_BeforePrint" DataSource="Table6">
              <TextObject Name="Text48" Width="55.19" Height="12.1" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" CanGrow="true" Text="&lt;b&gt;[SqlJustificativaObservacao.dt_ponto]&lt;/b&gt; - [SqlJustificativaObservacao.dia_semana]" Font="Tahoma, 6pt" TextRenderType="HtmlTags">
                <Formats>
                  <CustomFormat Format="dd/MM"/>
                  <GeneralFormat/>
                </Formats>
              </TextObject>
              <TextObject Name="Text49" Left="55.19" Width="663.01" Height="12.1" Border.Color="199, 199, 199" Border.Width="0.5" CanGrow="true" Text="[SqlJustificativaObservacao.obs]" Font="Tahoma, 6pt" TextRenderType="HtmlTags"/>
            </DataBand>
            <GroupFooterBand Name="grfJustificativaObservacao" Top="380.15" Width="718.2" Height="9.45" BeforePrintEvent="bndJustificativaObservacao_BeforePrint">
              <LineObject Name="Line2" Width="718.2" Border.Color="199, 199, 199" Border.Width="0.5"/>
            </GroupFooterBand>
          </GroupHeaderBand>
        </DataBand>
        <GroupFooterBand Name="grfPonto" Top="393.77" Width="718.2"/>
      </GroupHeaderBand>
      <GroupFooterBand Name="grfFuncionario" Top="397.94" Width="718.2"/>
    </GroupHeaderBand>
    <inherited Name="BndRodape" Top="402.1">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
  <ReportPage Name="Page1" ZOrder="1" PaperWidth="50" Watermark.Font="Arial, 60pt">
    <DataBand Name="Data1" Width="32.89" Height="12.85" DataSource="Table5" Columns.Count="4" Columns.Width="32.89">
      <TextObject Name="SqlOutrosPeriodosDT_HR_REGISTRO" Width="28.35" Height="12.85" Border.Color="Transparent" Border.Width="0.5" Text="[SqlOutrosRegistros.hr_registro]&lt;sup&gt;[SqlOutrosRegistros.hr_registro_dia]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 7pt" TextRenderType="HtmlTags"/>
    </DataBand>
  </ReportPage>
  <ReportPage Name="Page2" ZOrder="2" PaperWidth="85" PaperHeight="211.7" Watermark.Font="Arial, 60pt">
    <DataBand Name="mdtHorarioContratual" Top="24.78" Width="245.7" Height="9.83" CanGrow="true" BeforePrintEvent="mdtHorarioContratual_BeforePrint" DataSource="Table2" PrintIfDetailEmpty="true" PrintIfDatasourceEmpty="true">
      <TextObject Name="SqlHorarioContratualDS_DIA" Width="50.65" Height="9.83" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlHorarioContratual.ds_dia]" Font="Tahoma, 5pt"/>
      <TextObject Name="SqlHorarioContratualENTRADA_01" Left="50.65" Width="29.86" Height="9.83" Border.Color="White" Border.Width="0.5" Text="[SqlHorarioContratual.entrada_01]" HorzAlign="Center" Font="Tahoma, 5pt"/>
      <TextObject Name="Text61" Left="80.51" Width="30.24" Height="9.83" Border.Color="White" Border.Width="0.5" Text="[SqlHorarioContratual.saida_01]" HorzAlign="Center" Font="Tahoma, 5pt"/>
      <TextObject Name="Text62" Left="110.75" Width="29.86" Height="9.83" Border.Color="White" Border.Width="0.5" Text="[SqlHorarioContratual.entrada_02]" HorzAlign="Center" Font="Tahoma, 5pt"/>
      <TextObject Name="Text63" Left="140.62" Width="29.86" Height="9.83" Border.Color="White" Border.Width="0.5" Text="[SqlHorarioContratual.saida_02]" HorzAlign="Center" Font="Tahoma, 5pt"/>
      <TextObject Name="Text64" Left="170.48" Width="29.86" Height="9.83" Border.Color="White" Border.Width="0.5" Text="[SqlHorarioContratual.entrada_03]" HorzAlign="Center" WordWrap="false" Font="Tahoma, 5pt"/>
      <TextObject Name="Text65" Left="200.34" Width="29.86" Height="9.83" Border.Lines="Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlHorarioContratual.saida_03]" HorzAlign="Center" WordWrap="false" Font="Tahoma, 5pt"/>
      <ChildBand Name="bndHorarioContratualCargaHoraria" Top="37.17" Width="245.7" Height="9.83" BeforePrintEvent="bndHorarioContratualCargaHoraria_BeforePrint">
        <TextObject Name="Text66" Width="170.1" Height="9.83" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlHorarioContratual.ds_tp_carga_horaria]" Font="Tahoma, 5pt"/>
        <TextObject Name="Text67" Left="170.1" Width="60.1" Height="9.83" Border.Lines="Left, Right" Border.Color="199, 199, 199" Border.Width="0.5" Text="[SqlHorarioContratual.carga_horaria] Hrs." WordWrap="false" Font="Tahoma, 5pt"/>
      </ChildBand>
      <DataHeaderBand Name="cabHorario" Width="245.7" Height="9.83" BeforePrintEvent="cabHorario_BeforePrint">
        <TextObject Name="Text50" Width="50.65" Height="9.83" Border.Lines="All" Border.LeftLine.Color="149, 149, 149" Border.LeftLine.Width="0.5" Border.TopLine.Color="White" Border.TopLine.Width="0.5" Border.RightLine.Color="White" Border.RightLine.Width="0.5" Border.BottomLine.Color="White" Border.BottomLine.Width="0.5" Fill.Color="149, 149, 149" Font="Tahoma, 6pt"/>
        <TextObject Name="Text51" Left="50.65" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Border.Width="0.5" Fill.Color="149, 149, 149" Text="ENT 1" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text52" Left="80.51" Width="30.24" Height="9.83" Border.Lines="All" Border.Color="White" Border.Width="0.5" Fill.Color="149, 149, 149" Text="SAI 1" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text53" Left="110.75" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Border.Width="0.5" Fill.Color="149, 149, 149" Text="ENT 2" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text54" Left="140.62" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Border.Width="0.5" Fill.Color="149, 149, 149" Text="SAI 2" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text55" Left="170.48" Width="29.86" Height="9.83" Border.Lines="All" Border.Color="White" Border.Width="0.5" Fill.Color="149, 149, 149" Text="ENT 3" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text56" Left="200.34" Width="29.86" Height="9.83" Border.Lines="All" Border.LeftLine.Color="White" Border.LeftLine.Width="0.5" Border.TopLine.Color="White" Border.TopLine.Width="0.5" Border.RightLine.Color="149, 149, 149" Border.RightLine.Width="0.5" Border.BottomLine.Color="White" Border.BottomLine.Width="0.5" Fill.Color="149, 149, 149" Text="SAI 3" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold" TextFill.Color="White"/>
        <ChildBand Name="cabCargaHoraria" Top="12.39" Width="245.7" Height="9.83" BeforePrintEvent="cabCargaHoraria_BeforePrint">
          <TextObject Name="Text57" Width="170.48" Height="9.83" Border.Lines="Right, Top, Bottom" Border.LeftLine.Color="149, 149, 149" Border.LeftLine.Width="0.5" Border.TopLine.Color="White" Border.TopLine.Width="0.5" Border.RightLine.Color="White" Border.RightLine.Width="0.5" Border.BottomLine.Color="White" Border.BottomLine.Width="0.5" Fill.Color="149, 149, 149" Text="CARGA HORÁRIA" Font="Tahoma, 6pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text58" Left="170.48" Width="59.72" Height="9.83" Border.Lines="All" Border.LeftLine.Color="149, 149, 149" Border.LeftLine.Width="0.5" Border.TopLine.Color="White" Border.TopLine.Width="0.5" Border.RightLine.Color="149, 149, 149" Border.RightLine.Width="0.5" Border.BottomLine.Color="White" Border.BottomLine.Width="0.5" Fill.Color="149, 149, 149" Text="HORAS" HorzAlign="Center" Font="Tahoma, 6pt, style=Bold" TextFill.Color="White"/>
        </ChildBand>
      </DataHeaderBand>
      <DataFooterBand Name="ftrHorario" Top="49.56" Width="245.7" BeforePrintEvent="ftrHorario_BeforePrint" Guides="0">
        <LineObject Name="Line4" Width="230.2" Border.Color="199, 199, 199" Border.Width="0.5"/>
        <ChildBand Name="ftrCargaHoraria" Top="52.12" Width="245.7" Height="1" BeforePrintEvent="ftrCargaHoraria_BeforePrint">
          <LineObject Name="Line3" Width="230.2" Border.Color="199, 199, 199" Border.Width="0.5"/>
        </ChildBand>
      </DataFooterBand>
    </DataBand>
  </ReportPage>
</inherited>
