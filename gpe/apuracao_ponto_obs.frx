<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="C:\NOTEBKP\gsr-reports\base\paisagem.frx" BaseReportAbsolutePath="C:\NOTEBKP\gsr-reports\base\paisagem.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="08/06/2025 13:24:19" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
    
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }    
    
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }   
      
    //=============================================================================================================================
    
    private void mdtFuncionario_BeforePrint(object sender, EventArgs e)
    {
      // Referência ao próprio relatório
      Report report = Report;
     
      // Acessa a base SqlFuncionario para
      TableDataSource SqlFuncionario = report.GetDataSource(&quot;SqlFuncionario&quot;) as TableDataSource;

      // Acessa as fontes de dados SqlPonto
      TableDataSource SqlPonto = report.GetDataSource(&quot;SqlPonto&quot;) as TableDataSource;    
      SqlPonto.Parameters.FindByName(&quot;id_funcionario&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);  
      
      (SqlPonto as DataSourceBase).Init();      
      
      // Acessa as fontes de dados SqlAM
      TableDataSource SqlAM = report.GetDataSource(&quot;SqlAM&quot;) as TableDataSource;    
      SqlAM.Parameters.FindByName(&quot;id_funcionario&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);  
      
      (SqlAM as DataSourceBase).Init();
     
      // Acessa as fontes de dados SqlHP
      TableDataSource SqlHP = report.GetDataSource(&quot;SqlHP&quot;) as TableDataSource;
      SqlHP.Parameters.FindByName(&quot;id_funcionario&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);  
      
      (SqlHP as DataSourceBase).Init(); 
    }
    
    //==========================================================================================================================//
   
    private void cabHorario_BeforePrint(object sender, EventArgs e)
    {  // Obtém o valor da coluna ID_TP_HORARIO_CONTRATUAL
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));

      // Torna visível se estiver entre 1 ou 2
      cabHorario.Visible = (tipoHorario == 1 || tipoHorario == 2);
      
    } 
    
    //==========================================================================================================================//
   
    private void cabCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      // Obtém o valor da coluna ID_TP_HORARIO_CONTRATUAL
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));

      // Torna visível se estiver igual a 3
      cabCargaHoraria.Visible = (tipoHorario == 3); 
    }
           
    //==========================================================================================================================//
  
    private void mdtHorarioContratual_BeforePrint(object sender, EventArgs e)
    {
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));
      
      mdtHorarioContratual.Visible = (tipoHorario == 1 || tipoHorario == 2); 
    }  
    
    //==========================================================================================================================//
  
    private void bndHorarioContratualCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_horario_contratual&quot;));
      
      bndHorarioContratualCargaHoraria.Visible = (tipoHorario == 3);
    }
    
    //==========================================================================================================================//
   

    private void ftrHorario_BeforePrint(object sender, EventArgs e)
    {
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));
      
      ftrHorario.Visible = (tipoHorario == 1 || tipoHorario == 2); 
    }
    
    //==========================================================================================================================//

    private void ftrCargaHoraria_BeforePrint(object sender, EventArgs e)
    {
      var tipoHorario = ((Int32)Report.GetColumnValue(&quot;SqlHorarioContratual.id_tp_horario_contratual&quot;));
      
      ftrCargaHoraria.Visible = (tipoHorario == 3);       
    }
    
    //==========================================================================================================================//
   
    private void bndPonto_BeforePrint(object sender, EventArgs e)
    {
            
      TextObject text64 = Report.FindObject(&quot;text64&quot;) as TextObject;
      TextObject text65 = Report.FindObject(&quot;text65&quot;) as TextObject;
      TextObject text66 = Report.FindObject(&quot;text66&quot;) as TextObject;
      TextObject text67 = Report.FindObject(&quot;text67&quot;) as TextObject;
      TextObject text68 = Report.FindObject(&quot;text68&quot;) as TextObject;
      TextObject text69 = Report.FindObject(&quot;text69&quot;) as TextObject;
      TextObject text45 = Report.FindObject(&quot;text45&quot;) as TextObject;
      TextObject text46 = Report.FindObject(&quot;text46&quot;) as TextObject;
      TextObject text47 = Report.FindObject(&quot;text47&quot;) as TextObject;
      TextObject text48 = Report.FindObject(&quot;text48&quot;) as TextObject;
      TextObject text49 = Report.FindObject(&quot;text49&quot;) as TextObject;
      TextObject text50 = Report.FindObject(&quot;text50&quot;) as TextObject;
      text64.Width = Text45.CalcWidth();
      text65.Width = text46.CalcWidth();
      text66.Width = text47.CalcWidth();
      text67.Width = text48.CalcWidth();
      text68.Width = text49.CalcWidth();
      text69.Width = text50.CalcWidth();

      //Text72.Left = 1000;
      
      // Referência ao próprio relatório
      Report report = Report;

      // Acessa as fontes de dados
      TableDataSource SqlPonto           = report.GetDataSource(&quot;SqlPonto&quot;)           as TableDataSource;
      TableDataSource SqlOutrosRegistros = report.GetDataSource(&quot;SqlOutrosRegistros&quot;) as TableDataSource;
      TableDataSource SqlFuncionario     = report.GetDataSource(&quot;SqlFuncionario&quot;)     as TableDataSource; // Adicione esta linha se existir uma fonte &quot;teste2&quot; 
      
      if (((Int32)Report.GetColumnValue(&quot;SqlPonto.tem_outros_registros&quot;)) == 1)
      {  
        SqlOutrosRegistros.Parameters.FindByName(&quot;id_funcionario&quot;).Value = Report.GetColumnValue(&quot;SqlFuncionario.id_funcionario&quot;);
        SqlOutrosRegistros.Parameters.FindByName(&quot;dt_ponto&quot;)      .Value = Report.GetColumnValue(&quot;SqlPonto.dt_ponto&quot;);
      } 
      else
      {
        SqlOutrosRegistros.Parameters.FindByName(&quot;id_funcionario&quot;).Value = -123;
        SqlOutrosRegistros.Parameters.FindByName(&quot;dt_ponto&quot;)      .Value = -123; 
      }
      (SqlOutrosRegistros as DataSourceBase).Init(); 
      
      if (((Int32)Report.GetParameterValue(&quot;colorirTipoDia&quot;)) == 1)
      {
        TextObject ponto1 = Report.FindObject(&quot;Text55&quot;) as TextObject;
        TextObject ponto2 = Report.FindObject(&quot;Text54&quot;) as TextObject;

        // Converte a string da cor para objeto Color
     /*   string corHex = Report.GetColumnValue(&quot;SqlPonto.COR&quot;).ToString();
        Color cor = ColorTranslator.FromOle(Convert.ToInt32(corHex));

        ponto1.FillColor = cor;
        ponto1.Highlight.Clear();

        ponto2.FillColor = cor;
        ponto2.Highlight.Clear();   */
      }

                           
      
      LineObject line = Report.FindObject(&quot;LineBndPonto&quot;) as LineObject;
      if (line != null)
        line.Visible = false;

      DataBand bndPonto = Report.FindObject(&quot;bndPonto&quot;) as DataBand;
      if (bndPonto != null)
      {
        int valor = Convert.ToInt32(Report.GetColumnValue(&quot;SqlPonto.APURACAO_CARGA_HORARIA&quot;));
        bndPonto.Visible = (valor == 0);
      }  
    }         
  
    
  //==========================================================================================================================// 
  
  private void bndApuracaoCargaHoraria_BeforePrint(object sender, EventArgs e)
  {
      TextObject text92 = Report.FindObject(&quot;text92&quot;) as TextObject;
      TextObject text93 = Report.FindObject(&quot;text93&quot;) as TextObject;
      TextObject text94 = Report.FindObject(&quot;text94&quot;) as TextObject;
      TextObject text95 = Report.FindObject(&quot;text95&quot;) as TextObject;
      TextObject text96 = Report.FindObject(&quot;text96&quot;) as TextObject;
      TextObject text97 = Report.FindObject(&quot;text97&quot;) as TextObject;
      TextObject text45 = Report.FindObject(&quot;text45&quot;) as TextObject;
      TextObject text46 = Report.FindObject(&quot;text46&quot;) as TextObject;
      TextObject text47 = Report.FindObject(&quot;text47&quot;) as TextObject;
      TextObject text48 = Report.FindObject(&quot;text48&quot;) as TextObject;
      TextObject text49 = Report.FindObject(&quot;text49&quot;) as TextObject;
      TextObject text50 = Report.FindObject(&quot;text50&quot;) as TextObject;
      Text92.Width = Text45.CalcWidth();
      text93.Width = text46.CalcWidth();
      text94.Width = text47.CalcWidth();
      text95.Width = text48.CalcWidth();
      text96.Width = text49.CalcWidth();
      text97.Width = text50.CalcWidth();
                                     
    Text100.Left = 1000;                     
    
    bndApuracaoCargaHoraria.Visible = ((Int16)Report.GetColumnValue(&quot;SqlPonto.APURACAO_CARGA_HORARIA&quot;)) == 1; 
  }
  
  //==========================================================================================================================//  
   
    private void bndOutrosRegistros_BeforePrint(object sender, EventArgs e)
    {
      // Referência ao próprio relatório
      Report report = Report;
      
      TableDataSource SqlOutrosRegistros = report.GetDataSource(&quot;SqlOutrosRegistros&quot;) as TableDataSource;
      // Torna o band visível conforme a condição
      bndOutrosRegistros.Visible = Convert.ToInt32(Report.GetVariableValue(&quot;SqlPonto.\&quot;TEM_OUTROS_REGISTROS\&quot;&quot;)) == 1;

      if (((Int32)Report.GetParameterValue(&quot;colorirTipoDia&quot;)) == 1)
      {
        TextObject ponto1 = Report.FindObject(&quot;memDiaOutrosRegistros&quot;) as TextObject;
        TextObject ponto2 = Report.FindObject(&quot;memTipoDiaOutrosRegistros&quot;) as TextObject;

        // Converte a string da cor para objeto Color
        string corHex = Report.GetColumnValue(&quot;SqlPonto.COR&quot;).ToString();
        Color cor = ColorTranslator.FromOle(Convert.ToInt32(corHex));

        ponto1.FillColor = cor;
        ponto1.Highlight.Clear();

        ponto2.FillColor = cor;
        ponto2.Highlight.Clear();
      }
      
      TextObject text79 = Report.FindObject(&quot;text79&quot;) as TextObject;
      TextObject text80 = Report.FindObject(&quot;text80&quot;) as TextObject;
      TextObject text81 = Report.FindObject(&quot;text81&quot;) as TextObject;
      TextObject text82 = Report.FindObject(&quot;text82&quot;) as TextObject;
      TextObject text83 = Report.FindObject(&quot;text83&quot;) as TextObject;
      TextObject text84 = Report.FindObject(&quot;text84&quot;) as TextObject;
      TextObject text85 = Report.FindObject(&quot;text85&quot;) as TextObject;
      TextObject text86 = Report.FindObject(&quot;text86&quot;) as TextObject;
      TextObject text87 = Report.FindObject(&quot;text87&quot;) as TextObject;
      
      text79.Left = Text78.Left + Text78.Width;
      text79.Width = Text107.CalcWidth();

      text80.Left = Text79.Left + Text79.Width;
      text80.Width = Text108.CalcWidth();

      text81.Left = Text80.Left + Text80.Width;
      text81.Width = Text109.CalcWidth();

      text82.Left = text81.Left + text81.Width;
      text82.Width = Text110.CalcWidth();

      text83.Left = text82.Left + text82.Width;
      text83.Width = Text111.CalcWidth();

      text84.Left = text83.Left + text83.Width;
      text84.Width = Text112.CalcWidth();

      text85.Left = text84.Left + text84.Width;
      text86.Left = text85.Left + text85.Width;

      text87.Left = text86.Left + text86.Width;
      text87.Width = bndOutrosRegistros.Width - text87.Left;
      
      int altura = 10 * (SqlOutrosRegistros.RowCount / 4);

      memDiaOutrosRegistros.Height = altura;
      memTipoDiaOutrosRegistros.Height = altura;
      Text75.Height = altura;
      Text76.Height = altura;
      Text77.Height = altura;
      Text78.Height = altura;
      Text79.Height = altura;
      Text80.Height = altura;
      Text81.Height = altura;
      Text82.Height = altura;
      Text83.Height = altura;
      Text84.Height = altura;
      Text85.Height = altura;
      Text86.Height = altura;
      Text87.Height = altura;        
      
    }
  //==========================================================================================================================//
  /* int altura = 10 * (SqlOutrosRegistros.RowCount / 4);
    
      //CODIGO ALTERADO PARA EFEITO DIRETO NO RELATORIO, NAO PRECISA!!!

memDiaOutrosRegistros.Height = altura;
memTipoDiaOutrosRegistros.Height = &quot;altura&quot;;
memOutrosRegistros1.Height = &quot;altura&quot;;
memOutrosRegistros2.Height = &quot;altura&quot;;
memOutrosRegistros3.Height = &quot;altura&quot;;
memOutrosRegistros4.Height = &quot;altura&quot;;
memOutrosRegistros5.Height = &quot;altura&quot;;
memOutrosRegistros6.Height = &quot;altura&quot;;
memOutrosRegistros7.Height = &quot;altura&quot;;
memOutrosRegistros8.Height = &quot;altura&quot;;
memOutrosRegistros9.Height = &quot;altura&quot;;
memOutrosRegistros10.Height =&quot;altura&quot;;
memOutrosRegistros11.Height = &quot;altura&quot;;
memOutrosRegistros12.Height = &quot;altura&quot;;
memOutrosRegistros13.Height = &quot;altura&quot;;

     */
  //==========================================================================================================================//
    private void _StartReport(object sender, EventArgs e)
    {
      // Referência ao próprio relatório
      Report report = Report;
                       
      string Dtini_dtfinal = &quot;A.DT_FINAL - A.DT_INICIAL + 1&quot;;
      
      string Extract       = &quot;EXTRACT(DAYS FROM A.DT_FINAL - A.DT_INICIAL) + 1&quot;;
      
      // Acessa a fonte de dados chamada &quot;SqlPrincipal&quot;
      TableDataSource sqlPonto = report.GetDataSource(&quot;SqlPonto&quot;) as TableDataSource;
      
      
      if (Report.GetParameterValue(&quot;dbms&quot;).ToString() == &quot;PostgreSQL&quot;)
      {
        sqlPonto.SelectCommand = sqlPonto.SelectCommand.Replace(&quot;/*Dtini_dtfinal*/&quot;, Extract);
      }
         
    }

    //==========================================================================================================================//
    
    private void bndSomaPonto_BeforePrint(object sender, EventArgs e)
    { 
      //CODIGO ALTERADO PARA EFEITO DIRETO NO RELATORIO, NAO PRECISA!!!
      
     /* TextObject text107 = Report.FindObject(&quot;text107&quot;) as TextObject;
      TextObject text108 = Report.FindObject(&quot;text108&quot;) as TextObject;
      TextObject text109 = Report.FindObject(&quot;text109&quot;) as TextObject;
      TextObject text110 = Report.FindObject(&quot;text110&quot;) as TextObject;
      TextObject text111 = Report.FindObject(&quot;text111&quot;) as TextObject;
      TextObject text112 = Report.FindObject(&quot;text112&quot;) as TextObject;
      
      text107.Width = Text92.CalcWidth();
      text108.Width = Text93.CalcWidth();
      text109.Width = Text94.CalcWidth();
      text110.Width = Text95.CalcWidth();
      text111.Width = Text96.CalcWidth();
      text112.Width = Text97.CalcWidth();*/
                                              
     // Text115.Left = 1000;
    }
    //==========================================================================================================================//    
        
           
    
     
    
  }
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAD52+0S9jQVqtbGjnQ1fJfcaegeqkp60BrLd+YLnR4XqyfZaBNherXEOpLePTulRqrY+ChMEL6VHdEuu5eaQq8P7uQHIyyz39UKCw5T7zIJkkkQe6KWD87uWjuSPJzCuc=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontDelete" DataType="System.Int32" PropName="Table" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal = true &#13;&#10;                                     limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" DataType="System.String"/>
        <Column Name="site" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[IdEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontDelete" DataType="System.Int32" PropName="Table2" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[IdModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontDelete" DataType="System.Int32" PropName="Table1" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[IdLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[IdUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlFuncionario" DataType="System.Int32" Enabled="true" SelectCommandlt;= B.DT_FINAL&#13;&#10;                         UNION&#13;&#10;                        SELECT FF.ID_HORARIO_CONTRATUAL_RH AS ID_HORARIO_CONTRATUAL&#13;&#10;                             , FF.DT_INICIO_HORARIO&#13;&#10;                          FROM GPE_FUNCIONARIO_HORARIO FF&#13;&#10;                         WHERE 1                     = C.INTEGRADO_RH&#13;&#10;                           AND FF.ID_FUNCIONARIO_RH  = A.ID_FILTRO&#13;&#10;                           AND FF.DT_INICIO_HORARIO &lt;= B.DT_FINAL&#13;&#10;                         ORDER BY 2 DESC&#13;&#10;                          limit 1&#13;&#10;                       ) XX ) AS ID_HORARIO_CONTRATUAL&#13;&#10;          FROM SIS_RELATORIO_FILTRO A&#13;&#10;               LEFT JOIN GPE_PERIODO_APURACAO                B ON B.ID_PERIODO_APURACAO                            = :ID_PERIODO_APURACAO&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO                    C ON C.ID_CONFIGURACAO                                = 1&#13;&#10;        &#13;&#10;               LEFT JOIN GPE_AREA_FUNCIONARIO                E ON E.ID_AREA_APURACAO                               = B.ID_AREA_APURACAO&#13;&#10;                                                              AND ( (  E.ID_FUNCIONARIO_RH  = A.ID_FILTRO   AND 1  = C.INTEGRADO_RH) OR&#13;&#10;                                                                    (  E.ID_FUNCIONARIO     = A.ID_FILTRO   AND 0 &lt;&gt; C.INTEGRADO_RH)   )&#13;&#10;               LEFT JOIN GPE_AREA_APURACAO                   F ON F.ID_AREA_APURACAO                               = B.ID_AREA_APURACAO&#13;&#10;               LEFT JOIN GPE_FUNCIONARIO_POR_ID(A.ID_FILTRO) G ON 1 = 1&#13;&#10;               LEFT JOIN SIS_FORMATA_DOCUMENTO(2, G.CPF)     H ON 1 = 1&#13;&#10;               LEFT JOIN GPE_LOCAL_TRABALHO_VIEW             I ON I.ID_LOCAL_TRABALHO                              = G.ID_LOCAL_TRABALHO&#13;&#10;               LEFT JOIN SIS_ENTIDADE                        K ON K.ID_ENTIDADE                                    = G.ID_ENTIDADE&#13;&#10;               LEFT JOIN SIS_PESSOA                          L ON L.ID_PESSOA                                      = K.ID_PESSOA_JURIDICA&#13;&#10;         WHERE A.ID_RELATORIO_FILTRO = :ID_RELATORIO_FILTRO                                                        &#13;&#10;       ) A1&#13;&#10;       LEFT JOIN GPE_HORARIO_CONTRATUAL_VIEW B1 ON B1.ID_HORARIO_CONTRATUAL = A1.ID_HORARIO_CONTRATUAL&#13;&#10; ORDER BY&#13;&#10;       A1.NOME&#13;&#10;     , A1.MATRICULA">
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <Column Name="matricula" DataType="System.String"/>
        <Column Name="nome" DataType="System.String"/>
        <Column Name="cpf" DataType="System.String"/>
        <Column Name="pis" DataType="System.String"/>
        <Column Name="cargo" DataType="System.String"/>
        <Column Name="funcao" DataType="System.String"/>
        <Column Name="ds_local_trabalho" DataType="System.String"/>
        <Column Name="ds_area_apuracao" DataType="System.String"/>
        <Column Name="cp_ano" DataType="System.Int32"/>
        <Column Name="cp_mes" DataType="System.Int32"/>
        <Column Name="dt_inicial" DataType="System.DateTime"/>
        <Column Name="dt_final" DataType="System.DateTime"/>
        <Column Name="id_entidade" DataType="System.Int32"/>
        <Column Name="ds_entidade" DataType="System.String"/>
        <Column Name="doc_entidade" DataType="System.String"/>
        <Column Name="id_horario_contratual" DataType="System.Int32"/>
        <Column Name="cd_horario_contratual" DataType="System.Int32"/>
        <Column Name="ds_horario_contratual" DataType="System.String"/>
        <Column Name="id_tp_horario_contratual" DataType="System.Int32"/>
        <CommandParameter Name="id_periodo_apuracao" DataType="9" Expression="[idperiodoapuracao]"/>
        <CommandParameter Name="id_relatorio_filtro" DataType="9" Expression="[IdRelatorioFiltro]"/>
      </TableDataSource>
      <TableDataSource Name="Table1" Alias="SqlHorarioContratual" DataType="System.Int32" Enabled="true" SelectCommand="SELECT AA1.ID_HORARIO_CONTRATUAL&#13;&#10;     , AA1.ID_TP_HORARIO_CONTRATUAL&#13;&#10;     , SEQ.ID_SEQUENCIA AS SEQUENCIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 1 THEN 'Domingo'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 2 THEN 'Segunda'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 3 THEN 'Terça'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 4 THEN 'Quarta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 5 THEN 'Quinta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 6 THEN 'Sexta'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 AND SEQ.ID_SEQUENCIA = 7 THEN 'Sábado'&#13;&#10;                 WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 2                          THEN CAST(SEQ.ID_SEQUENCIA AS CHAR(1)) || 'º Turno'&#13;&#10;             END AS VARCHAR(20)) AS DS_DIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_01 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_01 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_01 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_01&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_01   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_01   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_01   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_01   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_01&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_02 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_02 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_02 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_02   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_02   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_02   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_02   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D01_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D02_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D03_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D04_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D05_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D06_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_ENTRADA_03 IS NOT NULL THEN SUBSTRING(AA1.D07_ENTRADA_03 FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_ENTRADA_03 FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS ENTRADA_03&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.D01_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D01_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D01_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 AND AA1.D02_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D02_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D02_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 AND AA1.D03_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D03_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D03_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 AND AA1.D04_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D04_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D04_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 AND AA1.D05_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D05_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D05_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 AND AA1.D06_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D06_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D06_SAIDA_03   FROM 3 FOR 2)&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 AND AA1.D07_SAIDA_03   IS NOT NULL THEN SUBSTRING(AA1.D07_SAIDA_03   FROM 1 FOR 2) || ':' || SUBSTRING(AA1.D07_SAIDA_03   FROM 3 FOR 2)&#13;&#10;             END AS VARCHAR(5)) AS SAIDA_03&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN AA1.ID_TP_CARGA_HORARIA&#13;&#10;             END AS INTEGER) AS ID_TP_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 AND AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN AA1.DS_TP_CARGA_HORARIA&#13;&#10;             END AS VARCHAR(30)) AS DS_TP_CARGA_HORARIA&#13;&#10;&#13;&#10;     , CAST(CASE WHEN SEQ.ID_SEQUENCIA = 1 THEN CAST(AA1.D01_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D01_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 2 THEN CAST(AA1.D02_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D02_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 3 THEN CAST(AA1.D03_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D03_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 4 THEN CAST(AA1.D04_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D04_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 5 THEN CAST(AA1.D05_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D05_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 6 THEN CAST(AA1.D06_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D06_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;                 WHEN SEQ.ID_SEQUENCIA = 7 THEN CAST(AA1.D07_CARGA_HORARIA AS VARCHAR(7)) || ':' || LPAD(CAST(AA1.D07_CARGA_HORARIA_MIN AS VARCHAR(2)), 2, '0')&#13;&#10;             END AS VARCHAR(10)) AS CARGA_HORARIA&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT HOR.ID_HORARIO_CONTRATUAL&#13;&#10;             , HOR.ID_TP_HORARIO_CONTRATUAL&#13;&#10;&#13;&#10;             , D01.ENTRADA_01  AS D01_ENTRADA_01&#13;&#10;             , D01.SAIDA_01    AS D01_SAIDA_01&#13;&#10;             , D01.ENTRADA_02  AS D01_ENTRADA_02&#13;&#10;             , D01.SAIDA_02    AS D01_SAIDA_02&#13;&#10;             , D01.ENTRADA_03  AS D01_ENTRADA_03&#13;&#10;             , D01.SAIDA_03    AS D01_SAIDA_03&#13;&#10;&#13;&#10;             , D02.ENTRADA_01  AS D02_ENTRADA_01&#13;&#10;             , D02.SAIDA_01    AS D02_SAIDA_01&#13;&#10;             , D02.ENTRADA_02  AS D02_ENTRADA_02&#13;&#10;             , D02.SAIDA_02    AS D02_SAIDA_02&#13;&#10;             , D02.ENTRADA_03  AS D02_ENTRADA_03&#13;&#10;             , D02.SAIDA_03    AS D02_SAIDA_03&#13;&#10;&#13;&#10;             , D03.ENTRADA_01  AS D03_ENTRADA_01&#13;&#10;             , D03.SAIDA_01    AS D03_SAIDA_01&#13;&#10;             , D03.ENTRADA_02  AS D03_ENTRADA_02&#13;&#10;             , D03.SAIDA_02    AS D03_SAIDA_02&#13;&#10;             , D03.ENTRADA_03  AS D03_ENTRADA_03&#13;&#10;             , D03.SAIDA_03    AS D03_SAIDA_03&#13;&#10;&#13;&#10;             , D04.ENTRADA_01  AS D04_ENTRADA_01&#13;&#10;             , D04.SAIDA_01    AS D04_SAIDA_01&#13;&#10;             , D04.ENTRADA_02  AS D04_ENTRADA_02&#13;&#10;             , D04.SAIDA_02    AS D04_SAIDA_02&#13;&#10;             , D04.ENTRADA_03  AS D04_ENTRADA_03&#13;&#10;             , D04.SAIDA_03    AS D04_SAIDA_03&#13;&#10;&#13;&#10;             , D05.ENTRADA_01  AS D05_ENTRADA_01&#13;&#10;             , D05.SAIDA_01    AS D05_SAIDA_01&#13;&#10;             , D05.ENTRADA_02  AS D05_ENTRADA_02&#13;&#10;             , D05.SAIDA_02    AS D05_SAIDA_02&#13;&#10;             , D05.ENTRADA_03  AS D05_ENTRADA_03&#13;&#10;             , D05.SAIDA_03    AS D05_SAIDA_03&#13;&#10;&#13;&#10;             , D06.ENTRADA_01  AS D06_ENTRADA_01&#13;&#10;             , D06.SAIDA_01    AS D06_SAIDA_01&#13;&#10;             , D06.ENTRADA_02  AS D06_ENTRADA_02&#13;&#10;             , D06.SAIDA_02    AS D06_SAIDA_02&#13;&#10;             , D06.ENTRADA_03  AS D06_ENTRADA_03&#13;&#10;             , D06.SAIDA_03    AS D06_SAIDA_03&#13;&#10;&#13;&#10;             , D07.ENTRADA_01  AS D07_ENTRADA_01&#13;&#10;             , D07.SAIDA_01    AS D07_SAIDA_01&#13;&#10;             , D07.ENTRADA_02  AS D07_ENTRADA_02&#13;&#10;             , D07.SAIDA_02    AS D07_SAIDA_02&#13;&#10;             , D07.ENTRADA_03  AS D07_ENTRADA_03&#13;&#10;             , D07.SAIDA_03    AS D07_SAIDA_03&#13;&#10;&#13;&#10;             , CAST(DIV(D01.CARGA_HORARIA, 60) AS INTEGER) AS D01_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D02.CARGA_HORARIA, 60) AS INTEGER) AS D02_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D03.CARGA_HORARIA, 60) AS INTEGER) AS D03_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D04.CARGA_HORARIA, 60) AS INTEGER) AS D04_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D05.CARGA_HORARIA, 60) AS INTEGER) AS D05_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D06.CARGA_HORARIA, 60) AS INTEGER) AS D06_CARGA_HORARIA&#13;&#10;             , CAST(DIV(D07.CARGA_HORARIA, 60) AS INTEGER) AS D07_CARGA_HORARIA&#13;&#10;&#13;&#10;             , CAST(MOD(D01.CARGA_HORARIA, 60) AS INTEGER) AS D01_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D02.CARGA_HORARIA, 60) AS INTEGER) AS D02_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D03.CARGA_HORARIA, 60) AS INTEGER) AS D03_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D04.CARGA_HORARIA, 60) AS INTEGER) AS D04_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D05.CARGA_HORARIA, 60) AS INTEGER) AS D05_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D06.CARGA_HORARIA, 60) AS INTEGER) AS D06_CARGA_HORARIA_MIN&#13;&#10;             , CAST(MOD(D07.CARGA_HORARIA, 60) AS INTEGER) AS D07_CARGA_HORARIA_MIN&#13;&#10;&#13;&#10;             , TCG.ID_TP_CARGA_HORARIA&#13;&#10;             , TCG.DS_TP_CARGA_HORARIA&#13;&#10;          FROM GPE_HORARIO_CONTRATUAL_VIEW  HOR&#13;&#10;               LEFT JOIN GPE_HORARIO            D01 ON D01.ID_HORARIO           = HOR.ID_HORARIO_01&#13;&#10;               LEFT JOIN GPE_HORARIO            D02 ON D02.ID_HORARIO           = HOR.ID_HORARIO_02&#13;&#10;               LEFT JOIN GPE_HORARIO            D03 ON D03.ID_HORARIO           = HOR.ID_HORARIO_03&#13;&#10;               LEFT JOIN GPE_HORARIO            D04 ON D04.ID_HORARIO           = HOR.ID_HORARIO_04&#13;&#10;               LEFT JOIN GPE_HORARIO            D05 ON D05.ID_HORARIO           = HOR.ID_HORARIO_05&#13;&#10;               LEFT JOIN GPE_HORARIO            D06 ON D06.ID_HORARIO           = HOR.ID_HORARIO_06&#13;&#10;               LEFT JOIN GPE_HORARIO            D07 ON D07.ID_HORARIO           = HOR.ID_HORARIO_07&#13;&#10;               LEFT JOIN GPE_TP_CARGA_HORARIA   TCG ON TCG.ID_TP_CARGA_HORARIA  = D01.ID_TP_CARGA_HORARIA&#13;&#10;         WHERE HOR.ID_HORARIO_CONTRATUAL = :ID_HORARIO_CONTRATUAL&#13;&#10;       ) AA1, SIS_SEQUENCIA SEQ&#13;&#10; WHERE SEQ.ID_SEQUENCIA &lt;= CASE WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 1 THEN 7&#13;&#10;                                WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 2 THEN 4&#13;&#10;                                WHEN AA1.ID_TP_HORARIO_CONTRATUAL = 3 THEN 1&#13;&#10;                           ELSE 0 END&#13;&#10; ORDER BY&#13;&#10;       SEQ.ID_SEQUENCIA">
        <Column Name="id_horario_contratual" DataType="System.Int32"/>
        <Column Name="id_tp_horario_contratual" DataType="System.Int32"/>
        <Column Name="sequencia" DataType="System.Int32"/>
        <Column Name="ds_dia" DataType="System.String"/>
        <Column Name="entrada_01" DataType="System.String"/>
        <Column Name="saida_01" DataType="System.String"/>
        <Column Name="entrada_02" DataType="System.String"/>
        <Column Name="saida_02" DataType="System.String"/>
        <Column Name="entrada_03" DataType="System.String"/>
        <Column Name="saida_03" DataType="System.String"/>
        <Column Name="id_tp_carga_horaria" DataType="System.Int32"/>
        <Column Name="ds_tp_carga_horaria" DataType="System.String"/>
        <Column Name="carga_horaria" DataType="System.String"/>
        <CommandParameter Name="id_horario_contratual" DataType="9" Expression="[SqlFuncionario.id_horario_contratual]"/>
      </TableDataSource>
      <TableDataSource Name="Table2" Alias="SqlHE" DataType="System.Int32" Enabled="true" SelectCommand="SELECT MAX(CAST(CASE WHEN A.ID_TP_HE = 1 THEN COALESCE(A.DESCRICAO, A.DS_TP_HE) END AS VARCHAR(50))) AS DS_TP_HE1&#13;&#10;     , MAX(CAST(CASE WHEN A.ID_TP_HE = 2 THEN COALESCE(A.DESCRICAO, A.DS_TP_HE) END AS VARCHAR(50))) AS DS_TP_HE2&#13;&#10;     , MAX(CAST(CASE WHEN A.ID_TP_HE = 3 THEN COALESCE(A.DESCRICAO, A.DS_TP_HE) END AS VARCHAR(50))) AS DS_TP_HE3&#13;&#10;     , MAX(CAST(CASE WHEN A.ID_TP_HE = 4 THEN COALESCE(A.DESCRICAO, A.DS_TP_HE) END AS VARCHAR(50))) AS DS_TP_HE4&#13;&#10;     , MAX(CAST(CASE WHEN A.ID_TP_HE = 5 THEN COALESCE(A.DESCRICAO, A.DS_TP_HE) END AS VARCHAR(50))) AS DS_TP_HE5&#13;&#10;     , MAX(CAST(CASE WHEN A.ID_TP_HE = 6 THEN COALESCE(A.DESCRICAO, A.DS_TP_HE) END AS VARCHAR(50))) AS DS_TP_HE6&#13;&#10;  FROM GPE_TP_HE A">
        <Column Name="ds_tp_he1" DataType="System.String"/>
        <Column Name="ds_tp_he2" DataType="System.String"/>
        <Column Name="ds_tp_he3" DataType="System.String"/>
        <Column Name="ds_tp_he4" DataType="System.String"/>
        <Column Name="ds_tp_he5" DataType="System.String"/>
        <Column Name="ds_tp_he6" DataType="System.String"/>
      </TableDataSource>
      <TableDataSource Name="Table3" Alias="SqlAM" DataType="System.Int32" Enabled="true" SelectCommand="SELECT COUNT(1) AS QTD_AM&#13;&#10;  FROM (SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 4 -- AM&#13;&#10;         AND B.INTEGRADO_RH   = 0&#13;&#10;&#13;&#10;       UNION&#13;&#10;&#13;&#10;      SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 4 -- AM&#13;&#10;         AND B.INTEGRADO_RH      = 1&#13;&#10;) A1">
        <Column Name="qtd_am" DataType="System.Int64"/>
        <CommandParameter Name="id_funcionario" DataType="9" Expression="0"/>
        <CommandParameter Name="id_periodo_apuracao" DataType="9" Expression="[idPeriodoApuracao]"/>
      </TableDataSource>
      <TableDataSource Name="Table4" Alias="SqlHP" DataType="System.Int32" Enabled="true" SelectCommand="SELECT COUNT(1) AS QTD_HP&#13;&#10;  FROM (SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 5 -- HP&#13;&#10;         AND B.INTEGRADO_RH   = 0&#13;&#10;&#13;&#10;       UNION&#13;&#10;&#13;&#10;      SELECT A.ID_PONTO_REGISTRADO&#13;&#10;        FROM GPE_PONTO_REGISTRADO A&#13;&#10;        LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;       WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;         AND A.ID_PERIODO_APURACAO  = :ID_PERIODO_APURACAO&#13;&#10;         AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;         AND A.ID_TP_REGISTRO  = 5 -- HP&#13;&#10;         AND B.INTEGRADO_RH      = 1&#13;&#10;) A1">
        <Column Name="qtd_hp" DataType="System.Int64"/>
        <CommandParameter Name="id_funcionario" DataType="9" Expression="0"/>
        <CommandParameter Name="id_periodo_apuracao" DataType="9" Expression="[idPeriodoApuracao]"/>
      </TableDataSource>
      <TableDataSource Name="Table5" Alias="SqlSomaPonto" DataType="System.Int32" Enabled="true" SelectCommand="&#13;&#10;SELECT CAST(LPAD(CAST(A3.HR_NORMAL_H AS VARCHAR(6)),&#13;&#10;				 greatest(char_length(cast(a3.hr_normal_h as varchar)), 2), '0') || ':' ||&#13;&#10;                            LPAD(CAST(A3.HR_NORMAL_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                      AS HR_NORMAL&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_ATRASO_H AS VARCHAR(6)),&#13;&#10;                 greatest(char_length(cast(a3.hr_atraso_h as varchar)), 2), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_ATRASO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                      AS HR_ATRASO&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_SAIDA_ANTECIPADA_H AS VARCHAR(6)),&#13;&#10;                cast(greatest(char_length(cast(A3.HR_SAIDA_ANTECIPADA_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_SAIDA_ANTECIPADA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                            AS HR_SAIDA_ANTECIPADA&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_FALTA_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_FALTA_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_FALTA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                       AS HR_FALTA&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_1_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_1_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_1_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_1&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_2_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_2_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_2_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_2&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_3_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_3_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_3_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_3&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_4_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_4_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_4_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_4&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_5_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_5_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_5_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_5&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_6_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_6_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_6_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_6&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                        AS HR_EXTRA_NAO_AUTORIZADA&#13;&#10;&#13;&#10;     , CAST(LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(6)),&#13;&#10;                 cast(greatest(char_length(cast(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(6))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;            LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                           AS HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT A2.HR_NORMAL&#13;&#10;             , CAST(DIV(ABS(A2.HR_NORMAL), 60) AS INTEGER)                                  AS HR_NORMAL_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_NORMAL), 60) AS INTEGER)                                  AS HR_NORMAL_M&#13;&#10;&#13;&#10;             , A2.HR_ATRASO&#13;&#10;             , CAST(DIV(ABS(A2.HR_ATRASO), 60) AS INTEGER)                                  AS HR_ATRASO_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_ATRASO), 60) AS INTEGER)                                  AS HR_ATRASO_M&#13;&#10;        &#13;&#10;             , A2.HR_SAIDA_ANTECIPADA&#13;&#10;             , CAST(DIV(ABS(A2.HR_SAIDA_ANTECIPADA), 60) AS INTEGER)                        AS HR_SAIDA_ANTECIPADA_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_SAIDA_ANTECIPADA), 60) AS INTEGER)                        AS HR_SAIDA_ANTECIPADA_M&#13;&#10;        &#13;&#10;             , A2.HR_FALTA&#13;&#10;             , CAST(DIV(ABS(A2.HR_FALTA), 60) AS INTEGER)                                   AS HR_FALTA_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_FALTA), 60) AS INTEGER)                                   AS HR_FALTA_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_1&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_1), 60) AS INTEGER)                                 AS HR_EXTRA_1_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_1), 60) AS INTEGER)                                 AS HR_EXTRA_1_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_2&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_2), 60) AS INTEGER)                                 AS HR_EXTRA_2_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_2), 60) AS INTEGER)                                 AS HR_EXTRA_2_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_3&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_3), 60) AS INTEGER)                                 AS HR_EXTRA_3_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_3), 60) AS INTEGER)                                 AS HR_EXTRA_3_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_4&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_4), 60) AS INTEGER)                                 AS HR_EXTRA_4_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_4), 60) AS INTEGER)                                 AS HR_EXTRA_4_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_5&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_5), 60) AS INTEGER)                                 AS HR_EXTRA_5_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_5), 60) AS INTEGER)                                 AS HR_EXTRA_5_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_6&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_6), 60) AS INTEGER)                                 AS HR_EXTRA_6_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_6), 60) AS INTEGER)                                 AS HR_EXTRA_6_M&#13;&#10;        &#13;&#10;             , A2.HR_EXTRA_NAO_AUTORIZADA&#13;&#10;             , CAST(DIV(ABS(A2.HR_EXTRA_NAO_AUTORIZADA), 60) AS INTEGER)                    AS HR_EXTRA_NAO_AUTORIZADA_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_EXTRA_NAO_AUTORIZADA), 60) AS INTEGER)                    AS HR_EXTRA_NAO_AUTORIZADA_M&#13;&#10;        &#13;&#10;             , A2.HR_ADICIONAL_NOTURNO&#13;&#10;             , CAST(DIV(ABS(A2.HR_ADICIONAL_NOTURNO), 60) AS INTEGER)                       AS HR_ADICIONAL_NOTURNO_H&#13;&#10;             , CAST(MOD(ABS(A2.HR_ADICIONAL_NOTURNO), 60) AS INTEGER)                       AS HR_ADICIONAL_NOTURNO_M&#13;&#10;&#13;&#10;          FROM (&#13;&#10;                SELECT SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_NORMAL, B1.HR_NORMAL, 0) + COALESCE(D1.HR_NOTURNA, B1.HR_NOTURNA, 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_NORMAL, B1.HR_NORMAL, 0) + COALESCE(D1.HR_NOTURNA, B1.HR_NOTURNA, 0)&#13;&#10;                                 ELSE 0 END ) AS HR_NORMAL&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_ATRASO, B1.HR_ATRASO, 0) - COALESCE(D1.HR_ATRASO_ABONADO, B1.HR_ATRASO_ABONADO, 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_ATRASO, B1.HR_ATRASO, 0) - COALESCE(D1.HR_ATRASO_ABONADO, B1.HR_ATRASO_ABONADO, 0)&#13;&#10;                                 ELSE 0 END ) AS HR_ATRASO&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_SAIDA_ANTECIPADA, B1.HR_SAIDA_ANTECIPADA, 0) - COALESCE(D1.HR_SAIDA_ANTECIPADA_ABONADA, B1.HR_SAIDA_ANTECIPADA_ABONADA, 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_SAIDA_ANTECIPADA, B1.HR_SAIDA_ANTECIPADA, 0) - COALESCE(D1.HR_SAIDA_ANTECIPADA_ABONADA, B1.HR_SAIDA_ANTECIPADA_ABONADA, 0)&#13;&#10;                                 ELSE 0 END ) AS HR_SAIDA_ANTECIPADA&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_FALTA, B1.HR_FALTA, 0) - COALESCE(D1.HR_FALTA_ABONADA, B1.HR_FALTA_ABONADA, 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_FALTA, B1.HR_FALTA, 0) - COALESCE(D1.HR_FALTA_ABONADA, B1.HR_FALTA_ABONADA, 0)&#13;&#10;                                 ELSE 0 END ) AS HR_FALTA&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_1, B1.HR_EXTRA_1 - COALESCE(B1.HR_EXTRA_1_BANCO, 0), 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_1, B1.HR_EXTRA_1 - COALESCE(B1.HR_EXTRA_1_BANCO, 0), 0) ELSE 0 END )   AS HR_EXTRA_1&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_2, B1.HR_EXTRA_2 - COALESCE(B1.HR_EXTRA_2_BANCO, 0), 0) &#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_2, B1.HR_EXTRA_2 - COALESCE(B1.HR_EXTRA_2_BANCO, 0), 0) ELSE 0 END )   AS HR_EXTRA_2&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_3, B1.HR_EXTRA_3 - COALESCE(B1.HR_EXTRA_3_BANCO, 0), 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_3, B1.HR_EXTRA_3 - COALESCE(B1.HR_EXTRA_3_BANCO, 0), 0) ELSE 0 END )   AS HR_EXTRA_3                     &#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_4, B1.HR_EXTRA_4 - COALESCE(B1.HR_EXTRA_4_BANCO, 0), 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_4, B1.HR_EXTRA_4 - COALESCE(B1.HR_EXTRA_4_BANCO, 0), 0) ELSE 0 END )   AS HR_EXTRA_4                     &#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_5, B1.HR_EXTRA_5 - COALESCE(B1.HR_EXTRA_5_BANCO, 0), 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_5, B1.HR_EXTRA_5 - COALESCE(B1.HR_EXTRA_5_BANCO, 0), 0) ELSE 0 END )   AS HR_EXTRA_5&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_6, B1.HR_EXTRA_6 - COALESCE(B1.HR_EXTRA_6_BANCO, 0), 0)   &#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_6, B1.HR_EXTRA_6 - COALESCE(B1.HR_EXTRA_6_BANCO, 0), 0) ELSE 0 END )   AS HR_EXTRA_6&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_NAO_AUTORIZADA, B1.HR_EXTRA_NAO_AUTORIZADA, 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(D1.HR_EXTRA_NAO_AUTORIZADA, B1.HR_EXTRA_NAO_AUTORIZADA, 0) ELSE 0 END )            AS HR_EXTRA_NAO_AUTORIZADA&#13;&#10;&#13;&#10;                     , SUM( CASE WHEN E1.ID_TP_APURACAO          &lt;&gt; 4&#13;&#10;                                 THEN COALESCE(B1.HR_ADICIONAL_NOTURNO, 0)&#13;&#10;                                 WHEN B1.APURACAO_CARGA_HORARIA   = 1&#13;&#10;                                 THEN COALESCE(B1.HR_ADICIONAL_NOTURNO, 0) ELSE 0 END )                                           AS HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;                  FROM (&#13;&#10;                        SELECT A.ID_PERIODO_APURACAO&#13;&#10;                             , A.DT_INICIAL&#13;&#10;                             , A.DT_FINAL&#13;&#10;                             , A.DT_INICIAL + (B.ID_SEQUENCIA - 1) * INTERVAL '1 day' AS DT_PONTO&#13;&#10;                                                         , C.INTEGRADO_RH&#13;&#10;                          FROM GPE_PERIODO_APURACAO A&#13;&#10;                               LEFT JOIN SIS_SEQUENCIA    B ON B.ID_SEQUENCIA &lt;= A.DT_FINAL - A.DT_INICIAL + 1&#13;&#10;                               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;                         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO                                      &#13;&#10;                       ) A1                                                                              &#13;&#10;                       LEFT JOIN GPE_APURACAO                   X1 ON X1.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                                  AND X1.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                                  AND X1.ID_FUNCIONARIO         = :ID_FUNCIONARIO&#13;&#10;                                                                  AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO                   X2 ON X2.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                                  AND X2.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                                  AND X2.ID_FUNCIONARIO_RH      = :ID_FUNCIONARIO&#13;&#10;                                                                  AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO                   B1 ON B1.ID_APURACAO            = COALESCE(X1.ID_APURACAO, X2.ID_APURACAO)&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO           Z1 ON Z1.ID_FUNCIONARIO         = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                                  AND Z1.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                                  AND Z1.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                                  AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO           Z2 ON Z2.ID_FUNCIONARIO_RH      = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                                  AND Z2.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                                  AND Z2.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                                  AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO           D1 ON D1.ID_APURACAO_USUARIO    = COALESCE(Z1.ID_APURACAO_USUARIO, Z2.ID_APURACAO_USUARIO)&#13;&#10;                                                                  AND B1.ID_TP_DIA_PONTO       &lt;&gt; 9                  &#13;&#10;                  &#13;&#10;                       LEFT JOIN GPE_APONTAMENTO                E1 ON E1.ID_APONTAMENTO         = B1.ID_APONTAMENTO&#13;&#10;                       LEFT JOIN GPE_HORARIO                    H1 ON H1.ID_HORARIO             = B1.ID_HORARIO&#13;&#10;&#13;&#10;               ) A2&#13;&#10;&#13;&#10;       ) A3&#13;&#10;&#13;&#10;   limit 1">
        <Column Name="hr_normal" DataType="System.String"/>
        <Column Name="hr_atraso" DataType="System.String"/>
        <Column Name="hr_saida_antecipada" DataType="System.String"/>
        <Column Name="hr_falta" DataType="System.String"/>
        <Column Name="hr_extra_1" DataType="System.String"/>
        <Column Name="hr_extra_2" DataType="System.String"/>
        <Column Name="hr_extra_3" DataType="System.String"/>
        <Column Name="hr_extra_4" DataType="System.String"/>
        <Column Name="hr_extra_5" DataType="System.String"/>
        <Column Name="hr_extra_6" DataType="System.String"/>
        <Column Name="hr_extra_nao_autorizada" DataType="System.String"/>
        <Column Name="hr_adicional_noturno" DataType="System.String"/>
        <CommandParameter Name="id_periodo_apuracao" DataType="9" Expression="[idPeriodoApuracao]"/>
        <CommandParameter Name="id_funcionario" DataType="9" Expression="[SqlFuncionario.id_funcionario]"/>
      </TableDataSource>
      <TableDataSource Name="Table6" Alias="SqlPonto" DataType="System.Int32" Enabled="true" SelectCommand="                 SELECT A3.DT_PONTO  &#13;&#10;     , A3.DIA_SEMANA&#13;&#10;     , A3.ID_APURACAO&#13;&#10;     , A3.ID_TP_DIA_PONTO&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.ID_TP_DIA_PONTO = 1 AND A3.ISENTO = 1 THEN A3.DS_TP_DIA_PONTO || ' (Isento)'&#13;&#10;                 WHEN A3.ID_TP_DIA_PONTO = 1 AND A3.ID_PONTO_REGISTRADO_ENTRADA_01 IS NULL THEN A3.DS_TP_DIA_PONTO || ' (Falta)'&#13;&#10;                 ELSE A3.DS_TP_DIA_PONTO&#13;&#10;            END&#13;&#10;       AS VARCHAR(120)) AS DS_TP_DIA_PONTO&#13;&#10;&#13;&#10;     , A3.APURACAO_CARGA_HORARIA&#13;&#10;     , A3.HORARIO_IS_CARGA_HORARIA&#13;&#10;     , A3.ID_TP_CARGA_HORARIA&#13;&#10;     , A3.APURACAO_DIA_SEGUINTE&#13;&#10;     , A3.EXIBIR_INTERVALO_PRE_ASSINALADO&#13;&#10;     , A3.OBS&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_01             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 2  THEN '*' || A3.ENTRADA_01   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 3  THEN '^' || A3.ENTRADA_01   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_01 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_01&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_01&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_01               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 2  THEN '*' || A3.SAIDA_01     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 3  THEN '^' || A3.SAIDA_01     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_01   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_01&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_01&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.ENTRADA_02             IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 2  THEN '*' || A3.ENTRADA_02   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 3  THEN '^' || A3.ENTRADA_02   -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_ENTRADA_02 = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.ENTRADA_02&#13;&#10;             END AS VARCHAR(10)) AS ENTRADA_02&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA    = 1  THEN ''&#13;&#10;                 WHEN A3.SAIDA_02               IS NULL THEN '--:--'&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 2  THEN '*' || A3.SAIDA_02     -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 3  THEN '^' || A3.SAIDA_02     -- PRE ASSINALADO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A3.ID_TP_REGISTRO_SAIDA_02   = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A3.SAIDA_02&#13;&#10;             END AS VARCHAR(10)) AS SAIDA_02&#13;&#10;&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_01 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_01 &lt;&gt; 5 THEN A3.ENTRADA_01_DIA END AS VARCHAR(5)) AS ENTRADA_01_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_01   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_01   &lt;&gt; 5 THEN A3.SAIDA_01_DIA   END AS VARCHAR(5)) AS SAIDA_01_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_ENTRADA_02 &lt;&gt; 4 AND A3.ID_TP_REGISTRO_ENTRADA_02 &lt;&gt; 5 THEN A3.ENTRADA_02_DIA END AS VARCHAR(5)) AS ENTRADA_02_DIA&#13;&#10;     , CAST(CASE WHEN A3.APURACAO_CARGA_HORARIA &lt;&gt; 1 AND A3.ID_TP_REGISTRO_SAIDA_02   &lt;&gt; 4 AND A3.ID_TP_REGISTRO_SAIDA_02   &lt;&gt; 5 THEN A3.SAIDA_02_DIA   END AS VARCHAR(5)) AS SAIDA_02_DIA&#13;&#10;&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;     , A3.ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;     , A3.ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;     , A3.TEM_OUTROS_REGISTROS&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_NORMAL, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_NORMAL &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_NORMAL_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(length(CAST(A3.HR_NORMAL_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_NORMAL_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                      AS HR_NORMAL&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_ATRASO, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_ATRASO &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_ATRASO_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_ATRASO_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_ATRASO_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                      AS HR_ATRASO     &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_SAIDA_ANTECIPADA, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_SAIDA_ANTECIPADA &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_SAIDA_ANTECIPADA_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_SAIDA_ANTECIPADA_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_SAIDA_ANTECIPADA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                            AS HR_SAIDA_ANTECIPADA     &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_FALTA, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_FALTA &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_FALTA_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_FALTA_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_FALTA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                       AS HR_FALTA          &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_1, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_1 &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_1_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_1_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_1_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_1&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_2, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_2 &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_2_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_2_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_2_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_2&#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_3, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_3 &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_3_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_3_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_3_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_3     &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_4, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_4 &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_4_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_4_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_4_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_4     &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_5, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_5 &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_5_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_5_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_5_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_5          &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_6, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_6 &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_6_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_6_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_6_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                                     AS HR_EXTRA_6          &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_EXTRA_NAO_AUTORIZADA, 0) = 0 THEN NULL&#13;&#10;                 WHEN A3.HR_EXTRA_NAO_AUTORIZADA &lt; 0              THEN '*' ELSE '' END ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_EXTRA_NAO_AUTORIZADA_M AS VARCHAR(2)), 2, '0') AS VARCHAR(10))                                        AS HR_EXTRA_NAO_AUTORIZADA          &#13;&#10;&#13;&#10;     , CAST(CASE WHEN COALESCE(A3.HR_ADICIONAL_NOTURNO, 0) = 0 THEN NULL&#13;&#10;                 ELSE LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(4)),&#13;&#10;                           CAST(greatest(LENgth(CAST(A3.HR_ADICIONAL_NOTURNO_H AS VARCHAR(4))), 2) AS INTEGER), '0') || ':' ||&#13;&#10;                      LPAD(CAST(A3.HR_ADICIONAL_NOTURNO_M AS VARCHAR(2)), 2, '0') END AS VARCHAR(10))                                       AS HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;     , A3.ID_APURACAO_USUARIO&#13;&#10;     , A3.COR&#13;&#10;     , A3.ISENTO&#13;&#10;     , A3.ID_FUNCIONARIO_P&#13;&#10;     , A3.ID_FUNCIONARIO&#13;&#10;  FROM (&#13;&#10;        SELECT A2.DT_PONTO&#13;&#10;             ,  CAST(CASE EXTRACT(ISODOW from CAST(A2.DT_PONTO AS DATE))&#13;&#10;                         WHEN 1 THEN 'seg'&#13;&#10;                         WHEN 2 THEN 'ter'&#13;&#10;                         WHEN 3 THEN 'qua'&#13;&#10;                         WHEN 4 THEN 'qui'&#13;&#10;                         WHEN 5 THEN 'sex'&#13;&#10;                         WHEN 6 THEN 'sáb'&#13;&#10;                         ELSE 'dom'&#13;&#10;                     END AS VARCHAR(3)) AS DIA_SEMANA&#13;&#10;&#13;&#10;        &#13;&#10;             , A2.ID_APURACAO&#13;&#10;             , A2.ID_TP_DIA_PONTO&#13;&#10;             , A2.DS_TP_DIA_PONTO&#13;&#10;             , A2.APURACAO_CARGA_HORARIA&#13;&#10;             , A2.HORARIO_IS_CARGA_HORARIA&#13;&#10;             , A2.ID_TP_CARGA_HORARIA&#13;&#10;             , A2.APURACAO_DIA_SEGUINTE&#13;&#10;             , A2.EXIBIR_INTERVALO_PRE_ASSINALADO&#13;&#10;             , A2.OBS&#13;&#10;&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_01 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_01)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(extract(minute from A2.DT_HR_REGISTRO_ENTRADA_01) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_01&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_01   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_01)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(extract(minute from A2.DT_HR_REGISTRO_SAIDA_01)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_01&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_02 IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_ENTRADA_02)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(extract(minute from A2.DT_HR_REGISTRO_ENTRADA_02) AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS ENTRADA_02&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_02   IS NOT NULL THEN LPAD(CAST(EXTRACT(HOUR FROM A2.DT_HR_REGISTRO_SAIDA_02)     AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                                                                            LPAD(CAST(extract(minute from A2.DT_HR_REGISTRO_SAIDA_02)   AS VARCHAR(2)), 2, '0') END AS VARCHAR(10) ) AS SAIDA_02&#13;&#10;&#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_01 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_01)AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_01) AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_01) as integer)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         cast(abs(CAST(A2.DT_HR_REGISTRO_ENTRADA_01 as DATE) - cast(A2.DT_PONTO as DATE)) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS ENTRADA_01_DIA&#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_01 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_01)AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_01)AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_01)as integer)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         cast(abs(CAST(A2.DT_HR_REGISTRO_SAIDA_01 AS DATE) - CAST(A2.DT_PONTO AS DATE)) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS SAIDA_01_DIA&#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_ENTRADA_02 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_ENTRADA_02)AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_ENTRADA_02)AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_ENTRADA_02)as integer)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;                         CAST(abs(CAST(A2.DT_HR_REGISTRO_ENTRADA_02 AS DATE) - CAST(A2.DT_PONTO AS DATE)) AS VARCHAR(10))&#13;&#10;                    END AS VARCHAR(10)) AS ENTRADA_02_DIA&#13;&#10;                    &#13;&#10;             , CAST(CASE WHEN A2.DT_HR_REGISTRO_SAIDA_02 IS NOT NULL AND MAKE_DATE(CAST(EXTRACT(YEAR FROM A2.DT_HR_REGISTRO_SAIDA_02)AS INTEGER), CAST(EXTRACT(MONTH FROM A2.DT_HR_REGISTRO_SAIDA_02)AS INTEGER), CAST(EXTRACT(DAY FROM A2.DT_HR_REGISTRO_SAIDA_02)as integer)) &lt;&gt; A2.DT_PONTO THEN&#13;&#10;                         CAST(CASE WHEN A2.APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) |||| CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;                                 ELSE '' END ||&#13;&#10;                            CASE WHEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) IS NOT NULL&#13;&#10;                                 THEN COALESCE(D1.OBS_FALTA_ATRASO_SAIDA_ANTECIP, B1.OBS_FALTA_ATRASO_SAIDA_ANTECIP) || CASE WHEN D1.OBS IS NOT NULL THEN ' | ' ELSE '' END&#13;&#10;                                 ELSE '' END ||&#13;&#10;                            CASE WHEN D1.OBS IS NOT NULL&#13;&#10;                                 THEN D1.OBS&#13;&#10;                                 ELSE '' END  AS text)                       AS OBS&#13;&#10;                     , COALESCE(B1.ID_HORARIO_CONTRATUAL, B1.ID_HORARIO_CONTRATUAL_RH)  AS ID_HORARIO_CONTRATUAL&#13;&#10;&#13;&#10;                     , E1.DT_HR_REGISTRO AS DT_HR_REGISTRO_ENTRADA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S2.DT_HR_REGISTRO ELSE S1.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_SAIDA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE E2.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_ENTRADA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE S2.DT_HR_REGISTRO END AS TIMESTAMP) AS DT_HR_REGISTRO_SAIDA_02&#13;&#10;&#13;&#10;                     , E1.ID_PONTO_REGISTRADO   AS ID_PONTO_REGISTRADO_ENTRADA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S2.ID_PONTO_REGISTRADO ELSE S1.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_SAIDA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE E2.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_ENTRADA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE S2.ID_PONTO_REGISTRADO END AS INTEGER) AS ID_PONTO_REGISTRADO_SAIDA_02&#13;&#10;                     , E3.ID_PONTO_REGISTRADO   AS ID_PONTO_REGISTRADO_ENTRADA_03&#13;&#10;&#13;&#10;                     , E1.ID_TP_REGISTRO        AS ID_TP_REGISTRO_ENTRADA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN S2.ID_TP_REGISTRO ELSE S1.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_SAIDA_01&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE E2.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_ENTRADA_02&#13;&#10;                     , CAST(CASE WHEN S1.ID_TP_REGISTRO = 3 AND E2.ID_TP_REGISTRO = 3 AND I1.EXIBIR_INTERVALO_PRE_ASSINALADO = 0 THEN NULL ELSE S2.ID_TP_REGISTRO END AS INTEGER) AS ID_TP_REGISTRO_SAIDA_02&#13;&#10;&#13;&#10;                     , B1.APURACAO_CARGA_HORARIA&#13;&#10;                     , C1.DS_TP_DIA_PONTO&#13;&#10;                     , CASE WHEN H1.ID_TP_CARGA_HORARIA IS NOT NULL THEN 1 ELSE 0 END AS HORARIO_IS_CARGA_HORARIA&#13;&#10;                     , H1.ID_TP_CARGA_HORARIA&#13;&#10;                &#13;&#10;                     , ( COALESCE(D1.HR_NORMAL,  B1.HR_NORMAL, 0) +&#13;&#10;                         COALESCE(D1.HR_NOTURNA, B1.HR_NOTURNA, 0) )&#13;&#10;                       * CASE WHEN D1.HR_NORMAL     IS NOT NULL&#13;&#10;                                OR D1.HR_NOTURNA    IS NOT NULL THEN -1 ELSE 1 END                      AS HR_NORMAL&#13;&#10;&#13;&#10;                     , ( COALESCE(D1.HR_ATRASO, B1.HR_ATRASO) -&#13;&#10;                         COALESCE(D1.HR_ATRASO_ABONADO, B1.HR_ATRASO_ABONADO, 0) )&#13;&#10;                       * CASE WHEN D1.HR_ATRASO             IS NOT NULL&#13;&#10;                                OR D1.HR_ATRASO_ABONADO     IS NOT NULL THEN -1 ELSE 1 END              AS HR_ATRASO&#13;&#10;&#13;&#10;                     , ( COALESCE(D1.HR_SAIDA_ANTECIPADA, B1.HR_SAIDA_ANTECIPADA) -&#13;&#10;                         COALESCE(D1.HR_SAIDA_ANTECIPADA_ABONADA, B1.HR_SAIDA_ANTECIPADA_ABONADA, 0) )&#13;&#10;                       * CASE WHEN D1.HR_SAIDA_ANTECIPADA             IS NOT NULL&#13;&#10;                                OR D1.HR_SAIDA_ANTECIPADA_ABONADA     IS NOT NULL THEN -1 ELSE 1 END    AS HR_SAIDA_ANTECIPADA&#13;&#10;&#13;&#10;                     , ( COALESCE(D1.HR_FALTA, B1.HR_FALTA) -&#13;&#10;                         COALESCE(D1.HR_FALTA_ABONADA, B1.HR_FALTA_ABONADA, 0) )&#13;&#10;                       * CASE WHEN D1.HR_FALTA             IS NOT NULL&#13;&#10;                                OR D1.HR_FALTA_ABONADA     IS NOT NULL THEN -1 ELSE 1 END    AS HR_FALTA&#13;&#10;&#13;&#10;                     , COALESCE(D1.HR_EXTRA_1 * -1, NULLIF(B1.HR_EXTRA_1 - COALESCE(B1.HR_EXTRA_1_BANCO, 0), 0)) AS HR_EXTRA_1&#13;&#10;                     , COALESCE(D1.HR_EXTRA_2 * -1, NULLIF(B1.HR_EXTRA_2 - COALESCE(B1.HR_EXTRA_2_BANCO, 0), 0)) AS HR_EXTRA_2&#13;&#10;                     , COALESCE(D1.HR_EXTRA_3 * -1, NULLIF(B1.HR_EXTRA_3 - COALESCE(B1.HR_EXTRA_3_BANCO, 0), 0)) AS HR_EXTRA_3&#13;&#10;                     , COALESCE(D1.HR_EXTRA_4 * -1, NULLIF(B1.HR_EXTRA_4 - COALESCE(B1.HR_EXTRA_4_BANCO, 0), 0)) AS HR_EXTRA_4&#13;&#10;                     , COALESCE(D1.HR_EXTRA_5 * -1, NULLIF(B1.HR_EXTRA_5 - COALESCE(B1.HR_EXTRA_5_BANCO, 0), 0)) AS HR_EXTRA_5&#13;&#10;                     , COALESCE(D1.HR_EXTRA_6 * -1, NULLIF(B1.HR_EXTRA_6 - COALESCE(B1.HR_EXTRA_6_BANCO, 0), 0)) AS HR_EXTRA_6&#13;&#10;                     , COALESCE(D1.HR_EXTRA_NAO_AUTORIZADA * -1, B1.HR_EXTRA_NAO_AUTORIZADA)                     AS HR_EXTRA_NAO_AUTORIZADA&#13;&#10;                &#13;&#10;                     , B1.HR_ADICIONAL_NOTURNO&#13;&#10;&#13;&#10;                     , D1.ID_APURACAO_USUARIO&#13;&#10;                     , CAST(COALESCE(C1.COR, 16448250) AS INTEGER) AS COR                                              &#13;&#10;                     , I1.ISENTO&#13;&#10;        &#13;&#10;                     , CAST(:ID_FUNCIONARIO AS INTEGER)                     AS ID_FUNCIONARIO_P&#13;&#10;                     , COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)    AS ID_FUNCIONARIO&#13;&#10;                  FROM (&#13;&#10;                        SELECT A.ID_PERIODO_APURACAO&#13;&#10;                             , A.DT_INICIAL&#13;&#10;                             , A.DT_FINAL&#13;&#10;                             , A.DT_INICIAL + ((B.ID_SEQUENCIA -1)* INTERVAL '1 DAY') AS DT_PONTO&#13;&#10;                             , C.INTEGRADO_RH&#13;&#10;                          FROM GPE_PERIODO_APURACAO A&#13;&#10;                               LEFT JOIN SIS_SEQUENCIA    B ON B.ID_SEQUENCIA &lt;= A.DT_FINAL - A.DT_INICIAL + 1&#13;&#10;                               LEFT JOIN GPE_CONFIGURACAO C ON C.ID_CONFIGURACAO = 1&#13;&#10;                         WHERE A.ID_PERIODO_APURACAO = :ID_PERIODO_APURACAO                                      &#13;&#10;                       ) A1                                                                              &#13;&#10;                       LEFT JOIN GPE_APURACAO           X1 ON X1.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                          AND X1.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                          AND X1.ID_FUNCIONARIO         = :ID_FUNCIONARIO&#13;&#10;                                                          AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO           X2 ON X2.ID_PERIODO_APURACAO    = A1.ID_PERIODO_APURACAO&#13;&#10;                                                          AND X2.DT_PONTO               = A1.DT_PONTO&#13;&#10;                                                          AND X2.ID_FUNCIONARIO_RH      = :ID_FUNCIONARIO&#13;&#10;                                                          AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO           B1 ON B1.ID_APURACAO            = COALESCE(X1.ID_APURACAO, X2.ID_APURACAO)&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_TP_DIA_PONTO       C1 ON C1.ID_TP_DIA_PONTO        = B1.ID_TP_DIA_PONTO&#13;&#10;                       LEFT JOIN GPE_APONTAMENTO        I1 ON I1.ID_APONTAMENTO         = B1.ID_APONTAMENTO&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO   Z1 ON Z1.ID_FUNCIONARIO         = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                          AND Z1.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                          AND Z1.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                          AND 1                        &lt;&gt; A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO   Z2 ON Z2.ID_FUNCIONARIO_RH      = COALESCE(B1.ID_FUNCIONARIO, B1.ID_FUNCIONARIO_RH)&#13;&#10;                                                          AND Z2.DT_PONTO               = B1.DT_PONTO&#13;&#10;                                                          AND Z2.APURACAO_CARGA_HORARIA = B1.APURACAO_CARGA_HORARIA&#13;&#10;                                                          AND 1                         = A1.INTEGRADO_RH&#13;&#10;                       LEFT JOIN GPE_APURACAO_USUARIO   D1 ON D1.ID_APURACAO_USUARIO    = COALESCE(Z1.ID_APURACAO_USUARIO, Z2.ID_APURACAO_USUARIO)&#13;&#10;                                                          AND B1.ID_TP_DIA_PONTO       &lt;&gt; 9                  &#13;&#10;                       LEFT JOIN GPE_HORARIO            H1 ON H1.ID_HORARIO             = B1.ID_HORARIO&#13;&#10;                &#13;&#10;                       LEFT JOIN GPE_PONTO_REGISTRADO   E1 ON E1.ID_PONTO_REGISTRADO    = B1.ID_PONTO_REGISTRADO_ENTRADA_1&#13;&#10;                                                          AND (B1.ID_TP_DIA_PONTO  NOT IN (2, 3, 4, 5)&#13;&#10;                                                           OR (B1.ID_TP_DIA_PONTO      IN (2, 3, 4, 5) AND I1.IGNORAR_PONTOS_FERIAS  = 0))&#13;&#10;                       LEFT JOIN GPE_PONTO_REGISTRADO   S1 ON S1.ID_PONTO_REGISTRADO    = B1.ID_PONTO_REGISTRADO_SAIDA_1&#13;&#10;                                                          AND (B1.ID_TP_DIA_PONTO  NOT IN (2, 3, 4, 5)&#13;&#10;                                                           OR (B1.ID_TP_DIA_PONTO      IN (2, 3, 4, 5) AND I1.IGNORAR_PONTOS_FERIAS  = 0))&#13;&#10;                       LEFT JOIN GPE_PONTO_REGISTRADO   E2 ON E2.ID_PONTO_REGISTRADO    = B1.ID_PONTO_REGISTRADO_ENTRADA_2&#13;&#10;                                                          AND (B1.ID_TP_DIA_PONTO  NOT IN (2, 3, 4, 5)&#13;&#10;                                                           OR (B1.ID_TP_DIA_PONTO      IN (2, 3, 4, 5) AND I1.IGNORAR_PONTOS_FERIAS  = 0))&#13;&#10;                       LEFT JOIN GPE_PONTO_REGISTRADO   S2 ON S2.ID_PONTO_REGISTRADO    = B1.ID_PONTO_REGISTRADO_SAIDA_2&#13;&#10;                                                          AND (B1.ID_TP_DIA_PONTO  NOT IN (2, 3, 4, 5)&#13;&#10;                                                           OR (B1.ID_TP_DIA_PONTO      IN (2, 3, 4, 5) AND I1.IGNORAR_PONTOS_FERIAS  = 0))&#13;&#10;                       LEFT JOIN GPE_PONTO_REGISTRADO   E3 ON E3.ID_PONTO_REGISTRADO    = B1.ID_PONTO_REGISTRADO_ENTRADA_3&#13;&#10;                                                          AND (B1.ID_TP_DIA_PONTO  NOT IN (2, 3, 4, 5)&#13;&#10;                                                           OR (B1.ID_TP_DIA_PONTO      IN (2, 3, 4, 5) AND I1.IGNORAR_PONTOS_FERIAS  = 0))&#13;&#10;&#13;&#10;               ) A2&#13;&#10;&#13;&#10;       ) A3&#13;&#10;&#13;&#10; ORDER BY&#13;&#10;       A3.DT_PONTO&#13;&#10;     , A3.APURACAO_CARGA_HORARIA">
        <Column Name="dt_ponto" DataType="System.DateTime"/>
        <Column Name="dia_semana" DataType="System.String"/>
        <Column Name="id_apuracao" DataType="System.Int32"/>
        <Column Name="id_tp_dia_ponto" DataType="System.Int32"/>
        <Column Name="apuracao_carga_horaria" DataType="System.Int16"/>
        <Column Name="ds_tp_dia_ponto" DataType="System.String"/>
        <Column Name="horario_is_carga_horaria" DataType="System.Int32"/>
        <Column Name="id_tp_carga_horaria" DataType="System.Int32"/>
        <Column Name="apuracao_dia_seguinte" DataType="System.Int16"/>
        <Column Name="exibir_intervalo_pre_assinalado" DataType="System.Int16"/>
        <Column Name="entrada_01" DataType="System.String"/>
        <Column Name="saida_01" DataType="System.String"/>
        <Column Name="entrada_02" DataType="System.String"/>
        <Column Name="saida_02" DataType="System.String"/>
        <Column Name="entrada_01_dia" DataType="System.String"/>
        <Column Name="saida_01_dia" DataType="System.String"/>
        <Column Name="entrada_02_dia" DataType="System.String"/>
        <Column Name="saida_02_dia" DataType="System.String"/>
        <Column Name="id_ponto_registrado_entrada_01" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_01" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_entrada_02" DataType="System.Int32"/>
        <Column Name="id_ponto_registrado_saida_02" DataType="System.Int32"/>
        <Column Name="tem_outros_registros" DataType="System.Int32"/>
        <Column Name="hr_normal" DataType="System.String"/>
        <Column Name="hr_falta" DataType="System.String"/>
        <Column Name="hr_extra_nao_autorizada" DataType="System.String"/>
        <Column Name="hr_adicional_noturno" DataType="System.String"/>
        <Column Name="id_apuracao_usuario" DataType="System.Int32"/>
        <Column Name="cor" DataType="System.Int32"/>
        <Column Name="isento" DataType="System.Int16"/>
        <Column Name="id_funcionario" DataType="System.Int32"/>
        <Column Name="obs" DataType="System.String"/>
        <Column Name="hr_atraso" DataType="System.String"/>
        <Column Name="hr_saida_antecipada" DataType="System.String"/>
        <Column Name="hr_extra_1" DataType="System.String"/>
        <Column Name="hr_extra_2" DataType="System.String"/>
        <Column Name="hr_extra_3" DataType="System.String"/>
        <Column Name="hr_extra_4" DataType="System.String"/>
        <Column Name="hr_extra_5" DataType="System.String"/>
        <Column Name="hr_extra_6" DataType="System.String"/>
        <Column Name="id_funcionario_p" DataType="System.Int32"/>
        <CommandParameter Name="id_funcionario" DataType="9" DefaultValue="0"/>
        <CommandParameter Name="id_periodo_apuracao" DataType="9" Expression="[idPeriodoApuracao]"/>
      </TableDataSource>
      <TableDataSource Name="Table7" Alias="SqlOutrosRegistros" DataType="System.Int32" Enabled="true" SelectCommand="SELECT A1.DT_HR_REGISTRO&#13;&#10;     , CAST(CASE WHEN A1.ID_TP_REGISTRO = 2  THEN '*' || A1.HR_REGISTRO   -- INCLUIDO POR DIGITACAO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 3  THEN '^' || A1.HR_REGISTRO   -- PRE ASSINALADO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 4  THEN 'A.M.'                 -- AUSENCIA DE MARCACAO&#13;&#10;                 WHEN A1.ID_TP_REGISTRO = 5  THEN 'H.P.'                 -- HORARIO PADRAO&#13;&#10;                 ELSE A1.HR_REGISTRO&#13;&#10;        END AS VARCHAR(10)) AS HR_REGISTRO&#13;&#10;&#13;&#10;      , CAST(CASE WHEN A1.DT_HR_REGISTRO IS NOT NULL AND DATE_TRUNC('day', A1.DT_HR_REGISTRO) &lt;&gt; :DT_PONTO THEN CAST(CASE WHEN :APURACAO_DIA_SEGUINTE = 1 THEN '-' ELSE '+' END AS VARCHAR(1)) ||&#13;&#10;             CAST(DATE_PART('day', :DT_PONTO - DATE_TRUNC('day', A1.DT_HR_REGISTRO)) AS VARCHAR(10)) &#13;&#10;             END AS VARCHAR(10)) AS HR_REGISTRO_DIA&#13;&#10;&#13;&#10;  FROM (&#13;&#10;        SELECT A.DT_HR_REGISTRO&#13;&#10;             , CAST(LPAD(CAST(UDF_HOUR(A.DT_HR_REGISTRO)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                    LPAD(CAST(UDF_MINUTE(A.DT_HR_REGISTRO) AS VARCHAR(2)), 2, '0') AS VARCHAR(5)) AS HR_REGISTRO&#13;&#10;             , A.ID_TP_REGISTRO&#13;&#10;          FROM GPE_PONTO_REGISTRADO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;           AND A.DT_REFERENCIA  = :DT_PONTO&#13;&#10;           AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;           AND B.INTEGRADO_RH   = 0&#13;&#10;         UNION&#13;&#10;        SELECT A.DT_HR_REGISTRO&#13;&#10;             , CAST(LPAD(CAST(EXTRACT(HOUR FROM A.DT_HR_REGISTRO)   AS VARCHAR(2)), 2, '0') || ':' ||&#13;&#10;                    LPAD(CAST(EXTRACT(MINUTE FROM A.DT_HR_REGISTRO) AS VARCHAR(2)), 2, '0') AS VARCHAR(5)) AS HR_REGISTRO&#13;&#10;             , A.ID_TP_REGISTRO&#13;&#10;          FROM GPE_PONTO_REGISTRADO A&#13;&#10;               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;         WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;           AND A.DT_REFERENCIA     = :DT_PONTO&#13;&#10;           AND A.ID_TP_MARCACAO   &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;           AND B.INTEGRADO_RH      = 1&#13;&#10;         ORDER BY&#13;&#10;               1&#13;&#10;       ) A1&#13;&#10; UNION ALL&#13;&#10;/* SEMPRE RETORNAR MULTIPLOS DE 4 */&#13;&#10;SELECT make_date(2100, 12, 31)   AS DT_HR_REGISTRO&#13;&#10;     , CAST('' AS VARCHAR(10) )  AS HR_REGISTRO&#13;&#10;     , CAST(NULL AS VARCHAR(2) ) AS HR_REGISTRO_DIA&#13;&#10;  FROM SIS_SEQUENCIA S&#13;&#10; WHERE S.ID_SEQUENCIA &lt;= 8 - ( SELECT CASE WHEN MOD(SUM(QT.QTDE), 8) = 0 THEN 8 ELSE MOD(SUM(QT.QTDE), 8) END&#13;&#10;                                 FROM (&#13;&#10;                                        SELECT COUNT(1) AS QTDE&#13;&#10;                                          FROM GPE_PONTO_REGISTRADO A&#13;&#10;                                               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;                                         WHERE A.ID_FUNCIONARIO = :ID_FUNCIONARIO&#13;&#10;                                           AND A.DT_REFERENCIA  = :DT_PONTO&#13;&#10;                                           AND A.ID_TP_MARCACAO &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;                                           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;                                            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;                                           AND B.INTEGRADO_RH   = 0&#13;&#10;                                         UNION&#13;&#10;                                        SELECT COUNT(1) AS QTDE&#13;&#10;                                          FROM GPE_PONTO_REGISTRADO A&#13;&#10;                                               LEFT JOIN GPE_CONFIGURACAO B ON B.ID_CONFIGURACAO = 1&#13;&#10;                                         WHERE A.ID_FUNCIONARIO_RH = :ID_FUNCIONARIO&#13;&#10;                                           AND A.DT_REFERENCIA     = :DT_PONTO&#13;&#10;                                           AND A.ID_TP_MARCACAO   &lt;&gt; 3 -- DESCONSIDERADO&#13;&#10;                                           AND ((CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 0 AND A.ID_TP_REGISTRO &lt;&gt; 3) -- PRE-ASSINALADO&#13;&#10;                                            OR   CAST(:EXIBIR_INTERVALO_PRE_ASSINALADO AS SMALLINT) = 1)&#13;&#10;                                           AND B.INTEGRADO_RH      = 1&#13;&#10;                                      ) QT&#13;&#10;                             )&#13;&#10; ORDER BY 1&#13;&#10;">
        <Column Name="dt_hr_registro" DataType="System.DateTime"/>
        <Column Name="hr_registro" DataType="System.String"/>
        <Column Name="hr_registro_dia" DataType="System.String"/>
        <CommandParameter Name="dt_ponto" DataType="7" Expression="[SqlPonto.dt_ponto]"/>
        <CommandParameter Name="apuracao_dia_seguinte" DataType="9" Expression="[SqlPonto.apuracao_dia_seguinte]"/>
        <CommandParameter Name="id_funcionario" DataType="9" Expression="[SqlPonto.id_funcionario]"/>
        <CommandParameter Name="exibir_intervalo_pre_assinalado" DataType="18" Expression="[SqlPonto.exibir_intervalo_pre_assinalado]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="personalizado" DataType="System.Int32" Expression="0"/>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Frequência e Apuração do Ponto&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int32" Expression="1"/>
    <Parameter Name="idModulo" DataType="System.Int32" Expression="47"/>
    <Parameter Name="idLogin" DataType="System.Int32" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int32" Expression="937"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int32" Expression="1"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;">
      <Parameter Name="Personalizado" DataType="System.Int64" Expression="0"/>
    </Parameter>
    <Parameter Name="imprimirUsuario" DataType="System.Int32" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int32" Expression="1"/>
    <Parameter Name="dbms" DataType="System.String" Expression="&quot;PostgreSQL&quot;"/>
    <Parameter Name="idPeriodoApuracao" DataType="System.Int32" Expression="3928"/>
    <Parameter Name="colorirTipoDia" DataType="System.Int32" Expression="0"/>
    <Parameter Name="lineBndPonto" DataType="System.Int64" AsString=""/>
  </Dictionary>
  <inherited Name="MainPage" StartPageEvent="_StartReport">
    <inherited Name="BndCabecalho">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="BndFiltro" Top="96.1">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <GroupHeaderBand Name="grpFuncionario" ZOrder="0" Top="116.6" Width="1047.06" Height="30.05" StartNewPage="true" KeepWithData="true" Condition="[SqlFuncionario.id_funcionario]" ResetPageNumber="true">
      <TextObject Name="Text2" Width="69.93" Height="15.12" Fill.Color="42, 82, 118" Text="Endereço:" VertAlign="Center" Font="Arial, 7pt" TextFill.Color="White"/>
      <TextObject Name="Text5" Left="69.93" Width="797.05" Height="15.12" Fill.Color="42, 82, 118" Text="&lt;b&gt;[SqlFuncionario.DS_ENTIDADE]&lt;/b&gt;     CNPJ: [SqlFuncionario.DOC_ENTIDADE]" VertAlign="Center" Font="Arial, 7pt" TextFill.Color="White" TextRenderType="HtmlParagraph"/>
      <TextObject Name="Text14" Top="14.93" Width="69.93" Height="15.12" Border.Lines="Top" Border.TopLine.Color="White" Fill.Color="42, 82, 118" Text="Funcionário:" VertAlign="Center" Font="Arial, 7pt" TextFill.Color="White"/>
      <TextObject Name="Text31" Left="866.95" Width="180.12" Height="15.12" Fill.Color="42, 82, 118" Text="Período: &lt;b&gt;[SqlFuncionario.DT_INICIAL]&lt;/b&gt; a &lt;b&gt;[SqlFuncionario.DT_FINAL]&lt;/b&gt;" VertAlign="Center" Font="Arial, 7pt" TextFill.Color="White" TextRenderType="HtmlParagraph">
        <Formats>
          <DateFormat/>
          <DateFormat/>
        </Formats>
      </TextObject>
      <TextObject Name="Text16" Left="69.93" Top="14.93" Width="977.13" Height="15.12" Border.Lines="Top" Border.TopLine.Color="White" Fill.Color="42, 82, 118" Text="[SqlFuncionario.MATRICULA] | &lt;b&gt;[SqlFuncionario.NOME]&lt;/b&gt;" VertAlign="Center" Font="Arial, 7pt" TextFill.Color="White" TextRenderType="HtmlParagraph"/>
      <GroupHeaderBand Name="grpPonto" Top="148.25" Width="1047.06" Height="102.82" CanGrow="true" BeforePrintEvent="grpPonto_BeforePrint" Condition="[SqlFuncionario.id_funcionario]">
        <TextObject Name="Text25" Left="69.93" Top="12.9" Width="350.03" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.CARGO]" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text18" Top="12.9" Width="69.93" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="Cargo:" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text20" Top="39.7" Width="69.93" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="Área Apuração:" VertAlign="Center" Font="Arial, 6pt"/>
        <TextObject Name="Text21" Top="52.6" Width="69.93" Height="13.23" Border.Lines="Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" Text="Horário:" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text30" Left="69.93" Top="52.6" Width="669.44" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.CD_HORARIO_CONTRATUAL] - [SqlFuncionario.DS_HORARIO_CONTRATUAL]&#13;&#10;" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text29" Left="69.93" Top="39.7" Width="669.44" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.DS_AREA_APURACAO]&#13;&#10;" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text50" Left="601.28" Top="92" Width="49.14" Height="9.83" Border.Lines="Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="[SqlHE.ds_tp_he6]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text51" Left="650.26" Top="92" Width="32.13" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="HE-NA" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text49" Left="548.48" Top="92" Width="52.92" Height="9.83" Border.Lines="Right, Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="[SqlHE.ds_tp_he5]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text48" Left="499.34" Top="92" Width="49.14" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="[SqlHE.ds_tp_he4]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text47" Left="454.36" Top="92" Width="44.98" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="[SqlHE.ds_tp_he3]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text46" Left="405.17" Top="92" Width="49.14" Height="9.83" Border.Lines="Right, Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="[SqlHE.ds_tp_he2]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text45" Left="360.23" Top="92" Width="44.98" Height="9.83" Border.Lines="Right, Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="[SqlHE.ds_tp_he1]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text43" Left="329.77" Top="92" Width="30.43" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Faltas" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text42" Left="297.86" Top="92" Width="31.53" Height="9.83" Border.Lines="Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Sai. Ant" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text41" Left="266.11" Top="92" Width="31.79" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Atrasos" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text40" Left="232.09" Top="92" Width="34.02" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Normais" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text38" Left="198.45" Top="91.95" Width="33.64" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Saí." HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text37" Left="165.56" Top="92" Width="32.89" Height="9.83" Border.Lines="All" Border.LeftLine.Color="DarkGray" Border.TopLine.Color="White" Border.RightLine.Color="DarkGray" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Ent." HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text17" Width="69.93" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="CPF:" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text22" Left="69.93" Width="100.17" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.CPF]" VertAlign="Center" Font="Arial, 7pt, style=Bold"/>
        <TextObject Name="Text23" Left="170.1" Width="40.07" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="Nº PIS:" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text26" Left="419.96" Top="12.9" Width="41.96" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="Função:" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text27" Left="461.92" Top="12.9" Width="277.45" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.FUNCAO]" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text32" Top="82.93" Width="40.82" Height="18.9" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Dia" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text33" Left="41.2" Top="82.93" Width="59.35" Height="18.9" Border.Lines="Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Tipo" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text36" Left="132.75" Top="92" Width="32.89" Height="9.83" Border.Lines="Right, Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Saí." HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text52" Left="682.39" Top="82.93" Width="37.42" Height="18.9" Border.Lines="Left, Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Adicional Noturno" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text53" Left="720.47" Top="82.93" Width="326.59" Height="18.9" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Observações" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <SubreportObject Name="repHorario" Left="740.7" Top="2" Width="306.18" Height="18.9" ReportPage="Page1" PrintOnParent="true"/>
        <TextObject Name="Text39" Left="232.09" Top="82.93" Width="128.14" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" Text="Apuração das Horas" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text44" Left="360.23" Top="82.93" Width="322.06" Height="9.83" Border.Lines="Left, Top, Bottom" Border.Color="DarkGray" Fill.Color="ButtonFace" Text="Horas Extras" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text35" Left="99.95" Top="92" Width="32.89" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" CanGrow="true" GrowToBottom="true" Text="Ent." HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text34" Left="99.91" Top="82.93" Width="132.3" Height="9.83" Border.Lines="All" Border.Color="DarkGray" Fill.Color="ButtonFace" Text="Pontos Registrados" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text28" Left="69.93" Top="26.8" Width="669.44" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.DS_LOCAL_TRABALHO]&#13;&#10;" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text24" Left="210.17" Width="529.2" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="[SqlFuncionario.PIS]" VertAlign="Center" Font="Arial, 7pt"/>
        <TextObject Name="Text19" Top="26.8" Width="69.93" Height="13.23" Border.Lines="Bottom" Border.BottomLine.Color="DarkGray" Fill.Color="ButtonFace" Text="Loc. Trabalho:" VertAlign="Center" Font="Arial, 7pt"/>
        <DataBand Name="mdtFuncionario" Top="252.67" Width="1047.06" CanGrow="true" BeforePrintEvent="mdtFuncionario_BeforePrint" CanBreak="true" DataSource="Table" KeepDetail="true">
          <DataBand Name="bndPonto" Top="254.27" Width="1047.06" Height="9.91" Visible="false" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" BeforePrintEvent="bndPonto_BeforePrint" KeepChild="true" DataSource="Table6" KeepDetail="true">
            <TextObject Name="Text55" Left="41.2" Top="0.08" Width="59.35" Height="9.83" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.DS_TP_DIA_PONTO]" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text57" Left="132.75" Width="32.89" Height="9.83" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.SAIDA_01]&lt;sup&gt;[SqlPonto.SAIDA_01_DIA]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt" TextRenderType="HtmlParagraph">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text58" Left="165.56" Width="32.89" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.ENTRADA_02]&lt;sup&gt;[SqlPonto.ENTRADA_02_DIA]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt" TextRenderType="HtmlParagraph">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text59" Left="198.45" Width="33.64" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.SAIDA_02]&lt;sup&gt;[SqlPonto.SAIDA_02_DIA]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt" TextRenderType="HtmlParagraph">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text60" Left="232.09" Width="34.02" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_NORMAL]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text61" Left="266.11" Width="32.13" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_ATRASO]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text62" Left="297.86" Width="32.13" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_SAIDA_ANTECIPADA]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text63" Left="329.75" Width="30.43" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_FALTA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text64" Left="360.23" Width="44.98" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_EXTRA_1]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text65" Left="405.22" Width="49.14" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" CanBreak="false" Text="[SqlPonto.HR_EXTRA_2]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text66" Left="454.36" Width="44.98" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_EXTRA_3]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text67" Left="499.34" Width="49.14" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_EXTRA_4]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text68" Left="548.48" Width="52.92" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_EXTRA_5]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text69" Left="601.4" Width="49.14" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_EXTRA_6]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text70" Left="650.16" Width="32.13" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_EXTRA_NAO_AUTORIZADA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text71" Left="682.29" Top="0.08" Width="37.8" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.HR_ADICIONAL_NOTURNO]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text72" Left="720.47" Top="0.08" Width="326.59" Height="9.83" Border.Lines="Left, Right" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.OBS]" VertAlign="Center" Font="Arial, 5pt">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text56" Left="99.95" Width="32.89" Height="9.83" Border.Lines="Left, Right" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlPonto.ENTRADA_01]&lt;sup&gt;[SqlPonto.ENTRADA_01_DIA]&lt;/sup&gt;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt" TextRenderType="HtmlParagraph">
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <TextObject Name="Text54" Width="40.82" Height="9.83" Visible="false" Border.Lines="Left, Right" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="&lt;b&gt;[SqlPonto.DT_PONTO]&lt;/b&gt; - [SqlPonto.DIA_SEMANA]" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextRenderType="HtmlParagraph">
              <Formats>
                <CustomFormat Format="dd/MM"/>
                <GeneralFormat/>
              </Formats>
              <Highlight>
                <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="WhiteSmoke" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
              </Highlight>
            </TextObject>
            <ChildBand Name="bndOutrosRegistros" Top="265.78" Width="1047.06" Height="9.91" Border.Lines="Top" Border.Color="DarkGray" CanGrow="true" BeforePrintEvent="bndOutrosRegistros_BeforePrint" KeepChild="true">
              <TextObject Name="memDiaOutrosRegistros" Width="40.82" Height="9.83" Border.Lines="Left, Right" Border.Color="DarkGray" VertAlign="Bottom" Font="Arial, 5pt, style=Bold" TextRenderType="HtmlParagraph">
                <Formats>
                  <DateFormat/>
                  <GeneralFormat/>
                </Formats>
                <Highlight>
                  <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                </Highlight>
              </TextObject>
              <TextObject Name="Text76" Left="266.11" Width="31.75" Height="9.83" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text77" Left="297.86" Width="31.75" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text78" Left="329.75" Width="30.43" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text79" Left="360.23" Width="44.98" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text80" Left="405.22" Width="49.14" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanBreak="false" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text81" Left="454.36" Width="44.98" Height="9.83" Border.Lines="Top" Border.TopLine.Color="White" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text82" Left="454.36" Width="44.98" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text83" Left="499.34" Width="49.14" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text84" Left="601.4" Width="49.14" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text85" Left="548.48" Width="52.92" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text86" Left="650.16" Top="0.08" Width="32.13" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text87" Left="720.47" Top="0.08" Width="326.59" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <SubreportObject Name="repOutrosRegistros" Left="100.17" Width="131.92" Height="9.83" ReportPage="pagOutrosRegistros" PrintOnParent="true"/>
              <TextObject Name="Text142" Left="682.29" Width="38.18" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="Text75" Left="232.09" Width="34.02" Height="9.83" Border.Lines="Left, Right" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              <TextObject Name="memTipoDiaOutrosRegistros" Left="41.2" Top="0.08" Width="58.63" Height="9.83" Border.Lines="Right" Border.Color="DarkGray" VertAlign="Bottom" Font="Arial, 5pt, style=Bold">
                <Highlight>
                  <Condition Expression="[colorirTipoDia] == 0 &amp; [Row#] % 2 == 1" Fill.Color="Gainsboro" Font="Arial, 10pt" ApplyFill="true" ApplyTextFill="false"/>
                </Highlight>
              </TextObject>
              <ChildBand Name="bndApuracaoCargaHoraria" Top="277.29" Width="1047.06" Height="9.83" CanGrow="true" BeforePrintEvent="bndApuracaoCargaHoraria_BeforePrint" KeepChild="true">
                <TextObject Name="Text101" Left="100.17" Width="131.92" Height="9.83" Border.Lines="Top, Bottom" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
                <TextObject Name="Text88" Left="232.09" Width="34.02" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_NORMAL]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text89" Left="266.11" Width="32.13" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_ATRASO]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text90" Left="297.86" Width="32.13" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_SAIDA_ANTECIPADA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text91" Left="329.73" Width="30.43" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_FALTA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text92" Left="360.23" Width="44.98" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_1]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text93" Left="405.22" Width="49.14" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_2]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text94" Left="454.36" Width="44.98" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_3]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text95" Left="499.34" Width="49.14" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_4]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text96" Left="548.48" Width="52.92" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_5]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text97" Left="601.44" Width="49.14" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_6]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text98" Left="650.16" Width="32.13" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_EXTRA_NAO_AUTORIZADA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text99" Left="682.29" Width="38.18" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlPonto.HR_ADICIONAL_NOTURNO]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text100" Left="720.47" Width="326.59" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" VertAlign="Center" Font="Arial, 5pt"/>
                <TextObject Name="Text102" Width="99.91" Height="9.83" Border.Lines="Left, Right, Bottom" Border.Color="DarkGray" Text="Apuração da Carga Horária" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
              </ChildBand>
            </ChildBand>
          </DataBand>
          <DataBand Name="bndSomaPonto" Top="288.72" Width="1047.06" Height="19.28" Border.Lines="Top" Border.Color="DarkGray" CanGrow="true" BeforePrintEvent="bndSomaPonto_BeforePrint" KeepChild="true" DataSource="Table5">
            <TextObject Name="Text121" Left="300.51" Top="9.45" Width="80.14" Height="9.83" Border.Lines="Top" Border.TopLine.Color="White" Text="[&quot;[H.P.]&quot;] - Horário Padrão [IIf([SqlHP.QTD_HP] == 0 , &quot;&quot;, IIf([SqlHP.QTD_HP] == 1 , &quot;(1 registro)&quot;, &quot;(&quot; + [SqlHP.QTD_HP] + &quot; registros)&quot;))]          &#13;&#10;" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text109" Left="454.36" Width="44.98" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_3]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text110" Left="499.34" Width="49.14" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_4]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text111" Left="548.48" Width="52.92" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_5]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text112" Left="601.4" Width="49.14" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_6]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text113" Left="650.16" Width="32.13" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_NAO_AUTORIZADA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text118" Top="9.45" Width="100.17" Height="9.83" Border.Lines="Top" Border.TopLine.Color="White" Text="[&quot;[*]&quot;] - Lançado manualmente          " VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text119" Left="100.17" Top="9.45" Width="80.14" Height="9.83" Border.Lines="Top" Border.TopLine.Color="White" Text="[&quot;[^]&quot;] - Pré Assinalado  " VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text120" Left="180.31" Top="9.45" Width="120.2" Height="9.83" Border.Lines="Top" Border.TopLine.Color="White" Text="[&quot;[A.M.]&quot;] - Ausência de Marcação [IIf([SqlAM.QTD_AM] == 0 , &quot;&quot;, IIf([SqlAM.QTD_AM] == 1 , &quot;(1 registro)&quot;, &quot;(&quot; + [SqlAM.QTD_AM] + &quot; registros)&quot;))]          &#13;&#10;" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text114" Left="682.29" Width="38.18" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_ADICIONAL_NOTURNO]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text115" Left="720.47" Width="326.59" Height="9.83" Border.Lines="Left, Right, Bottom" Border.Color="DarkGray" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text117" Width="99.98" Height="9.83" Border.Lines="Left, Right, Bottom" Border.Color="DarkGray" Text="Totais" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
            <TextObject Name="Text105" Left="297.86" Width="32.13" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_SAIDA_ANTECIPADA]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text106" Left="329.73" Width="30.43" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.hr_falta]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text107" Left="360.23" Width="44.98" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_1]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text108" Left="405.22" Width="49.14" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_EXTRA_2]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text104" Left="266.11" Width="32.13" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_ATRASO]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text103" Left="232.09" Width="34.02" Height="9.83" Border.Lines="Left, Bottom" Border.Color="DarkGray" Text="[SqlSomaPonto.HR_NORMAL]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
            <TextObject Name="Text116" Left="100.17" Width="131.92" Height="9.83" Border.Lines="Bottom" Border.Color="DarkGray" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
          </DataBand>
        </DataBand>
        <GroupFooterBand Name="grfPonto" Top="309.6" Width="1047.06"/>
      </GroupHeaderBand>
      <GroupFooterBand Name="grfFuncionario" Top="311.2" Width="1047.06" Height="52.8">
        <TextObject Name="Text122" Top="0.45" Width="1047.06" Height="18.9" Border.Lines="Top" Border.TopLine.Color="White" Text="Reconheço com exatidão das horas constantes de acordo com a minha frequência no intevalo de [SqlFuncionario.DT_INICIAL] a [SqlFuncionario.DT_FINAL]. Nos termos da Portaria MTB Nº 3626 de 13/11/1991 art.13, o presente &quot;Cartão Ponto&quot; substitui o quadro de horário de Trabalho.&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
        <TextObject Name="Text143" Left="100.17" Top="43.35" Width="323.95" Height="9.45" Border.Lines="Top" Text="[SqlFuncionario.nome]" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
        <TextObject Name="Text144" Left="623.7" Top="42.8" Width="323.95" Height="9.45" Border.Lines="Top" Text="RESPONSÁVEL" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      </GroupFooterBand>
    </GroupHeaderBand>
    <inherited Name="BndRodape" Top="365.6">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
  <ReportPage Name="Page1" ZOrder="1" PaperWidth="81" Watermark.Font="Arial, 60pt">
    <DataBand Name="mdtHorarioContratual" Top="21.17" Width="230.58" Height="9.83" CanGrow="true" BeforePrintEvent="mdtHorarioContratual_BeforePrint" DataSource="Table1">
      <TextObject Name="Text133" Width="50.35" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.DS_DIA]" Font="Arial, 5pt"/>
      <TextObject Name="Text134" Left="50.27" Width="29.86" Height="9.83" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.ENTRADA_01]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      <TextObject Name="Text135" Left="80.14" Width="29.86" Height="9.83" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.SAIDA_01]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      <TextObject Name="Text136" Left="110" Width="29.86" Height="9.83" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.ENTRADA_02]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      <TextObject Name="Text137" Left="139.86" Width="29.86" Height="9.83" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.SAIDA_02]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      <TextObject Name="Text138" Left="169.72" Width="29.86" Height="9.83" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.ENTRADA_03]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      <TextObject Name="Text139" Left="199.58" Width="29.86" Height="9.83" Border.Lines="Right" Border.Color="LightGray" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.SAIDA_03]&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      <ChildBand Name="bndHorarioContratualCargaHoraria" Top="31.75" Width="230.58" Height="9.83" CanGrow="true" BeforePrintEvent="bndHorarioContratualCargaHoraria_BeforePrint">
        <TextObject Name="Text140" Width="170.1" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.DS_TP_CARGA_HORARIA]&#13;&#10;" VertAlign="Center" Font="Arial, 5pt"/>
        <TextObject Name="Text141" Left="170.1" Width="59.35" Height="9.83" Border.Lines="Right" Border.Color="LightGray" CanGrow="true" GrowToBottom="true" Text="[SqlHorarioContratual.CARGA_HORARIA] Hrs.&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt"/>
      </ChildBand>
      <DataHeaderBand Name="cabHorario" Width="230.58" Height="9.83" CanGrow="true" BeforePrintEvent="cabHorario_BeforePrint">
        <TextObject Name="Text124" Width="50.35" Height="9.83" Border.Lines="Left" Border.Color="DarkGray" Fill.Color="Silver" Font="Arial, 5pt"/>
        <TextObject Name="Text125" Left="50.27" Width="29.86" Height="9.83" Border.Lines="Left" Border.Color="White" Fill.Color="Silver" Text="ENT 1" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text126" Left="80.14" Width="29.86" Height="9.83" Border.Lines="Left" Border.Color="White" Fill.Color="Silver" Text="SAI 1" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text127" Left="110" Width="29.86" Height="9.83" Border.Lines="Left" Border.Color="White" Fill.Color="Silver" Text="ENT 2" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text128" Left="139.86" Width="29.86" Height="9.83" Border.Lines="Left" Border.Color="White" Fill.Color="Silver" Text="SAI 2" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text129" Left="169.72" Width="29.86" Height="9.83" Border.Lines="Left" Border.Color="White" Fill.Color="Silver" Text="ENT 3" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <TextObject Name="Text130" Left="199.58" Width="29.86" Height="9.83" Border.Lines="Left, Right" Border.Color="LightGray" Fill.Color="Silver" Text="SAI 3" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        <ChildBand Name="cabCargaHoraria" Top="10.58" Width="230.58" Height="9.83" CanGrow="true" BeforePrintEvent="cabCargaHoraria_BeforePrint">
          <TextObject Name="Text131" Width="169.72" Height="9.83" Border.Lines="Left, Right" Border.Color="DarkGray" Fill.Color="Silver" CanGrow="true" GrowToBottom="true" Text="CARGA HORÁRIA" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
          <TextObject Name="Text132" Left="169.72" Width="59.72" Height="9.83" Border.Lines="Right" Border.Color="LightGray" Fill.Color="Silver" CanGrow="true" GrowToBottom="true" Text="HORAS" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold" TextFill.Color="White"/>
        </ChildBand>
      </DataHeaderBand>
      <DataFooterBand Name="ftrHorario" Top="42.33" Width="230.58" Border.Color="Aqua" BeforePrintEvent="ftrHorario_BeforePrint">
        <LineObject Name="Line1" Top="-0.1" Width="229.45" Border.Color="Gainsboro"/>
        <ChildBand Name="ftrCargaHoraria" Top="43.08" Width="230.58" Border.Color="SaddleBrown" BeforePrintEvent="ftrCargaHoraria_BeforePrint"/>
      </DataFooterBand>
    </DataBand>
  </ReportPage>
  <ReportPage Name="pagOutrosRegistros" ZOrder="2" Watermark.Font="Arial, 60pt">
    <DataBand Name="Data1" Width="32.89" Height="18.9" CanGrow="true" Guides="0,0" DataSource="Table7" Columns.Count="4" Columns.Width="32.89">
      <TextObject Name="Text123" Left="3" Width="28.35" Height="18.9" CanGrow="true" GrowToBottom="true" CanBreak="false" Text="[SqlOutrosRegistros.HR_REGISTRO]&lt;sup&gt;[SqlOutrosRegistros.HR_REGISTRO_DIA]&lt;/sup&gt;&#13;&#10;" Font="Arial, 5pt"/>
    </DataBand>
  </ReportPage>
</inherited>
