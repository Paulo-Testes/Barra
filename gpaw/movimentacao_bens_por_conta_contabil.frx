<?xml version="1.0" encoding="utf-8"?>
<inherited BaseReport="..\..\..\..\..\..\..\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\Documents\PESSOAS\gsr-reports\base\paisagem.frx" BaseReportAbsolutePath="..\..\..\..\..\..\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\designer-FRX\Documents\PESSOAS\gsr-reports\base\paisagem.frx" ScriptLanguage="CSharp" ReportInfo.Created="02/01/2024 10:35:21" ReportInfo.Modified="08/01/2025 14:16:06" ReportInfo.CreatorVersion="2025.1.10.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
    private void parent_BndCabecalho_BeforePrint(object sender, EventArgs e)
    {
      string titulo1 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_1&quot;);
      string titulo2 = (String)Report.GetColumnValue(&quot;SqlModulo.titulo_2&quot;);

      if (string.IsNullOrWhiteSpace(titulo1) &amp;&amp; string.IsNullOrWhiteSpace(titulo2))
      {
        TxtTituloRelatorio.Top = TxtTituloModulo1.Top;
        TxtPeriodo.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo1))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        TxtTituloModulo2.Top = TxtTituloModulo1.Top;
        BndCabecalho.Height = (float)75.6;
      } 
      else if (string.IsNullOrWhiteSpace(titulo2))
      {
        TxtPeriodo.Top = TxtTituloRelatorio.Top;
        TxtTituloRelatorio.Top = TxtTituloModulo2.Top;
        BndCabecalho.Height = (float)75.6;
      }
      
      ImgBrasao.Height = BndCabecalho.Height;
      ImgLogo.Height = BndCabecalho.Height;
    }    
    
    private void parent_BndFiltro_BeforePrint(object sender, EventArgs e)
    {
      BndFiltro.Visible = !string.IsNullOrWhiteSpace((String)Report.GetParameterValue(&quot;filtro&quot;));
    }    
    
    private void parent_BndRodape_BeforePrint(object sender, EventArgs e)
    {
      if (string.IsNullOrWhiteSpace((String)Report.GetColumnValue(&quot;SqlEntidade.endereco&quot;))) 
      {
        TxtRodape.Top = TxtEndereco.Top;
        TxtPaginacao.Top = TxtEndereco.Top;
        TxtEndereco.Visible = false;
        BndRodape.Height = (float)15.12; 
      }
      
      TxtRodape.Text = (String)Report.GetColumnValue(&quot;SqlEntidade.sigla&quot;);

      long personalizado = (Int64)Report.GetParameterValue(&quot;personalizado&quot;);
      long imprimirUsuario = (Int64)Report.GetParameterValue(&quot;imprimirUsuario&quot;);
      long imprimirData = (Int64)Report.GetParameterValue(&quot;imprimirData&quot;);

      if (imprimirUsuario == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (String)Report.GetColumnValue(&quot;SqlUsuario.nome&quot;) + (String)Report.GetColumnValue(&quot;SqlUsuario.ds_usuario&quot;);
      }

      if (personalizado == 1)
      {
        TxtRodape.Text += &quot; | PERSONALIZADO&quot;;
      }
      else if (personalizado == 2)
      {
        TxtRodape.Text += &quot; | EXCLUSIVO&quot;;
      }

      if (imprimirData == 1)
      {
        TxtRodape.Text += &quot; | &quot; + (DateTime)Report.GetVariableValue(&quot;Date&quot;);
      }
    }      

    private void mdtMovimento_BeforePrint(object sender, EventArgs e)
    {
      mdtMovimento.Visible = ((Int32)Report.GetColumnValue(&quot;SqlMovimentacao.NIVEL&quot;) == 2);
      lnTop.Visible = ((Int64)Report.GetParameterValue(&quot;impDetalhamento&quot;) == 1);
      lnBottom.Visible = ((Int64)Report.GetParameterValue(&quot;impDetalhamento&quot;) == 1);

      if ((Int64)Report.GetParameterValue(&quot;impDetalhamento&quot;) == 1)
      {
        mdtMovimento.Fill = new SolidFill(SystemColors.Control); // clBtnFace = SystemColors.Control
      }
    }

    private void bndDetalhamento_BeforePrint(object sender, EventArgs e)
    {
      bndDetalhamento.Visible = ((Int32)Report.GetColumnValue(&quot;SqlMovimentacao.NIVEL&quot;) == 3);
    }

    private void bndTotal_BeforePrint(object sender, EventArgs e)
    {
      bndTotal.Visible = ((Int32)Report.GetColumnValue(&quot;SqlMovimentacao.NIVEL&quot;) == 1);
    }
  }
}</ScriptText>
  <Dictionary>
    <PostgresDataConnection Name="Connection" ConnectionString="rijcmlqiSaocAniJQNoKNFeaTFzMe98Srvu/H0B5rG99iH0rlAD52+0S9jQVqtbGjnQ1fJfcaegeqkp60BrLd+YLnR4XqyfZaBNherXEOpLePTulRqrY+ChMEL6VHdEuu5eaQq8E+ZDa9Ad9YImM+XDJvP1O2YFf9Cb4aOFb6D98IPU+Yk=">
      <TableDataSource Name="SqlEntidade" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" PropName="Table" Enabled="true" SelectCommand="select coalesce(enti.ds_entidade, lice.ds_licenciado) as nome&#13;&#10;     , pess.documento_formatado as cnpj&#13;&#10;     , lice.imagem as brasao&#13;&#10;     , coalesce(enti.sigla, lice.sigla) as sigla&#13;&#10;     , enti.imagem as logo&#13;&#10;     , case when enti.id_entidade is not null then ende.endereco end as endereco&#13;&#10;     , fone.contato as telefone&#13;&#10;     , mail.contato as email&#13;&#10;     , site.contato as site&#13;&#10;  from sis_licenciado            lice&#13;&#10;  left join sis_entidade         enti on enti.id_entidade        = :id_entidade&#13;&#10;  left join sis_pessoa           pess on pess.id_pessoa_juridica = enti.id_pessoa_juridica&#13;&#10;  left join sis_pessoa_endereco  ende on ende.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and ende.principal          = 1&#13;&#10;  left join sis_pessoa_contato   fone on fone.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and fone.id_tp_contato      = 2&#13;&#10;                                     and fone.principal          = true&#13;&#10;  left join sis_pessoa_contato   mail on mail.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and mail.id_tp_contato      = 1&#13;&#10;                                     and mail.principal          = true&#13;&#10;  left join sis_pessoa_contato   site on site.id_pessoa          = pess.id_pessoa&#13;&#10;                                     and site.id_tp_contato      = 4&#13;&#10;                                     and site.principal          = true&#13;&#10; limit 1">
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="endereco" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="telefone" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="cnpj" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="brasao" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="sigla" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="logo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Byte[]" BindableControl="Picture"/>
        <Column Name="email" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="site" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_entidade" DataType="9" Expression="[idEntidade]"/>
      </TableDataSource>
      <TableDataSource Name="SqlModulo" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" PropName="Table2" Enabled="true" SelectCommand="select a.titulo_1&#13;&#10;     , a.titulo_2&#13;&#10;  from sis_modulo a&#13;&#10; where a.id_modulo = :id_modulo">
        <Column Name="titulo_1" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="titulo_2" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_modulo" DataType="9" Expression="[idModulo]"/>
      </TableDataSource>
      <TableDataSource Name="SqlUsuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.Int32" PropName="Table1" Enabled="true" SelectCommand="select log.nome&#13;&#10;     , case when usu.ds_usuario is not null then ' (' || trim(usu.ds_usuario) || ')' end as ds_usuario &#13;&#10;  from sis_login log &#13;&#10;  left join sis_usuario usu on usu.id_usuario = :id_usuario&#13;&#10; where log.id_login = :id_login&#13;&#10; limit 1">
        <Column Name="ds_usuario" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <Column Name="nome" Restrictions="DontMove, DontResize, DontModify, DontEdit, DontDelete" DataType="System.String"/>
        <CommandParameter Name="id_login" DataType="9" Expression="[idLogin]"/>
        <CommandParameter Name="id_usuario" DataType="9" Expression="[idUsuario]"/>
      </TableDataSource>
      <TableDataSource Name="Table" Alias="SqlMovimentacao" DataType="System.Int32" Enabled="true" SelectCommand="SELECT CAST(CASE WHEN B6.ID_SEQUENCIA = 1 THEN 'TXX'&#13;&#10;                 WHEN B6.ID_SEQUENCIA = 2 THEN 'T'|| LPAD(TRIM(A6.CD_GRUPO_AUDESP),16, '0')&#13;&#10;                 WHEN B6.ID_SEQUENCIA = 3 THEN 'T'|| LPAD(TRIM(A6.CD_GRUPO_AUDESP),16, '0') || LPAD(A6.CD_PATRIMONIO, 8, '0')&#13;&#10;            END AS VARCHAR(30)) AS CHAVE&#13;&#10;     , CAST(TRIM(CASE WHEN B6.ID_SEQUENCIA = 1 THEN 'TOTAL'&#13;&#10;                      WHEN B6.ID_SEQUENCIA = 2 THEN CAST(SUBSTRING(A6.CD_GRUPO_AUDESP FROM 1 FOR 15) ||' - '||SUBSTRING(TRIM(UPPER(A6.DS_GRUPO_AUDESP)) FROM 1 FOR 237 ) AS VARCHAR (255))&#13;&#10;                      WHEN B6.ID_SEQUENCIA = 3 THEN CAST(SUBSTRING(LPAD(A6.CD_PATRIMONIO, 8, '0') || ' - ' || A6.DS_PATRIMONIO FROM 1 FOR 255) AS VARCHAR(255))&#13;&#10;                 END ) AS VARCHAR(255)) AS GRUPO&#13;&#10;     , B6.ID_SEQUENCIA   AS NIVEL&#13;&#10;     , A6.CP_MES_INI&#13;&#10;     , A6.CP_MES_FIN&#13;&#10;     , CASE WHEN B6.ID_SEQUENCIA = 3 THEN A6.CD_PATRIMONIO          ELSE NULL END AS CD_PATRIMONIO&#13;&#10;     , CASE WHEN B6.ID_SEQUENCIA = 3 THEN TRIM(A6.DS_PATRIMONIO)    ELSE NULL END AS DS_PATRIMONIO&#13;&#10;     , CASE WHEN B6.ID_SEQUENCIA = 3 THEN A6.DT_AQUISICAO           ELSE NULL END AS DT_AQUISICAO&#13;&#10;     , CASE WHEN B6.ID_SEQUENCIA = 3 THEN A6.DT_BAIXA               ELSE NULL END AS DT_BAIXA&#13;&#10;&#13;&#10;     , SUM(ROUND(A6.SD_BRUTO_ANT             , 2)) AS SD_BRUTO_ANT&#13;&#10;     , SUM(ROUND(A6.SD_DEPRE_ANT             , 2)) AS SD_DEPRE_ANT&#13;&#10;     , SUM(ROUND(A6.SD_LIQUI_ANT             , 2)) AS SD_LIQUI_ANT&#13;&#10;&#13;&#10;     , SUM(ROUND(A6.VL_AQUIS_INCORP_PER      , 2)) AS VL_AQUIS_INCORP_PER&#13;&#10;     , SUM(ROUND(A6.VL_ATUALIZACAO_PER       , 2)) AS VL_ATUALIZACAO_PER&#13;&#10;     , SUM(ROUND(A6.VL_ATUALIZACAO_TRANSF_PER, 2)) AS VL_ATUALIZACAO_TRANSF_PER&#13;&#10;     , SUM(ROUND(A6.VL_DEPRE_PER             , 2)) AS VL_DEPRE_PER&#13;&#10;     , SUM(ROUND(A6.VL_DEPRE_TRANSF_PER      , 2)) AS VL_DEPRE_TRANSF_PER&#13;&#10;     , SUM(ROUND(A6.VL_BAIXA_BRUTA_PER       , 2)) AS VL_BAIXA_BRUTA_PER&#13;&#10;     , SUM(ROUND(A6.VL_BAIXA_DEPRE_PER       , 2)) AS VL_BAIXA_DEPRE_PER&#13;&#10;     , SUM(ROUND(A6.SD_BRUTO_ATUAL           , 2)) AS SD_BRUTO_ATUAL&#13;&#10;     , SUM(ROUND(A6.SD_DEPRE_ATUAL           , 2)) AS SD_DEPRE_ATUAL&#13;&#10;     , SUM(ROUND(A6.SD_LIQUI_ATUAL           , 2)) AS SD_LIQUI_ATUAL&#13;&#10;&#13;&#10;&#13;&#10;     , CASE WHEN ( ROUND(SUM(A6.VL_DEPRE_TRANSF_PER      ), 2) &lt;&gt; 0 )&#13;&#10;              OR ( ROUND(SUM(A6.VL_ATUALIZACAO_TRANSF_PER), 2) &lt;&gt; 0 ) THEN 1 ELSE 0 END AS IMP_DET_TRANSF&#13;&#10;&#13;&#10;  FROM (SELECT A5.CP_MES_INI&#13;&#10;             , A5.CP_MES_FIN&#13;&#10;             , A5.CD_GRUPO_AUDESP&#13;&#10;             , A5.DS_GRUPO_AUDESP&#13;&#10;             , A5.CD_PATRIMONIO&#13;&#10;             , A5.DS_PATRIMONIO&#13;&#10;             , A5.DT_AQUISICAO&#13;&#10;             , CASE WHEN A5.DT_BAIXA &gt; MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)) THEN NULL ELSE A5.DT_BAIXA END AS DT_BAIXA&#13;&#10;&#13;&#10;             , A5.SD_BRUTO_ANT&#13;&#10;             , A5.SD_DEPRE_ANT&#13;&#10;             , A5.SD_LIQUI_ANT&#13;&#10;&#13;&#10;             , A5.VL_AQUIS_INCORP_PER&#13;&#10;&#13;&#10;             , A5.VL_ATUALIZACAO_PER&#13;&#10;             , A5.VL_ATUALIZACAO_TRANSF_PER&#13;&#10;&#13;&#10;             , A5.VL_DEPRE_PER&#13;&#10;             , A5.VL_DEPRE_TRANSF_PER&#13;&#10;&#13;&#10;             , A5.VL_BAIXA_BRUTA_PER&#13;&#10;             , A5.VL_BAIXA_DEPRE_PER&#13;&#10;             , A5.VL_BAIXA_LIQUI_PER&#13;&#10;&#13;&#10;             , ROUND(A5.SD_BRUTO_ANT             ,2)&#13;&#10;             + ROUND(A5.VL_AQUIS_INCORP_PER      ,2)&#13;&#10;             + ROUND(A5.VL_ATUALIZACAO_PER       ,2)&#13;&#10;             + ROUND(A5.VL_ATUALIZACAO_TRANSF_PER,2)&#13;&#10;             + ROUND(A5.VL_BAIXA_BRUTA_PER       ,2)    AS SD_BRUTO_ATUAL&#13;&#10;&#13;&#10;             , ROUND(A5.SD_DEPRE_ANT             ,2)&#13;&#10;             + ROUND(A5.VL_DEPRE_PER             ,2)&#13;&#10;             + ROUND(A5.VL_DEPRE_TRANSF_PER      ,2)&#13;&#10;             + ROUND(A5.VL_BAIXA_DEPRE_PER       ,2)    AS SD_DEPRE_ATUAL&#13;&#10;&#13;&#10;             , ROUND(A5.SD_LIQUI_ANT             ,2)&#13;&#10;             + ROUND(A5.VL_AQUIS_INCORP_PER      ,2)&#13;&#10;             + ROUND(A5.VL_ATUALIZACAO_PER       ,2)&#13;&#10;             + ROUND(A5.VL_ATUALIZACAO_TRANSF_PER,2)&#13;&#10;             + ROUND(A5.VL_DEPRE_PER             ,2)&#13;&#10;             + ROUND(A5.VL_DEPRE_TRANSF_PER      ,2)&#13;&#10;             + ROUND(A5.VL_BAIXA_LIQUI_PER       ,2)    AS SD_LIQUI_ATUAL&#13;&#10;&#13;&#10;          FROM (SELECT CAST(:MES_INI AS INTEGER)                                          AS CP_MES_INI&#13;&#10;                     , CAST(:MES_FIN AS INTEGER)                                          AS CP_MES_FIN&#13;&#10;                     , COALESCE( A4.CD_GRUPO_AUDESP, 'XX')                                AS CD_GRUPO_AUDESP&#13;&#10;                     , COALESCE( A4.DS_GRUPO_AUDESP, 'XX - CONTA CONTÁBIL NÃO INFORMADA') AS DS_GRUPO_AUDESP&#13;&#10;                     , CAST(A4.CD_PATRIMONIO AS INT)  AS CD_PATRIMONIO&#13;&#10;                     , A4.DS_PATRIMONIO&#13;&#10;                     , A4.DT_AQUISICAO&#13;&#10;                     , A4.DT_BAIXA&#13;&#10;&#13;&#10;                     , SUM( COALESCE(A4.VL_AQUIS_INCORP_ANT ,0) )&#13;&#10;                     + SUM( COALESCE(A4.VL_ATUALIZACAO_ANT  ,0) )&#13;&#10;                     - SUM( COALESCE(A4.VL_BAIXA_BRUTA_ANT  ,0) )                   AS SD_BRUTO_ANT&#13;&#10;&#13;&#10;                     , ( SUM( COALESCE(A4.VL_AMORTIZADO_ANT   ,0) )&#13;&#10;                       + SUM( COALESCE(A4.VL_DEPRECIACAO_ANT  ,0) )&#13;&#10;                       + SUM( COALESCE(A4.VL_EXAUSTAO_ANT     ,0) )&#13;&#10;                       - SUM( COALESCE(A4.VL_BAIXA_DEPRE_ANT  ,0) ) ) *-1           AS SD_DEPRE_ANT&#13;&#10;&#13;&#10;                     , SUM( COALESCE(A4.VL_AQUIS_INCORP_ANT ,0) )&#13;&#10;                     + SUM( COALESCE(A4.VL_ATUALIZACAO_ANT  ,0) )&#13;&#10;                     - SUM( COALESCE(A4.VL_AMORTIZADO_ANT   ,0) )&#13;&#10;                     - SUM( COALESCE(A4.VL_DEPRECIACAO_ANT  ,0) )&#13;&#10;                     - SUM( COALESCE(A4.VL_EXAUSTAO_ANT     ,0) )&#13;&#10;                     - SUM( COALESCE(A4.VL_BAIXA_ANT        ,0) )                   AS SD_LIQUI_ANT&#13;&#10;&#13;&#10;&#13;&#10;                     , SUM( COALESCE(A4.VL_AQUIS_INCORP_PER      ,0) )              AS VL_AQUIS_INCORP_PER&#13;&#10;&#13;&#10;                     , SUM( COALESCE(A4.VL_ATUALIZACAO_PER       ,0) )              AS VL_ATUALIZACAO_PER&#13;&#10;                                                                                   &#13;&#10;                     , SUM( COALESCE(A4.VL_ATUALIZACAO_TRANSF_PER,0) )              AS VL_ATUALIZACAO_TRANSF_PER&#13;&#10;&#13;&#10;&#13;&#10;                     , ( SUM( COALESCE(A4.VL_AMORTIZADO_PER         ,0) )&#13;&#10;                       + SUM( COALESCE(A4.VL_DEPRECIACAO_PER        ,0) )&#13;&#10;                       + SUM( COALESCE(A4.VL_EXAUSTAO_PER           ,0) ) ) *-1     AS VL_DEPRE_PER&#13;&#10;&#13;&#10;                     , ( SUM( COALESCE(A4.VL_AMORTIZADO_TRANSF_PER  ,0) )&#13;&#10;                       + SUM( COALESCE(A4.VL_DEPRECIACAO_TRANSF_PER ,0) )&#13;&#10;                       + SUM( COALESCE(A4.VL_EXAUSTAO_TRANSF_PER    ,0) ) ) *-1     AS VL_DEPRE_TRANSF_PER&#13;&#10;&#13;&#10;&#13;&#10;                     , SUM( COALESCE(A4.VL_BAIXA_BRUTA_PER  ,0) ) *-1           AS VL_BAIXA_BRUTA_PER&#13;&#10;                     , SUM( COALESCE(A4.VL_BAIXA_DEPRE_PER  ,0) )               AS VL_BAIXA_DEPRE_PER&#13;&#10;                     , SUM( COALESCE(A4.VL_BAIXA_PER        ,0) ) *-1           AS VL_BAIXA_LIQUI_PER&#13;&#10;&#13;&#10;                  FROM (SELECT A3.REFERENCIAL&#13;&#10;                             , A3.CD_PATRIMONIO&#13;&#10;                             , A3.DS_PATRIMONIO&#13;&#10;                             , A3.CD_GRUPO_AUDESP&#13;&#10;                             , A3.DS_GRUPO_AUDESP&#13;&#10;                             , A3.DT_AQUISICAO&#13;&#10;                             , A3.DT_BAIXA&#13;&#10;                             , A3.VL_AQUIS_INCORP_ANT&#13;&#10;                             , A3.VL_AQUIS_INCORP_PER&#13;&#10;                             , A3.VL_ATUALIZACAO_ANT&#13;&#10;                             , A3.VL_ATUALIZACAO_PER&#13;&#10;                             , A3.VL_ATUALIZACAO_TRANSF_PER&#13;&#10;                             , A3.VL_AMORTIZADO_ANT&#13;&#10;                             , A3.VL_AMORTIZADO_PER&#13;&#10;                             , A3.VL_AMORTIZADO_TRANSF_PER&#13;&#10;                             , A3.VL_DEPRECIACAO_ANT&#13;&#10;                             , A3.VL_DEPRECIACAO_PER&#13;&#10;                             , A3.VL_DEPRECIACAO_TRANSF_PER&#13;&#10;                             , A3.VL_EXAUSTAO_ANT&#13;&#10;                             , A3.VL_EXAUSTAO_PER&#13;&#10;                             , A3.VL_EXAUSTAO_TRANSF_PER&#13;&#10;&#13;&#10;                             , CASE WHEN A3.DT_BAIXA &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))&#13;&#10;                                    THEN ( A3.VL_AQUIS_INCORP_ANT + A3.VL_ATUALIZACAO_ANT )&#13;&#10;                                    ELSE 0&#13;&#10;                               END AS VL_BAIXA_BRUTA_ANT&#13;&#10;&#13;&#10;                             , CASE WHEN A3.DT_BAIXA &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))                        &#13;&#10;                                    THEN ( A3.VL_AQUIS_INCORP_PER + A3.VL_ATUALIZACAO_PER + A3.VL_ATUALIZACAO_TRANSF_PER)&#13;&#10;                       &#13;&#10;                                    WHEN A3.DT_BAIXA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER))&#13;&#10;                                    THEN ( ( A3.VL_AQUIS_INCORP_ANT + A3.VL_ATUALIZACAO_ANT ) +&#13;&#10;                                           ( A3.VL_AQUIS_INCORP_PER + A3.VL_ATUALIZACAO_PER +&#13;&#10;                                             A3.VL_ATUALIZACAO_TRANSF_PER                   ) )&#13;&#10;                                    ELSE 0&#13;&#10;                               END AS VL_BAIXA_BRUTA_PER&#13;&#10;&#13;&#10;                             , CASE WHEN A3.DT_BAIXA &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))&#13;&#10;                                    THEN ( A3.VL_AMORTIZADO_ANT + A3.VL_DEPRECIACAO_ANT + A3.VL_EXAUSTAO_ANT )&#13;&#10;                                    ELSE 0&#13;&#10;                               END AS VL_BAIXA_DEPRE_ANT&#13;&#10;                       &#13;&#10;                             , CASE WHEN A3.DT_BAIXA &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))                        &#13;&#10;                                    THEN ( A3.VL_AMORTIZADO_PER + A3.VL_DEPRECIACAO_PER + A3.VL_EXAUSTAO_PER  +&#13;&#10;                                           A3.VL_AMORTIZADO_TRANSF_PER + A3.VL_DEPRECIACAO_TRANSF_PER + A3.VL_EXAUSTAO_TRANSF_PER )&#13;&#10;                       &#13;&#10;                                    WHEN A3.DT_BAIXA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER))&#13;&#10;                                    THEN ( ( A3.VL_AMORTIZADO_ANT + A3.VL_DEPRECIACAO_ANT + A3.VL_EXAUSTAO_ANT ) +&#13;&#10;                                           ( A3.VL_AMORTIZADO_PER + A3.VL_DEPRECIACAO_PER + A3.VL_EXAUSTAO_PER ) +&#13;&#10;                                           ( A3.VL_AMORTIZADO_TRANSF_PER + A3.VL_DEPRECIACAO_TRANSF_PER + A3.VL_EXAUSTAO_TRANSF_PER ) )&#13;&#10;                                    ELSE 0&#13;&#10;                               END AS VL_BAIXA_DEPRE_PER&#13;&#10;&#13;&#10;                             , CASE WHEN A3.DT_BAIXA &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))&#13;&#10;                                    THEN ( ( A3.VL_AQUIS_INCORP_ANT + A3.VL_ATUALIZACAO_ANT                      ) -&#13;&#10;                                           ( A3.VL_AMORTIZADO_ANT   + A3.VL_DEPRECIACAO_ANT + A3.VL_EXAUSTAO_ANT )  )&#13;&#10;                                    ELSE 0&#13;&#10;                               END AS VL_BAIXA_ANT&#13;&#10;                       &#13;&#10;                             , CASE WHEN A3.DT_BAIXA &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))                        &#13;&#10;                                    THEN ( ( A3.VL_AQUIS_INCORP_PER      + A3.VL_ATUALIZACAO_PER        + A3.VL_ATUALIZACAO_TRANSF_PER ) -&#13;&#10;                                           ( A3.VL_AMORTIZADO_PER        + A3.VL_DEPRECIACAO_PER        + A3.VL_EXAUSTAO_PER           ) -&#13;&#10;                                           ( A3.VL_AMORTIZADO_TRANSF_PER + A3.VL_DEPRECIACAO_TRANSF_PER + A3.VL_EXAUSTAO_TRANSF_PER    )   )&#13;&#10;                       &#13;&#10;                                    WHEN A3.DT_BAIXA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER))&#13;&#10;                                    THEN ( ( ( A3.VL_AQUIS_INCORP_ANT + A3.VL_ATUALIZACAO_ANT ) -&#13;&#10;                                             ( A3.VL_AMORTIZADO_ANT   + A3.VL_DEPRECIACAO_ANT + A3.VL_EXAUSTAO_ANT ) ) +&#13;&#10;                       &#13;&#10;                                           ( ( A3.VL_AQUIS_INCORP_PER      + A3.VL_ATUALIZACAO_PER        + A3.VL_ATUALIZACAO_TRANSF_PER ) -&#13;&#10;                                             ( A3.VL_AMORTIZADO_PER        + A3.VL_DEPRECIACAO_PER        + A3.VL_EXAUSTAO_PER           ) -&#13;&#10;                                             ( A3.VL_AMORTIZADO_TRANSF_PER + A3.VL_DEPRECIACAO_TRANSF_PER + A3.VL_EXAUSTAO_TRANSF_PER    )   )&#13;&#10;                                         )&#13;&#10;                                    ELSE 0&#13;&#10;                               END AS VL_BAIXA_PER&#13;&#10;                       &#13;&#10;                          FROM (SELECT A2.REFERENCIAL&#13;&#10;                                     , A2.CD_PATRIMONIO&#13;&#10;                                     , A2.DS_PATRIMONIO&#13;&#10;                                     , A2.CD_GRUPO_AUDESP&#13;&#10;                                     , A2.DS_GRUPO_AUDESP&#13;&#10;                                     , A2.DT_AQUISICAO&#13;&#10;                                     , A2.DT_BAIXA&#13;&#10;                                     , A2.VL_AQUIS_INCORP_ANT&#13;&#10;                                     , A2.VL_AQUIS_INCORP_PER&#13;&#10;                                     , A2.VL_ATUALIZACAO_ANT&#13;&#10;                                     , A2.VL_ATUALIZACAO_PER&#13;&#10;                                     , A2.VL_ATUALIZACAO_TRANSF_PER&#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'A'                                  )&#13;&#10;                                                  AND (  B2.DATA  &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))   )&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_AMORTIZADO_ANT&#13;&#10;                               &#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'A'                                  )&#13;&#10;                                                  AND ( B2.TRANSFERENCIA = 0                                    )&#13;&#10;                                                  AND ( B2.DATA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_AMORTIZADO_PER&#13;&#10;                               &#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'A'                                  )&#13;&#10;                                                  AND ( B2.TRANSFERENCIA = 1                                    )&#13;&#10;                                                  AND ( B2.DATA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_AMORTIZADO_TRANSF_PER&#13;&#10;&#13;&#10;&#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO) = 'D'                                    )&#13;&#10;                                                  AND ( B2.DATA  &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))    )&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_DEPRECIACAO_ANT&#13;&#10;                               &#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'D'                                  )&#13;&#10;                                                  AND ( B2.TRANSFERENCIA = 0                                    )&#13;&#10;                                                  AND ( B2.DATA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_DEPRECIACAO_PER&#13;&#10;                               &#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'D'                                  )&#13;&#10;                                                  AND ( B2.TRANSFERENCIA = 1                                    )&#13;&#10;                                                  AND ( B2.DATA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_DEPRECIACAO_TRANSF_PER&#13;&#10;&#13;&#10;&#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO) = 'E'                                    )&#13;&#10;                                                  AND ( B2.DATA  &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER))    )&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_EXAUSTAO_ANT&#13;&#10;                               &#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'E'                                  )&#13;&#10;                                                  AND ( B2.TRANSFERENCIA = 0                                    )&#13;&#10;                                                  AND ( B2.DATA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_EXAUSTAO_PER&#13;&#10;                               &#13;&#10;                                     , SUM( CASE WHEN ( UPPER(B2.TIPO)   = 'E'                                  )&#13;&#10;                                                  AND ( B2.TRANSFERENCIA = 1                                    )&#13;&#10;                                                  AND ( B2.DATA BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                 THEN ROUND(B2.VL_DEPRECIADO, 2)&#13;&#10;                                                 ELSE 0&#13;&#10;                                             END ) AS VL_EXAUSTAO_TRANSF_PER&#13;&#10;&#13;&#10;&#13;&#10;                                  FROM (SELECT A1.REFERENCIAL&#13;&#10;                                             , A1.CD_PATRIMONIO&#13;&#10;                                             , A1.DS_PATRIMONIO&#13;&#10;                                             , A1.CD_GRUPO_AUDESP&#13;&#10;                                             , A1.DS_GRUPO_AUDESP&#13;&#10;                                             , A1.DT_AQUISICAO&#13;&#10;                                             , A1.DT_BAIXA&#13;&#10;                                             , A1.VL_AQUIS_INCORP_ANT&#13;&#10;                                             , A1.VL_AQUIS_INCORP_PER&#13;&#10;                                             , SUM( CASE WHEN ( B1.DT_ATUALIZACAO &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) )&#13;&#10;                                                         THEN B1.VL_ALTERACAO&#13;&#10;                                                         ELSE 0&#13;&#10;                                                     END ) AS VL_ATUALIZACAO_ANT&#13;&#10;                                       &#13;&#10;                                             , SUM( CASE WHEN B1.TP_LANCAMENTO &lt;&gtlt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) )&#13;&#10;                                                           THEN COALESCE(A.C007,0)&#13;&#10;                                                           ELSE 0&#13;&#10;                                                       END AS VL_AQUIS_INCORP_ANT&#13;&#10;                                       &#13;&#10;                                                    , CASE WHEN ( A.C006 BETWEEN MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) AND MAKE_DATE(CAST(:ANO_FIN AS INTEGER), CAST(:MES_FIN AS INTEGER), CAST(:DIA_FIN AS INTEGER)))&#13;&#10;                                                           THEN COALESCE(A.C007,0)&#13;&#10;                                                           ELSE 0&#13;&#10;                                                       END AS VL_AQUIS_INCORP_PER&#13;&#10;                                       &#13;&#10;                                                 FROM GPAW_CADASTRO A&#13;&#10;                                                      LEFT JOIN API_CONTA_CONTABIL B ON B.ID_CONTA_CONTABIL = CAST(A.C024 AS INTEGER)&#13;&#10;                                               ) A1&#13;&#10;                                               LEFT JOIN GPAW_CADASTRO_VAL B1 ON B1.REF_PATRIMONIO = A1.REFERENCIAL&#13;&#10;&#13;&#10;                                         GROUP BY&#13;&#10;                                               A1.REFERENCIAL&#13;&#10;                                             , A1.CD_PATRIMONIO&#13;&#10;                                             , A1.DS_PATRIMONIO&#13;&#10;                                             , A1.CD_GRUPO_AUDESP&#13;&#10;                                             , A1.DS_GRUPO_AUDESP&#13;&#10;                                             , A1.DT_AQUISICAO&#13;&#10;                                             , A1.DT_BAIXA&#13;&#10;                                             , A1.VL_AQUIS_INCORP_ANT&#13;&#10;                                             , A1.VL_AQUIS_INCORP_PER&#13;&#10;                                       ) A2&#13;&#10;                                       LEFT JOIN GPAW_DEPRECIACAO B2 ON B2.REF_PATRIMONIO = A2.REFERENCIAL&#13;&#10;                               &#13;&#10;                                 GROUP BY&#13;&#10;                                       A2.REFERENCIAL&#13;&#10;                                     , A2.CD_PATRIMONIO&#13;&#10;                                     , A2.DS_PATRIMONIO&#13;&#10;                                     , A2.CD_GRUPO_AUDESP&#13;&#10;                                     , A2.DS_GRUPO_AUDESP&#13;&#10;                                     , A2.DT_AQUISICAO&#13;&#10;                                     , A2.DT_BAIXA&#13;&#10;                                     , A2.VL_AQUIS_INCORP_ANT&#13;&#10;                                     , A2.VL_AQUIS_INCORP_PER&#13;&#10;                                     , A2.VL_ATUALIZACAO_ANT&#13;&#10;                                     , A2.VL_ATUALIZACAO_PER&#13;&#10;                                     , A2.VL_ATUALIZACAO_TRANSF_PER&#13;&#10;                               ) A3&#13;&#10;               &#13;&#10;                       )A4&#13;&#10;                 WHERE EXTRACT( YEAR FROM A4.DT_AQUISICAO ) &lt;= :ANO_INI :: FLOAT&#13;&#10;               &#13;&#10;                 GROUP BY&#13;&#10;                       A4.CD_GRUPO_AUDESP&#13;&#10;                     , A4.DS_GRUPO_AUDESP&#13;&#10;                     , A4.CD_PATRIMONIO&#13;&#10;                     , A4.DS_PATRIMONIO&#13;&#10;                     , A4.DT_AQUISICAO&#13;&#10;                     , A4.DT_BAIXA&#13;&#10;               ) A5&#13;&#10;       &#13;&#10;         WHERE ( NOT ( ROUND( A5.SD_LIQUI_ANT                , 2) = 0        AND&#13;&#10;                     ( A5.DT_BAIXA  &lt; MAKE_DATE(CAST(:ANO_INI AS INTEGER), CAST(:MES_INI AS INTEGER), CAST(:DIA_INI AS INTEGER)) )   AND&#13;&#10;                       ROUND( A5.VL_AQUIS_INCORP_PER         , 2) = 0        AND&#13;&#10;                       ROUND( A5.VL_ATUALIZACAO_PER          , 2) = 0        AND&#13;&#10;                       ROUND( A5.VL_ATUALIZACAO_TRANSF_PER   , 2) = 0        AND&#13;&#10;                       ROUND( A5.VL_DEPRE_PER                , 2) = 0        AND&#13;&#10;                       ROUND( A5.VL_DEPRE_TRANSF_PER         , 2) = 0        AND&#13;&#10;                       ROUND( A5.VL_BAIXA_LIQUI_PER          , 2) = 0           ) )&#13;&#10;            OR ( 1 = CAST(:IMP_ZERADO  AS INTEGER) AND&#13;&#10;                 1 = CAST(:IMP_DETALHE AS INTEGER)    )&#13;&#10;&#13;&#10;       ) A6&#13;&#10;       LEFT JOIN SIS_SEQUENCIA B6 ON B6.ID_SEQUENCIA &lt;= 3&#13;&#10; WHERE ( B6.ID_SEQUENCIA &lt;= 2          )&#13;&#10;    OR ( 1 = CAST(:IMP_DETALHE AS INTEGER) )&#13;&#10;&#13;&#10;&#13;&#10; GROUP BY 1,2,3,4,5,6,7,8,9&#13;&#10;&#13;&#10; ORDER BY 1,2,3">
        <Column Name="chave" DataType="System.String"/>
        <Column Name="grupo" DataType="System.String"/>
        <Column Name="nivel" DataType="System.Int32"/>
        <Column Name="cp_mes_ini" DataType="System.Int32"/>
        <Column Name="cp_mes_fin" DataType="System.Int32"/>
        <Column Name="cd_patrimonio" DataType="System.Int32"/>
        <Column Name="ds_patrimonio" DataType="System.String"/>
        <Column Name="dt_aquisicao" DataType="System.DateTime"/>
        <Column Name="dt_baixa" DataType="System.DateTime"/>
        <Column Name="sd_bruto_ant" DataType="System.Double"/>
        <Column Name="sd_depre_ant" DataType="System.Double"/>
        <Column Name="sd_liqui_ant" DataType="System.Double"/>
        <Column Name="vl_aquis_incorp_per" DataType="System.Double"/>
        <Column Name="vl_atualizacao_per" DataType="System.Double"/>
        <Column Name="vl_atualizacao_transf_per" DataType="System.Double"/>
        <Column Name="vl_depre_per" DataType="System.Double"/>
        <Column Name="vl_depre_transf_per" DataType="System.Double"/>
        <Column Name="vl_baixa_bruta_per" DataType="System.Double"/>
        <Column Name="vl_baixa_depre_per" DataType="System.Double"/>
        <Column Name="sd_bruto_atual" DataType="System.Double"/>
        <Column Name="sd_depre_atual" DataType="System.Double"/>
        <Column Name="sd_liqui_atual" DataType="System.Double"/>
        <Column Name="imp_det_transf" DataType="System.Int32"/>
        <CommandParameter Name="ANO_FIN" DataType="22" Expression="ExtractYear([dataFinal])"/>
        <CommandParameter Name="MES_FIN" DataType="22" Expression="ExtractMonth([dataFinal])"/>
        <CommandParameter Name="DIA_FIN" DataType="22" Expression="ExtractDay([dataFinal])"/>
        <CommandParameter Name="MES_INI" DataType="22" Expression="ExtractMonth([dataInicial])"/>
        <CommandParameter Name="ANO_INI" DataType="22" Expression="ExtractYear([dataInicial])"/>
        <CommandParameter Name="DIA_INI" DataType="22" Expression="ExtractDay([dataInicial])"/>
        <CommandParameter Name="IMP_ZERADO" DataType="9" Expression="[impZerado]"/>
        <CommandParameter Name="IMP_DETALHE" DataType="9" Expression="[impDetalhamento]"/>
      </TableDataSource>
    </PostgresDataConnection>
    <Parameter Name="tituloRelatorio" DataType="System.String" Expression="&quot;Movimentação de Bens por Grupo de Conta Contábil&quot;"/>
    <Parameter Name="idEntidade" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idModulo" DataType="System.Int64" Expression="21"/>
    <Parameter Name="idLogin" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idUsuario" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="idRelatorioFiltro" DataType="System.Int64" Expression="-1"/>
    <Parameter Name="periodo" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="filtro" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="personalizado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="imprimirUsuario" DataType="System.Int64" Expression="1"/>
    <Parameter Name="imprimirData" DataType="System.Int64" Expression="1"/>
    <Parameter Name="dataInicial" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="dataFinal" DataType="System.String" Expression="&quot;&quot;"/>
    <Parameter Name="impZerado" DataType="System.Int64" Expression="0"/>
    <Parameter Name="impDetalhamento" DataType="System.Int64" Expression="1"/>
  </Dictionary>
  <inherited Name="MainPage">
    <inherited Name="BndCabecalho">
      <inherited Name="ImgBrasao" ImageAlign="Center_Center"/>
      <inherited Name="TxtEntidade"/>
      <inherited Name="ImgLogo" ImageAlign="Center_Center"/>
      <inherited Name="TxtTituloModulo1"/>
      <inherited Name="TxtTituloModulo2"/>
      <inherited Name="TxtTituloRelatorio"/>
      <inherited Name="TxtPeriodo"/>
      <inherited Name="BndFiltro" Top="98.67">
        <inherited Name="TxtFiltro"/>
      </inherited>
    </inherited>
    <DataBand Name="mdtMovimento" ZOrder="0" Top="164.83" Width="1047.06" Height="13.99" BeforePrintEvent="mdtMovimento_BeforePrint" DataSource="Table">
      <LineObject Name="lnBottom" Top="13.99" Width="1047.06"/>
      <LineObject Name="lnTop" Width="1047.06"/>
      <TextObject Name="Text21" Width="331.88" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.grupo]" VertAlign="Center" Font="Tahoma, 5pt"/>
      <TextObject Name="Text22" Left="331.88" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_bruto_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text23" Left="396.9" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_depre_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text24" Left="461.92" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_liqui_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text25" Left="526.93" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_aquis_incorp_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text26" Left="591.95" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_atualizacao_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text27" Left="656.96" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_depre_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text28" Left="982.04" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_liqui_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text29" Left="721.98" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_baixa_bruta_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text30" Left="852.01" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_bruto_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text31" Left="917.03" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_depre_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <TextObject Name="Text32" Left="787" Width="65.02" Height="13.99" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_baixa_depre_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
      <ChildBand Name="bndDetalhamento" Top="182.99" Width="1047.06" Height="12.1" BeforePrintEvent="bndDetalhamento_BeforePrint">
        <TextObject Name="Text33" Left="331.75" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_bruto_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text34" Left="396.77" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_depre_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text35" Left="461.79" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_liqui_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text36" Left="526.8" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_aquis_incorp_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text37" Left="591.82" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_atualizacao_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text38" Left="656.83" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_depre_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text39" Left="981.91" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_liqui_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text40" Left="721.85" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_baixa_bruta_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text41" Left="851.88" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_bruto_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text42" Left="916.9" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.sd_depre_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text43" Left="786.87" Width="65.02" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.vl_baixa_depre_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" Font="Tahoma, 5pt"/>
        <TextObject Name="Text44" Left="232.09" Width="49.9" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.dt_aquisicao]" HideZeros="true" Format="Date" Format.Format="d" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 5pt"/>
        <TextObject Name="Text45" Left="281.99" Width="49.9" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.dt_baixa]" HideZeros="true" Format="Date" Format.Format="d" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 5pt"/>
        <TextObject Name="Text46" Width="232.09" Height="12.1" Border.Lines="Left, Right" Text="[SqlMovimentacao.grupo]" Padding="15, 0, 2, 0" VertAlign="Center" Font="Tahoma, 5pt"/>
        <ChildBand Name="bndTotal" Top="199.25" Width="1047.06" Height="24.2" BeforePrintEvent="bndTotal_BeforePrint">
          <TextObject Name="Text47" Left="331.75" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.sd_bruto_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text48" Left="396.77" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.sd_depre_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text49" Left="461.79" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.sd_liqui_ant]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text50" Left="526.8" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_aquis_incorp_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text51" Left="591.82" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_atualizacao_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text52" Left="656.83" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_depre_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text53" Left="981.91" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.sd_liqui_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text54" Left="721.85" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_baixa_bruta_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text55" Left="851.88" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.sd_bruto_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text56" Left="916.9" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.sd_depre_atual]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text57" Left="786.87" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_baixa_depre_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text58" Width="331.88" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.grupo]" VertAlign="Bottom" Font="Tahoma, 5pt, style=Bold"/>
          <TextObject Name="Text59" Left="591.9" Top="12.1" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_atualizacao_transf_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text60" Left="656.96" Top="12.1" Width="65.02" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="[SqlMovimentacao.vl_depre_transf_per]" Format="Number" Format.UseLocale="true" Format.DecimalDigits="2" HorzAlign="Right" VertAlign="Center" Font="Tahoma, 5pt"/>
          <TextObject Name="Text61" Left="721.98" Top="12.1" Width="325.08" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Font="Tahoma, 5pt"/>
          <TextObject Name="Text62" Top="12.1" Width="591.95" Height="12.1" Border.Lines="All" Fill.Color="210, 210, 210" Text="Transferência de saldo da conta depreciação para a conta do bem, devido a reavaliações:" VertAlign="Center" Font="Tahoma, 5pt"/>
        </ChildBand>
      </ChildBand>
      <DataHeaderBand Name="hdrMovimento" Top="121.73" Width="1047.06" Height="38.93" RepeatOnEveryPage="true">
        <TextObject Name="Text1" Width="331.88" Height="38.93" Border.Lines="All" Fill.Color="210, 210, 210" Text="ESPECIFICAÇÃO" VertAlign="Bottom" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="txtCabAquisicao" Left="232.09" Width="49.9" Height="38.93" VisibleExpression="[impDetalhamento] == 1" Border.Lines="All" Fill.Color="210, 210, 210" Text="AQUISIÇÃO" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="txtCabBaixa" Left="281.99" Width="49.9" Height="38.93" VisibleExpression="[impDetalhamento] == 1" Border.Lines="All" Fill.Color="210, 210, 210" Text="BAIXA" HorzAlign="Center" VertAlign="Bottom" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text4" Left="331.88" Top="12.85" Width="195.05" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Saldo" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text5" Left="396.9" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Depr./Amort." HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text6" Left="526.93" Width="325.08" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="MOVIMENTAÇÃO NO PERÍODO" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text7" Left="331.88" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Bruto" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text8" Left="331.88" Width="195.05" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="ANTERIOR" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text9" Left="461.92" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Líquido" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text10" Left="852.01" Width="195.05" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="SEGUINTE" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text11" Left="526.93" Top="12.85" Width="65.02" Height="26.08" Border.Lines="All" Fill.Color="210, 210, 210" Text="Aquisição" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text12" Left="591.95" Top="12.85" Width="65.02" Height="26.08" Border.Lines="All" Fill.Color="210, 210, 210" Text="Atualização" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text13" Left="656.96" Top="12.85" Width="65.02" Height="26.08" Border.Lines="All" Fill.Color="210, 210, 210" Text="Depredação/ Amortização" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text14" Left="721.98" Top="12.85" Width="130.03" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Baixa" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
        <TextObject Name="Text15" Left="721.98" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Bruta" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text16" Left="787" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Depreciação&#13;&#10;" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text17" Left="982.04" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Líquido" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text18" Left="917.03" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Depr./Amort" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text19" Left="852.01" Top="26.08" Width="65.02" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Bruto" HorzAlign="Center" VertAlign="Center" Font="Tahoma, 5pt, style=Bold"/>
        <TextObject Name="Text20" Left="852.01" Top="12.85" Width="195.05" Height="12.85" Border.Lines="All" Fill.Color="210, 210, 210" Text="Saldo" HorzAlign="Center" VertAlign="Center" Font="Arial, 5pt, style=Bold"/>
      </DataHeaderBand>
    </DataBand>
    <ReportSummaryBand Name="ReportSummary1" ZOrder="-1" Top="227.62" Width="1047.06">
      <LineObject Name="Line1" Width="1047.06" Diagonal="true"/>
    </ReportSummaryBand>
    <inherited Name="BndRodape" Top="231.79">
      <inherited Name="TxtRodape"/>
      <inherited Name="TxtPaginacao">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
      <inherited Name="TxtEndereco">
        <Formats>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
          <GeneralFormat/>
        </Formats>
      </inherited>
    </inherited>
  </inherited>
</inherited>
